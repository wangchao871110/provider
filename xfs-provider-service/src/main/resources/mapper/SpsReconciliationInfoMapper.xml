<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xfs.finance.dao.SpsReconciliationInfoDao">
    <resultMap id="BaseResultMap" type="com.xfs.finance.model.SpsReconciliationInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="record_id" property="recordId" jdbcType="BIGINT"/>
        <result column="type_id" property="typeId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="id_no" property="idNo" jdbcType="VARCHAR"/>
        <result column="social_city" property="socialCity" jdbcType="VARCHAR"/>
        <result column="fund_city" property="fundCity" jdbcType="VARCHAR"/>
        <result column="attach_month" property="attachMonth" jdbcType="VARCHAR"/>
        <result column="social_corp" property="socialCorp" jdbcType="REAL"/>
        <result column="socail_per" property="socailPer" jdbcType="REAL"/>
        <result column="social_total" property="socialTotal" jdbcType="REAL"/>
        <result column="fund_corp" property="fundCorp" jdbcType="REAL"/>
        <result column="fund_per" property="fundPer" jdbcType="REAL"/>
        <result column="fund_total" property="fundTotal" jdbcType="REAL"/>
        <result column="corp_total" property="corpTotal" jdbcType="REAL"/>
        <result column="per_total" property="perTotal" jdbcType="REAL"/>
        <result column="service_fee" property="serviceFee" jdbcType="REAL"/>
        <result column="total" property="total" jdbcType="REAL"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="type_name" property="typeName" jdbcType="VARCHAR"/>
        <result column="bill_month" property="billMonth" jdbcType="VARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sps_reconciliation_info
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.xfs.finance.model.SpsReconciliationInfo" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into sps_reconciliation_info (id, record_id, type_id,
        name, id_no, social_city,
        fund_city, attach_month, social_corp,
        socail_per, social_total, fund_corp,
        fund_per, fund_total, corp_total,
        per_total, service_fee, total,
        remark, type,type_name, bill_month)
        values (#{id,jdbcType=BIGINT}, #{recordId,jdbcType=BIGINT}, #{typeId,jdbcType=BIGINT},
        #{name,jdbcType=VARCHAR}, #{idNo,jdbcType=VARCHAR}, #{socialCity,jdbcType=VARCHAR},
        #{fundCity,jdbcType=VARCHAR}, #{attachMonth,jdbcType=VARCHAR}, #{socialCorp,jdbcType=REAL},
        #{socailPer,jdbcType=REAL}, #{socialTotal,jdbcType=REAL}, #{fundCorp,jdbcType=REAL},
        #{fundPer,jdbcType=REAL}, #{fundTotal,jdbcType=REAL}, #{corpTotal,jdbcType=REAL},
        #{perTotal,jdbcType=REAL}, #{serviceFee,jdbcType=REAL}, #{total,jdbcType=REAL},
        #{remark,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},#{typeName,jdbcType=VARCHAR}, #{billMonth,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.xfs.finance.model.SpsReconciliationInfo">
    update sps_reconciliation_info
    set record_id = #{recordId,jdbcType=BIGINT},
      type_id = #{typeId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      id_no = #{idNo,jdbcType=VARCHAR},
      social_city = #{socialCity,jdbcType=VARCHAR},
      fund_city = #{fundCity,jdbcType=VARCHAR},
      attach_month = #{attachMonth,jdbcType=VARCHAR},
      social_corp = #{socialCorp,jdbcType=REAL},
      socail_per = #{socailPer,jdbcType=REAL},
      social_total = #{socialTotal,jdbcType=REAL},
      fund_corp = #{fundCorp,jdbcType=REAL},
      fund_per = #{fundPer,jdbcType=REAL},
      fund_total = #{fundTotal,jdbcType=REAL},
      corp_total = #{corpTotal,jdbcType=REAL},
      per_total = #{perTotal,jdbcType=REAL},
      service_fee = #{serviceFee,jdbcType=REAL},
      total = #{total,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR},
      type_name = #{typeName,jdbcType=VARCHAR},
      bill_month = #{billMonth,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, record_id, type_id, name, id_no, social_city, fund_city, attach_month, 
    social_corp, socail_per, social_total, fund_corp, fund_per, fund_total, corp_total, 
    per_total, service_fee, total, remark, type,type_name, bill_month
    from sps_reconciliation_info
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, record_id, type_id, name, id_no, social_city, fund_city, attach_month,
        social_corp, socail_per, social_total, fund_corp, fund_per, fund_total, corp_total,
        per_total, service_fee, total, remark, type,type_name, bill_month
        from sps_reconciliation_info
    </select>
    <sql id="Sql_Pagination">
        <if test="offset != -1 &amp;&amp; rows != -1">
            LIMIT #{offset}, #{rows}
        </if>
    </sql>
    <select id="selectInfoByrecords" resultType="com.xfs.finance.model.SpsReconciliationInfo" parameterType="list">
        select id, record_id, type_id, name, id_no, social_city, fund_city, attach_month,
        social_corp, socail_per, social_total, fund_corp, fund_per, fund_total, corp_total,
        per_total, service_fee, total, remark, type,type_name, bill_month
        from sps_reconciliation_info
        WHERE record_id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <delete id="deleteByKeys" parameterType="list">
        delete from sps_reconciliation_info
        where id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <sql id="page_sql">
    (select o.name ,o.id_no , o.attach_month ,o.type_name, o.type_ids,o.bill_months, o.social_city ,o.fund_city ,o.l_info_ids,
        t.r_info_ids ,t.r_type_name,
        ifnull(o.social_total,0) as l_social_total ,ifnull(o.fund_total,0) as l_fund_total , ifnull(t.social_total,0) as r_social_total ,ifnull(t.fund_total,0) as r_fund_total ,
        (ifnull(o.social_total,0) - ifnull(t.social_total,0)) as diff_social , (ifnull(o.fund_total,0) - ifnull(t.fund_total,0) ) as diff_fund ,
        (ifnull(o.social_total,0) - ifnull(t.social_total,0) + ifnull(o.fund_total,0) - ifnull(t.fund_total,0) ) as diff_total
     from
        (select name, id_no, attach_month ,
            GROUP_CONCAT(DISTINCT type_name) as type_name,
            GROUP_CONCAT(DISTINCT bill_month) as bill_months,
            GROUP_CONCAT(DISTINCT type_id) as type_ids,
            GROUP_CONCAT(DISTINCT id) as l_info_ids,
            GROUP_CONCAT(DISTINCT social_city) as social_city,
            GROUP_CONCAT(DISTINCT fund_city) as fund_city,
            sum(social_total) as social_total, sum(fund_total) as fund_total
        from sps_reconciliation_info
            where 1=1
            <if test="typeId != null">
                and type_id = #{typeId}
            </if>
            <if test=" lType != null">
                and type = #{lType}
            </if>
            <if test="attachMonth != null and attachMonth != '' ">
                and attach_month = #{attachMonth}
            </if>
            <if test="billMonth != null and billMonth != '' ">
                and bill_month = #{billMonth}
            </if>
            <if test="fundCity != null and fundCity != '' ">
                and fund_city = #{fundCity}
            </if>
            <if test="socialCity != null and socialCity != '' ">
                and social_city = #{socialCity}
            </if>
        group by id_no ,name ,attach_month ) o
      left join
        (select name, id_no, attach_month ,sum(social_total) as social_total, sum(fund_total) as fund_total,
          GROUP_CONCAT(DISTINCT id) as r_info_ids,
          GROUP_CONCAT(DISTINCT type_name) as r_type_name
        from sps_reconciliation_info
        where 1=1
        <if test=" rType != null">
            and type = #{rType}
        </if>
        <if test="attachMonth != null and attachMonth != '' ">
            and attach_month = #{attachMonth}
        </if>
        <if test="billMonth != null and billMonth != '' ">
            and bill_month = #{billMonth}
        </if>
        <if test="fundCity != null and fundCity != '' ">
            and fund_city = #{fundCity}
        </if>
        <if test="socialCity != null and socialCity != '' ">
            and social_city = #{socialCity}
        </if>
        group by id_no ,name ,attach_month ) t  on o.name = t.name and o.id_no = t.id_no and o.attach_month = t.attach_month
    ) ps
    where 1=1
    <if test="diffType != null and diffType == 1 ">
        and ps.diff_total != 0
    </if>
    <if test="diffType != null and diffType == 2 ">
        and ps.diff_total = 0
    </if>
    <if test="empName != null and empName != '' ">
        and ps.name like concat('%',#{empName},'%')
    </if>
    <if test="idNo != null and idNo != '' ">
        and ps.id_no = #{idNo}
    </if>
    </sql>


    <select id="queryByPage" resultType="com.xfs.finance.vo.SpsReconciliationInfoVo" parameterType="map">
        select ps.*
        from <include refid="page_sql" />
        order by ps.diff_total asc
        limit #{offset} , #{limit}
    </select>

    <select id="queryTotal" resultType="java.lang.Integer">
        SELECT count(*)
        from <include refid="page_sql" />
    </select>

    <select id="sumTotalByQuery" resultType="java.lang.Float">
        SELECT sum(ps.diff_total)
        from <include refid="page_sql" />
    </select>
    <select id="sumTotal" resultType="java.lang.Float">
        select (ifnull(o.social_total,0) - ifnull(t.social_total,0) + ifnull(o.fund_total,0) - ifnull(t.fund_total,0) ) as diff_total from
            (select sum(social_total) as social_total, sum(fund_total) as fund_total ,1 as id
                    from sps_reconciliation_info
                    where type = 0) o
            left join
            (select sum(social_total) as social_total, sum(fund_total) as fund_total ,1 as id
                    from sps_reconciliation_info
                    where type = 1) t
            on o.id = t.id
    </select>

    <select id="querySocialCity" resultType="java.lang.String">
        SELECT DISTINCT  social_city
        from sps_reconciliation_info
        where type = #{type}
    </select>

    <select id="queryFundCity" resultType="java.lang.String">
        SELECT DISTINCT  fund_city
        from sps_reconciliation_info
        where type = #{type}
    </select>


</mapper>