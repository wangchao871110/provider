<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BD_INSURANCEFIELDS" > 
<!-- Result Map-->
<resultMap id="result_map_BD_INSURANCEFIELDS" type="com.xfs.business.model.BdInsurancefields" >
	<result column="id" property="id"/>
	<result column="insurance_id" property="insuranceId"/>
	<result column="field_id" property="fieldId"/>
</resultMap>
       
<!-- bd_insurancefields table all fields -->
<sql id="Base_Column_List" >
	 id,insurance_id,field_id
</sql>

<!-- 查询条件 -->
<sql id="Example_Where_Clause">
  <trim prefix=" WHERE " prefixOverrides="AND ">
	<if test="id != null" >and id = #{id}</if>
	<if test="insuranceId != null" >and insurance_id = #{insuranceId}</if>
	<if test="fieldId != null" >and field_id = #{fieldId}</if>
</trim>
</sql>

<!-- 查询条件 带模糊查询 以及 时间起始查询 -->
<sql id="Example_Where_Clause2">
  <trim prefix=" WHERE " prefixOverrides="AND ">
    <if test="id != null">AND id = #{id}</if>
    <if test="insuranceId != null">AND insurance_id = '${insuranceId}'</if>
    <if test="fieldId != null">AND field_id = '${fieldId}'</if>
  </trim>
</sql>

<!-- 插入记录 -->
<insert id="InsertBD_INSURANCEFIELDS" parameterType="Object" >
  INSERT INTO BD_INSURANCEFIELDS (
  <trim prefix=" " prefixOverrides=",">
	<if test="id != null ">,id</if>
	<if test="insuranceId != null ">,insurance_id</if>
	<if test="fieldId != null ">,field_id</if>
  </trim>
  )  VALUES (
  <trim prefix=" " prefixOverrides=",">
	<if test="id != null ">,#{id}</if>
	<if test="insuranceId != null ">,#{insuranceId}</if>
	<if test="fieldId != null ">,#{fieldId}</if>
  </trim>
  )
  <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
	SELECT LAST_INSERT_ID() AS ID
  </selectKey>
</insert>

<!-- 根据id，修改记录-->  
<update id="UpdateBD_INSURANCEFIELDS" parameterType="Object" >
UPDATE BD_INSURANCEFIELDS 
  <trim prefix=" SET " prefixOverrides=",">
	<if test="id != null ">,id=#{id}</if>
	<if test="insuranceId != null ">,insurance_id=#{insuranceId}</if>
	<if test="fieldId != null ">,field_id=#{fieldId}</if>
  </trim>
WHERE ID=#{id}
</update>
 
<!-- 删除记录 -->
<delete id="DeleteBD_INSURANCEFIELDS">DELETE FROM BD_INSURANCEFIELDS WHERE ID=#{id}</delete>
<!-- 社保公积金字段 列表总数-->
<select id="CountFindAllBD_INSURANCEFIELDS" resultType="java.lang.Integer">SELECT count(1) as value FROM BD_INSURANCEFIELDS</select>
<select id="CountBD_INSURANCEFIELDS" resultType="java.lang.Integer">SELECT count(1) as value FROM BD_INSURANCEFIELDS WHERE ID=#{id}</select>
<!-- 根据id查询 社保公积金字段 -->
<select id="FindByPK" resultMap="result_map_BD_INSURANCEFIELDS" parameterType="Object">SELECT <include refid="Base_Column_List" /> FROM BD_INSURANCEFIELDS WHERE ID=#{id}</select>

<!-- 根据各字段条件带模糊查询  社保公积金字段 -->
<select id="FreeFindBD_INSURANCEFIELDS" resultMap="result_map_BD_INSURANCEFIELDS" parameterType="Object">
	SELECT <include refid="Base_Column_List" /> FROM BD_INSURANCEFIELDS 
	 <include refid="Example_Where_Clause2" />
</select>
<!-- 根据各字段条件带模糊查询  社保公积金字段 记录数 -->
<select id="CountFreeFindBD_INSURANCEFIELDS" resultType="java.lang.Integer">
SELECT count(1) as value FROM BD_INSURANCEFIELDS 
 <include refid="Example_Where_Clause2" />
</select>
<!-- 根据各字段条件带排序  社保公积金字段 -->
<select id="FreeFindBD_INSURANCEFIELDSOrdered" resultMap="result_map_BD_INSURANCEFIELDS" parameterType="Object">
	SELECT <include refid="Base_Column_List" /> FROM BD_INSURANCEFIELDS 
	 <include refid="Example_Where_Clause2" />
	 ORDER BY ${_orderBy}
</select>

<!-- *****************************  温馨提示：  ***************************** -->
<!-- **                                                                    ** -->
<!-- ** 以上为自动生成代码，请勿改动或删除。如有新sql添加请在下方区域内填写** -->
<!-- **                                             ** 2016/05/16 16:25:44 ** -->
<!-- ************************************************************************ -->




</mapper>   
