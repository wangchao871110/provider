<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BD_INSURANCE" > 
<!-- Result Map-->
<resultMap id="result_map_BD_INSURANCE" type="com.xfs.business.model.BdInsurance" >
	<result column="insurance_id" property="insuranceId"/>
	<result column="code" property="code"/>
	<result column="name" property="name"/>
	<result column="insurance_fund_type" property="insuranceFundType"/>
</resultMap>
       
<!-- bd_insurance table all fields -->
<sql id="Base_Column_List" >
	 insurance_id,code,name,insurance_fund_type
</sql>

<!-- 查询条件 -->
<sql id="Example_Where_Clause">
  <trim prefix=" WHERE " prefixOverrides="AND ">
	<if test="insuranceId != null" >and insurance_id = #{insuranceId}</if>
	<if test="code != null" >and code = #{code}</if>
	<if test="name != null" >and name = #{name}</if>
	<if test="insuranceFundType != null" >and insurance_fund_type = #{insuranceFundType}</if>
</trim>
</sql>

<!-- 查询条件 带模糊查询 以及 时间起始查询 -->
<sql id="Example_Where_Clause2">
  <trim prefix=" WHERE " prefixOverrides="AND ">
    <if test="insuranceId != null">AND insurance_id = '${insuranceId}'</if>
    <if test="code != null">AND code like '%${code}%'</if>
    <if test="codeEq != null">AND code = #{codeEq}</if>
    <if test="name != null">AND name like '%${name}%'</if>
    <if test="nameEq != null">AND name = #{nameEq}</if>
    <if test="insuranceFundType != null">AND insurance_fund_type like '%${insuranceFundType}%'</if>
    <if test="insuranceFundTypeEq != null">AND insurance_fund_type = #{insuranceFundTypeEq}</if>
  </trim>
</sql>

<!-- 插入记录 -->
<insert id="InsertBD_INSURANCE" parameterType="Object" >
  INSERT INTO BD_INSURANCE (
  <trim prefix=" " prefixOverrides=",">
	<if test="insuranceId != null ">,insurance_id</if>
	<if test="code != null ">,code</if>
	<if test="name != null ">,name</if>
	<if test="insuranceFundType != null ">,insurance_fund_type</if>
  </trim>
  )  VALUES (
  <trim prefix=" " prefixOverrides=",">
	<if test="insuranceId != null ">,#{insuranceId}</if>
	<if test="code != null ">,#{code}</if>
	<if test="name != null ">,#{name}</if>
	<if test="insuranceFundType != null ">,#{insuranceFundType}</if>
  </trim>
  )
  <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="insuranceId">
	SELECT LAST_INSERT_ID() AS INSURANCE_ID
  </selectKey>
</insert>

<!-- 根据id，修改记录-->  
<update id="UpdateBD_INSURANCE" parameterType="Object" >
UPDATE BD_INSURANCE 
  <trim prefix=" SET " prefixOverrides=",">
	<if test="insuranceId != null ">,insurance_id=#{insuranceId}</if>
	<if test="code != null ">,code=#{code}</if>
	<if test="name != null ">,name=#{name}</if>
	<if test="insuranceFundType != null ">,insurance_fund_type=#{insuranceFundType}</if>
  </trim>
WHERE INSURANCE_ID=#{insuranceId}
</update>
 
<!-- 删除记录 -->
<delete id="DeleteBD_INSURANCE">DELETE FROM BD_INSURANCE WHERE INSURANCE_ID=#{insuranceId}</delete>
<!-- 保险类型 列表总数-->
<select id="CountFindAllBD_INSURANCE" resultType="java.lang.Integer">SELECT count(1) as value FROM BD_INSURANCE</select>
<select id="CountBD_INSURANCE" resultType="java.lang.Integer">SELECT count(1) as value FROM BD_INSURANCE WHERE INSURANCE_ID=#{insuranceId}</select>
<!-- 根据id查询 保险类型 -->
<select id="FindByPK" resultMap="result_map_BD_INSURANCE" parameterType="Object">SELECT <include refid="Base_Column_List" /> FROM BD_INSURANCE WHERE INSURANCE_ID=#{insuranceId}</select>

<!-- 根据各字段条件带模糊查询  保险类型 -->
<select id="FreeFindBD_INSURANCE" resultMap="result_map_BD_INSURANCE" parameterType="Object">
	SELECT <include refid="Base_Column_List" /> FROM BD_INSURANCE 
	 <include refid="Example_Where_Clause2" />
</select>
<!-- 根据各字段条件带模糊查询  保险类型 记录数 -->
<select id="CountFreeFindBD_INSURANCE" resultType="java.lang.Integer">
SELECT count(1) as value FROM BD_INSURANCE 
 <include refid="Example_Where_Clause2" />
</select>
<!-- 根据各字段条件带排序  保险类型 -->
<select id="FreeFindBD_INSURANCEOrdered" resultMap="result_map_BD_INSURANCE" parameterType="Object">
	SELECT <include refid="Base_Column_List" /> FROM BD_INSURANCE 
	 <include refid="Example_Where_Clause2" />
	 ORDER BY ${_orderBy}
</select>

<!-- *****************************  温馨提示：  ***************************** -->
<!-- **                                                                    ** -->
<!-- ** 以上为自动生成代码，请勿改动或删除。如有新sql添加请在下方区域内填写** -->
<!-- **                                             ** 2016/05/16 16:36:47 ** -->
<!-- ************************************************************************ -->
	<!--通过地区查询配置险种类型-->
	<select id="FreeFindBD_INSURANCE_BY_AREA_Ordered" resultMap="result_map_BD_INSURANCE" parameterType="Object">
	SELECT ins.* FROM BD_INSURANCE ins 
	where exists(select 0 from bs_arearatio ratio where ratio.dr=0 and ratio.area_id = #{areaId} and ratio.insurance_id = ins.insurance_id)
	ORDER BY ins.insurance_fund_type DESC ,ins.insurance_id
</select>
	<!--通过地区、户口类型、参保日期 反查险种-->
	<select id="FreeFindBD_INSURANCE_BY_AREA_LIVINGTYPE_Ordered" resultMap="result_map_BD_INSURANCE" parameterType="Object">
		select i.* from bd_insurance i LEFT JOIN  bs_arearatio o on i.insurance_id = o.insurance_id LEFT JOIN bs_arearatioscope s on o.ratio_id=s.ratio_id inner JOIN bs_arearatiover ver on o.ratio_id=ver.ratio_id and ifnull(ver.begin_period,'1900-01') &lt;= #{period} and ifnull(ver.end_period,'2099-12') &gt;= #{period} where o.area_id=#{areaId} and (s.living_type=#{livingType} or s.living_type is null) GROUP BY i.code order by i.insurance_fund_type desc,i.insurance_id asc
	</select>
</mapper>   
