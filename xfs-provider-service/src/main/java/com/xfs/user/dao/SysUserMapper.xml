<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SYS_USER" > 
<!-- Result Map-->
<resultMap id="result_map_SYS_USER" type="com.xfs.user.model.SysUser" >
	<result column="user_id" property="userId"/>
	<result column="role_id" property="roleId"/>
	<result column="role_ids" property="roleIds"/>
	<result column="role_codes" property="roleCodes"/>
	<result column="user_name" property="userName"/>
	<result column="real_name" property="realName"/>
	<result column="gender" property="gender"/>
	<result column="password" property="password"/>
	<result column="small_image" property="smallImage"/>
	<result column="email" property="email"/>
	<result column="phone" property="phone"/>
	<result column="mobile" property="mobile"/>
	<result column="qq" property="qq"/>
	<result column="msn" property="msn"/>
	<result column="last_login_dt" property="lastLoginDt"/>
	<result column="access_token" property="accessToken"/>
	<result column="user_type" property="userType"/>
	<result column="enabled" property="enabled"/>
	<result column="create_by" property="createBy"/>
	<result column="create_dt" property="createDt"/>
	<result column="modify_by" property="modifyBy"/>
	<result column="modify_dt" property="modifyDt"/>
	<result column="org_id" property="orgId"/>
	<result column="group_id" property="groupId"/>
	<result column="nick_name" property="nickName"/>
	<result column="tenant_id" property="tenantId"/>
	<result column="yht_user_id" property="yhtUserId"/>
</resultMap>
<resultMap id="result_map_SYS_USER2" type="com.xfs.user.model.SysUser" >
	<result column="user_id" property="userId"/>
	<result column="role_id" property="roleId"/>
	<result column="role_ids" property="roleIds"/>
	<result column="role_codes" property="roleCodes"/>
	<result column="user_name" property="userName"/>
	<result column="real_name" property="realName"/>
	<result column="gender" property="gender"/>
	<result column="password" property="password"/>
	<result column="small_image" property="smallImage"/>
	<result column="email" property="email"/>
	<result column="phone" property="phone"/>
	<result column="mobile" property="mobile"/>
	<result column="qq" property="qq"/>
	<result column="msn" property="msn"/>
	<result column="last_login_dt" property="lastLoginDt"/>
	<result column="access_token" property="accessToken"/>
	<result column="user_type" property="userType"/>
	<result column="enabled" property="enabled"/>
	<result column="create_by" property="createBy"/>
	<result column="create_dt" property="createDt"/>
	<result column="modify_by" property="modifyBy"/>
	<result column="modify_dt" property="modifyDt"/>
	<result column="org_id" property="orgId"/>
	<result column="group_id" property="groupId"/>
	<result column="nick_name" property="nickName"/>
	<result column="tenant_id" property="tenantId"/>
	<result column="yht_user_id" property="yhtUserId"/>
	<result column="role_name" property="roleNames"/>
	<result column="scheme_ids" property="schemeIds"/>
	<result column="core_user_id" property="coreUserId"/>
	<result column="sps" property="sps"/>
</resultMap>
       
<!-- sys_user table all fields -->
<sql id="Base_Column_List" >
	 user_id,role_id,user_name,real_name,gender,password,small_image,email,phone,mobile,qq,msn,last_login_dt,access_token,user_type,enabled,create_by,create_dt,modify_by,modify_dt,org_id,group_id,tenant_id,yht_user_id,core_user_id
</sql>
<sql id="Base_Column_List2" >
	su.user_id,su.user_name,su.real_name,su.gender,su.password,su.small_image,su.email,su.phone,su.mobile,su.qq,su.msn,su.last_login_dt,su.access_token,su.user_type,su.enabled,su.create_by,su.create_dt,su.modify_by,su.modify_dt,su.org_id,su.group_id,su.tenant_id,su.yht_user_id,su.core_user_id
</sql>

<!-- 查询条件 -->
<sql id="Example_Where_Clause">
  <trim prefix=" WHERE " prefixOverrides="AND ">
	<if test="userId != null" >and user_id = #{userId}</if>
	<if test="roleId != null" >and role_id = #{roleId}</if>
	<if test="userName != null" >and user_name = #{userName}</if>
	<if test="realName != null" >and real_name = #{realName}</if>
	<if test="gender != null" >and gender = #{gender}</if>
	<if test="password != null" >and password = #{password}</if>
	<if test="smallImage != null" >and small_image = #{smallImage}</if>
	<if test="email != null" >and email = #{email}</if>
	<if test="phone != null" >and phone = #{phone}</if>
	<if test="mobile != null" >and mobile = #{mobile}</if>
	<if test="qq != null" >and qq = #{qq}</if>
	<if test="msn != null" >and msn = #{msn}</if>
	<if test="lastLoginDt != null" >and last_login_dt = #{lastLoginDt}</if>
	<if test="accessToken != null" >and access_token = #{accessToken}</if>
	<if test="userType != null and userType != ''" >and user_type = #{userType}</if>
	<if test="enabled != null" >and enabled = #{enabled}</if>
	<if test="createBy != null" >and create_by = #{createBy}</if>
	<if test="createDt != null" >and create_dt = #{createDt}</if>
	<if test="modifyBy != null" >and modify_by = #{modifyBy}</if>
	<if test="modifyDt != null" >and modify_dt = #{modifyDt}</if>
	<if test="orgId != null" >and org_id = #{orgId}</if>
	<if test="groupId != null" >and group_id = #{groupId}</if>
	<if test="tenantId != null" >and tenant_id = #{tenantId}</if>
	<if test="yhtUserId != null" >and yht_user_id = #{yhtUserId}</if>
	<if test="dr != null" >and dr= #{dr}</if>
    <if test="dr == null" >and dr= 0</if>
</trim>
</sql>

<!-- 查询条件 带模糊查询 以及 时间起始查询 -->
<sql id="Example_Where_Clause2">
  <trim prefix=" WHERE " prefixOverrides="AND ">
    <if test="userId != null">AND user_id = '${userId}'</if>
    <if test="roleId != null">AND role_id = '${roleId}'</if>
    <if test="userName != null and userName != ''">AND (user_name like '%${userName}%' or mobile like '%${userName}%' OR email like '%${userName}%' ) </if>
    <if test="userNameEq != null">AND user_name = #{userNameEq}</if>
    <if test="realName != null">AND real_name like '%${realName}%'</if>
    <if test="realNameEq != null">AND real_name = #{realNameEq}</if>
    <if test="gender != null">AND gender like '%${gender}%'</if>
    <if test="genderEq != null">AND gender = #{genderEq}</if>
    <if test="password != null">AND password like '%${password}%'</if>
    <if test="passwordEq != null">AND password = #{passwordEq}</if>
    <if test="smallImage != null">AND small_image like '%${smallImage}%'</if>
    <if test="smallImageEq != null">AND small_image = #{smallImageEq}</if>
    <if test="email != null">AND email like '%${email}%'</if>
    <if test="emailEq != null">AND email = #{emailEq}</if>
    <if test="phone != null">AND phone like '%${phone}%'</if>
    <if test="phoneEq != null">AND phone = #{phoneEq}</if>
    <if test="mobile != null">AND mobile like '%${mobile}%'</if>
    <if test="mobileEq != null">AND mobile = #{mobileEq}</if>
    <if test="qq != null">AND qq like '%${qq}%'</if>
    <if test="qqEq != null">AND qq = #{qqEq}</if>
    <if test="msn != null">AND msn like '%${msn}%'</if>
    <if test="msnEq != null">AND msn = #{msnEq}</if>
    <if test="lastLoginDt != null">AND last_login_dt = #{lastLoginDt}</if>
    <if test="lastLoginDtFrom != null">AND last_login_dt&gt;=#{lastLoginDtFrom}</if>
	<if test="lastLoginDtTo != null">AND last_login_dt&lt;=#{lastLoginDtTo}</if>
    <if test="accessToken != null">AND access_token like '%${accessToken}%'</if>
    <if test="accessTokenEq != null">AND access_token = #{accessTokenEq}</if>
    <if test="userType != null">AND user_type like '%${userType}%'</if>
    <if test="userTypeEq != null  and userTypeEq != ''">AND user_type = #{userTypeEq}</if>
    <if test="enabled != null">AND enabled like '%${enabled}%'</if>
    <if test="createBy != null">AND create_by = '%${createBy}%'</if>
    <if test="createByEq != null">AND create_by = #{createByEq}</if>
    <if test="createDt != null">AND create_dt = #{createDt}</if>
    <if test="createDtFrom != null">AND create_dt&gt;=#{createDtFrom}</if>
	<if test="createDtTo != null">AND create_dt&lt;=#{createDtTo}</if>
    <if test="modifyBy != null">AND modify_by = '%${modifyBy}%'</if>
    <if test="modifyByEq != null">AND modify_by = #{modifyByEq}</if>
    <if test="modifyDt != null">AND modify_dt = #{modifyDt}</if>
    <if test="modifyDtFrom != null">AND modify_dt&gt;=#{modifyDtFrom}</if>
	<if test="modifyDtTo != null">AND modify_dt&lt;=#{modifyDtTo}</if>
    <if test="orgId != null">AND org_id = '${orgId}'</if>
    <if test="groupId != null">AND group_id = '${groupId}'</if>
    <if test="tenantId != null" >and tenant_id = #{tenantId}</if>
	<if test="yhtUserId != null" >and yht_user_id = #{yhtUserId}</if>
    <if test="dr != null" >and dr= #{dr}</if>
    <if test="dr == null" >and dr= 0</if>
  </trim>
</sql>

<!-- 插入记录 -->
<insert id="InsertSYS_USER" parameterType="Object" >
  INSERT INTO SYS_USER (
  <trim prefix=" " prefixOverrides=",">
	<if test="userId != null ">,user_id</if>
	<if test="roleId != null ">,role_id</if>
	<if test="userName != null ">,user_name</if>
	<if test="realName != null ">,real_name</if>
	<if test="gender != null ">,gender</if>
	<if test="password != null ">,password</if>
	<if test="smallImage != null ">,small_image</if>
	<if test="email != null ">,email</if>
	<if test="phone != null ">,phone</if>
	<if test="mobile != null ">,mobile</if>
	<if test="qq != null ">,qq</if>
	<if test="msn != null ">,msn</if>
	<if test="lastLoginDt != null ">,last_login_dt</if>
	<if test="accessToken != null ">,access_token</if>
	<if test="userType != null ">,user_type</if>
	<if test="enabled != null ">,enabled</if>
	<if test="createBy != null ">,create_by</if>
	<if test="createDt != null ">,create_dt</if>
	<if test="modifyBy != null ">,modify_by</if>
	<if test="modifyDt != null ">,modify_dt</if>
	<if test="orgId != null ">,org_id</if>
	<if test="groupId != null ">,group_id</if>
	<if test="tenantId != null" >,tenant_id</if>
	<if test="yhtUserId != null" >,yht_user_id</if>
	<if test="coreUserId != null" >,core_user_id</if>
  </trim>
  )  VALUES (
  <trim prefix=" " prefixOverrides=",">
	<if test="userId != null ">,#{userId}</if>
	<if test="roleId != null ">,#{roleId}</if>
	<if test="userName != null ">,#{userName}</if>
	<if test="realName != null ">,#{realName}</if>
	<if test="gender != null ">,#{gender}</if>
	<if test="password != null ">,#{password}</if>
	<if test="smallImage != null ">,#{smallImage}</if>
	<if test="email != null ">,#{email}</if>
	<if test="phone != null ">,#{phone}</if>
	<if test="mobile != null ">,#{mobile}</if>
	<if test="qq != null ">,#{qq}</if>
	<if test="msn != null ">,#{msn}</if>
	<if test="lastLoginDt != null ">,#{lastLoginDt}</if>
	<if test="accessToken != null ">,#{accessToken}</if>
	<if test="userType != null ">,#{userType}</if>
	<if test="enabled != null ">,#{enabled}</if>
	<if test="createBy != null ">,#{createBy}</if>
	<if test="createDt != null ">,#{createDt}</if>
	<if test="modifyBy != null ">,#{modifyBy}</if>
	<if test="modifyDt != null ">,#{modifyDt}</if>
	<if test="orgId != null ">,#{orgId}</if>
	<if test="groupId != null ">,#{groupId}</if>
	<if test="tenantId != null" >,#{tenantId}</if>
	<if test="yhtUserId != null" >,#{yhtUserId}</if>
	<if test="coreUserId != null" >,#{coreUserId}</if>
  </trim>
  )
  <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="userId">
	SELECT LAST_INSERT_ID() AS USER_ID
  </selectKey>
</insert>

<!-- 根据id，修改记录-->  
<update id="UpdateSYS_USER" parameterType="Object" >
UPDATE SYS_USER 
  <trim prefix=" SET " prefixOverrides=",">
	<if test="userId != null ">,user_id=#{userId}</if>
	<if test="roleId != null ">,role_id=#{roleId}</if>
	<if test="userName != null ">,user_name=#{userName}</if>
	<if test="realName != null ">,real_name=#{realName}</if>
	<if test="gender != null ">,gender=#{gender}</if>
	<if test="password != null ">,password=#{password}</if>
	<if test="smallImage != null ">,small_image=#{smallImage}</if>
	<if test="email != null ">,email=#{email}</if>
	<if test="phone != null ">,phone=#{phone}</if>
	<if test="mobile != null ">,mobile=#{mobile}</if>
	<if test="qq != null ">,qq=#{qq}</if>
	<if test="msn != null ">,msn=#{msn}</if>
	<if test="lastLoginDt != null ">,last_login_dt=#{lastLoginDt}</if>
	<if test="accessToken != null ">,access_token=#{accessToken}</if>
	<if test="userType != null ">,user_type=#{userType}</if>
	<if test="enabled != null ">,enabled=#{enabled}</if>
	<if test="createBy != null ">,create_by=#{createBy}</if>
	<if test="createDt != null ">,create_dt=#{createDt}</if>
	<if test="modifyBy != null ">,modify_by=#{modifyBy}</if>
	<if test="modifyDt != null ">,modify_dt=#{modifyDt}</if>
	<if test="orgId != null ">,org_id=#{orgId}</if>
	<if test="groupId != null ">,group_id=#{groupId}</if>
	<if test="tenantId != null" >,tenant_id = #{tenantId}</if>
	<if test="yhtUserId != null" >,yht_user_id = #{yhtUserId}</if>
	<if test="coreUserId != null" >,core_user_id = #{coreUserId}</if>
  </trim>
WHERE USER_ID=#{userId}
</update>
 
<!-- 删除记录 -->
<update id="DeleteSYS_USER">
 UPDATE `sys_user` SET dr = 1 WHERE USER_ID = #{userId}
</update>
<!-- 用户表 列表总数-->
<select id="CountFindAllSYS_USER" resultType="java.lang.Integer">SELECT count(1) as value FROM SYS_USER where dr = 0</select>
<select id="CountSYS_USER" resultType="java.lang.Integer">SELECT count(1) as value FROM SYS_USER WHERE USER_ID=#{userId} and dr = 0</select>
<!-- 根据id查询 用户表 -->

	<select id="CS_FindByPK" resultMap="result_map_SYS_USER" parameterType="Object">SELECT <include refid="Base_Column_List" /> FROM SYS_USER WHERE USER_ID=#{userId}</select>

	<select id="FindByPK" resultMap="result_map_SYS_USER" parameterType="Object">
	SELECT u.*,GROUP_CONCAT(r.role_id ORDER BY r.role_id ASC) as role_ids,anc.nick_name,GROUP_CONCAT(role.sys_code) as role_codes
	FROM sys_user u LEFT JOIN sys_user_role r ON u.user_id = r.user_id
	LEFT JOIN sys_role role ON role.role_id = r.role_id
	LEFT JOIN op_user_ancillary anc ON  u.user_id=anc.user_id
	where u.USER_ID=#{userId}
	GROUP BY u.user_id
</select>

<!-- 根据各字段条件带模糊查询  用户表 -->
<select id="FreeFindSYS_USER" resultMap="result_map_SYS_USER" parameterType="Object">
	SELECT <include refid="Base_Column_List" /> FROM SYS_USER 
	 <include refid="Example_Where_Clause2" />
</select>
<!-- 根据各字段条件带模糊查询  用户表 记录数 -->
<select id="CountFreeFindSYS_USER" resultType="java.lang.Integer">
SELECT count(1) as value FROM SYS_USER 
 <include refid="Example_Where_Clause2" />
</select>
<!-- 根据各字段条件带排序  用户表 -->
<select id="FreeFindSYS_USEROrdered" resultMap="result_map_SYS_USER" parameterType="Object">
	SELECT <include refid="Base_Column_List" /> FROM SYS_USER 
	 <include refid="Example_Where_Clause2" />
	 ORDER BY ${_orderBy}
</select>

<!-- *****************************  温馨提示：  ***************************** -->
<!-- **                                                                    ** -->
<!-- ** 以上为自动生成代码，请勿改动或删除。如有新sql添加请在下方区域内填写** -->
<!-- **                                             ** 2016/01/18 14:43:54 ** -->
<!-- ************************************************************************ -->

    <!-- 根据电话号，修改密码-->
    <update id="UpdateByPhone" parameterType="Object" >
        UPDATE SYS_USER set
             password=#{password}
        WHERE mobile=#{mobile}
    </update>
    <!-- 修改密码前根据 userId，password usertype 来查询是否存在这个用户-->
	<select id="FindPassByPassWord" resultType="java.lang.Integer">
	SELECT count(1) as value FROM SYS_USER where user_type='SERVICE' and user_id=#{userId} and password=#{password} and dr = 0
	</select>
<!-- 根据newpass,user_type,user_id ，修改密码-->
    <update id="UpdateByNewPass" parameterType="Object" >
        UPDATE SYS_USER set password=#{newpassword},modify_by=#{userId},modify_dt=#{modifyDt} WHERE user_type='SERVICE' and user_id=#{userId} and password=#{password}
    </update>
    <!-- 根据登录人员 来更新登录时间-->
    <update id="updateByLastLoginDt" parameterType="Object" >
         UPDATE SYS_USER set last_login_dt=#{lastLoginDt} WHERE user_type=#{userType} and enabled=#{enabled} and org_id=#{orgId}
		 <if test="password != null"> and password=#{password}</if>
         <if test="mobile != null"> and mobile=#{mobile}</if>
		 <if test="email != null"> and email=#{email}</if>
    </update>

	<!-- 根据 服务商ID spId 服务类型，审核类型 查询当前服务商下所有 用户-->
	<select id="findBySpIdUserTypeEnabled" resultMap="result_map_SYS_USER" parameterType="Object">
		select user_id as userIdEq,role_id,user_name,real_name,gender,password,small_image,email,phone,mobile,qq,msn,last_login_dt,access_token,user_type,enabled,create_by,create_dt,modify_by,modify_dt,org_id,group_id
		from sys_user
		where user_type=#{userType} and org_id=#{orgId} and dr = 0
		<if test="userNameEq != null ">and (email like '%${userNameEq}%' or mobile like '%${userNameEq}%' or user_name like '%${userNameEq}%')</if>
		order by user_id
	</select>
	<!-- 根据 服务商ID spId 服务类型，审核类型 查询当前服务商下所有 用户-->
	<select id="findBySpIdUserTypeEnabledCount" resultType="java.lang.Integer" parameterType="Object">
		select count(1)as value from sys_user 
		where user_type=#{userType} and org_id=#{orgId} and dr = 0
		<if test="userNameEq != null ">and (email like '%${userNameEq}%' or mobile like '%${userNameEq}%' or user_name like '%${userNameEq}%')</if>
	</select>
	<!-- 当前用户根据userIdEq，修改记录-->  
	<update id="updateByUserIdEq" parameterType="Object" >
		UPDATE SYS_USER 
		<trim prefix=" SET " prefixOverrides=",">
			<if test="userName != null ">,user_name=#{userName}</if>
			<if test="mobile != null ">,mobile=#{mobile}</if>
			<if test="modifyBy != null ">,modify_by=#{modifyBy}</if>
			<if test="modifyDt != null ">,modify_dt=#{modifyDt}</if>
			<if test="roleId !=null">,role_id=#{roleId}</if>
		</trim>
		WHERE user_id=#{userIdEq} and user_type=#{userType} and org_id=#{orgId} and dr = 0
	</update>
 	<!-- 当前用户 创建新用户新增记录 -->
	<insert id="insertByUserIdEq" parameterType="Object" >
  		INSERT INTO SYS_USER (
	  <trim prefix=" " prefixOverrides=",">
		<if test="userName != null ">,user_name</if>
		<if test="password != null ">,password</if>
		<if test="email != null ">,email</if>
		<if test="mobile != null ">,mobile</if>
		<if test="userType != null ">,user_type</if>
		<if test="enabled != null ">,enabled</if>
		<if test="createBy != null ">,create_by</if>
		<if test="createDt != null ">,create_dt</if>
		<if test="orgId != null ">,org_id</if>
		<if test="roleId != null ">,role_id</if>
	  </trim>
 		 )  VALUES (
	  <trim prefix=" " prefixOverrides=",">
		<if test="userName != null ">,#{userName}</if>
		<if test="password != null ">,#{password}</if>
		<if test="email != null ">,#{email}</if>
		<if test="mobile != null ">,#{mobile}</if>
		<if test="userType != null ">,#{userType}</if>
		<if test="enabled != null ">,#{enabled}</if>
		<if test="createBy != null ">,#{createBy}</if>
		<if test="createDt != null ">,#{createDt}</if>
		<if test="orgId != null ">,#{orgId}</if>
		<if test="roleId != null ">,#{roleId}</if>
	  </trim>
 		 )
	  <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="userId">
		SELECT LAST_INSERT_ID() AS USER_ID
	  </selectKey>
	</insert>
	<!-- 根据服务商ID，用户类型，UserIdEq 来查询当前用户数据-->
	<select id="findByUserIdEq" resultMap="result_map_SYS_USER" parameterType="Object">
		select user_id as userIdEq,role_id,user_name,real_name,gender,password,small_image,email,phone,mobile,qq,msn,last_login_dt,access_token,user_type,enabled,create_by,create_dt,modify_by,modify_dt,org_id,group_id 
		from sys_user 
		where user_type=#{userType} and org_id=#{orgId} and user_id=#{userIdEq} and dr = 0
	</select>
	<!-- 根据当前登录用户来 修改用户列表里数据状态 -->
	<update id="UpdateSYS_USERState" parameterType="Object">
		UPDATE SYS_USER
		<trim prefix=" SET " prefixOverrides=",">
			<if test="enabled != null ">,enabled=#{enabled}</if>
			<if test="modifyBy != null ">,modify_by=#{modifyBy}</if>
			<if test="modifyDt != null ">,modify_dt=#{modifyDt}</if>
		</trim>
		WHERE user_id=#{userIdEq} and user_type=#{userType} and org_id=#{orgId} and dr = 0
	</update>
	<!-- 根据当前登录用户来 修改用户列表里用户密码 -->
	<update id="UpdateSYS_USERPassWord" parameterType="Object">
		UPDATE SYS_USER
		<trim prefix=" SET " prefixOverrides=",">
			<if test="modifyBy != null ">,modify_by=#{modifyBy}</if>
			<if test="modifyDt != null ">,modify_dt=#{modifyDt}</if>
			<if test="password != null ">,password=#{password}</if>
		</trim>
		WHERE user_id=#{userIdEq} and user_type=#{userType} and org_id=#{orgId} and dr = 0
	</update>
	
	<!-- 根据用户名，手机号，来查询当前用户数据 -->
	<select id="findByEmailMobile" resultType="java.lang.Integer" parameterType="Object">
		select count(1) as value from sys_user 
		where user_type = #{userType} and dr = 0
		<if test="mobile != null "> AND mobile = #{mobile}</if>
		<if test="userIdEq != null "> AND user_id != #{userIdEq}</if>
	</select>
	
		<!-- 根据用户名，手机号，来查询当前用户数据 -->
	<select id="findByMobile" resultMap="result_map_SYS_USER" parameterType="Object">
		select <include refid="Base_Column_List" /> from sys_user 
		where mobile=#{mobile} and dr = 0
		<if test="userType != null "> and user_type=#{userType}</if>
		<if test="orgId != null "> and org_id=#{orgId}</if>
	</select>

	<select id="querySysUserByCorpId" resultMap="result_map_SYS_USER" parameterType="Object">
		select <include refid="Base_Column_List" /> from sys_user
        where dr = 0
		<if test="userType != null "> and user_type=#{userType}</if>
		<if test="orgId != null "> and org_id=#{orgId}</if>
	</select>

	<!-- 根据用户角色查询用户功能菜单 -->
	<select id="queryUserRoleFuncList" resultType="java.util.Map" parameterType="Object" >
		SELECT category.*,ifnull(category.priority,10000) as rank,func.function_id,func.function_name,func.url FROM sys_rel_role_func rel
		INNER JOIN sys_function_crud crud ON rel.rel_id =  crud.rel_id AND rel.role_id in (${roleIds})
		INNER JOIN sys_function func ON func.function_id = crud.function_id AND func.sys_code = #{sys_code}
		LEFT JOIN sys_function_category category ON category.category_id = func.category_id AND category.sys_code = #{sys_code}
		GROUP BY func.function_id
		ORDER BY rank ASC,func.priority ASC
	</select>

	<!-- 根据用户角色查询用户功能菜单 -->
	<select id="queryUserRoleCorpTypeFuncList" resultType="java.util.Map" parameterType="Object" >
		SELECT category.*,ifnull(category.priority,10000) as rank,func.function_id,func.function_name,func.url FROM sys_rel_role_func rel
		INNER JOIN sys_function_crud crud ON rel.rel_id =  crud.rel_id
		INNER JOIN sys_function func ON func.function_id = crud.function_id
		INNER JOIN sys_user_role urole ON urole.role_id = rel.role_id AND urole.user_id = #{userId}
		INNER JOIN sys_role role ON role.role_id = urole.role_id
		INNER JOIN (
		SELECT t1.* FROM
		(SELECT cp_id,UPPER(app_type) as appType,end_open_time,IFNULL(app_version,'BASE') as app_version,create_dt FROM cm_corp_open_app where cp_id = #{cpId}) t1
		INNER JOIN
		(SELECT cp_id,UPPER(app_type) as appType,end_open_time,IFNULL(app_version,'BASE') as app_version,MAX(create_dt) as create_dt FROM cm_corp_open_app where cp_id = #{cpId} GROUP BY app_type) t2
		ON t1.appType = t2.appType AND t2.create_dt = t1.create_dt
		) app ON app.app_version = IFNULL(func.sys_version,'BASE') AND app.appType = role.sys_code
		LEFT JOIN sys_function_category category ON category.category_id = func.category_id
		GROUP BY func.function_id
		ORDER BY rank ASC,func.priority ASC
	</select>

<!--2016-08 根据userId 查询当前用户 -->
<select id="findUserByUserId" resultMap="result_map_SYS_USER" parameterType="Object" >
	select <include refid="Base_Column_List" /> from sys_user where user_id = #{userId} and dr = 0
</select>


	<!-- 账号管理的条件查询-->
	<select id="accountManage" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT us.create_dt,us.user_name,us.mobile,us.real_name,us.enabled,us.org_id,us.user_type,us.user_id,us.password
		FROM sys_user us
		WHERE us.org_id=#{orgId} AND us.user_type='CUSTOMER'  and us.dr = 0
		<if test="enabled != null">and us.enabled=#{enabled}</if>
		<if test="mobile != null">and (us.mobile LIKE '%${mobile}%' OR  us.user_name LIKE  '%${mobile}%')</if>
		<if test="orderBy != null"> order by ${orderBy}</if>
	</select>
	<select id="accountManageCount" resultType="java.lang.Integer" parameterType="Object">
		SELECT count(1) as value
		FROM sys_user
		WHERE org_id=#{orgId} AND user_type='CUSTOMER' and dr = 0
		<if test="enabled != null">and enabled=#{enabled}</if>
		<if test="mobile != null">and (mobile LIKE '%${mobile}%' OR  user_name LIKE  '%${mobile}%')</if>
	</select>

	<!--修改状态-->
	<update id="updateState" parameterType="Object">
		UPDATE SYS_USER SET enabled=#{enabled}
		WHERE user_id = #{userId} AND org_id=#{orgId} AND user_type='CUSTOMER' and dr = 0
	</update>
	<!--回显-->
	<select id="findManager" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT us.create_dt,us.user_name,us.mobile,us.real_name,us.enabled,us.org_id,us.user_type,us.user_id,us.password,us.email
		FROM sys_user us
		WHERE us.user_type='CUSTOMER' AND us.user_id=#{userId} AND us.org_id=#{orgId} and dr = 0
	</select>

	<!--修改内容,先查找是否存在此用户，再进行修改-->
	<select id="findCustomer" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT COUNT(1)
		FROM sys_user
		WHERE mobile=#{mobile} AND user_id!=#{Id} AND user_type='CUSTOMER' AND org_id=#{orgId} and dr = 0
	</select>

	<update id="updateManager" parameterType="java.util.Map" >
		UPDATE sys_user SET mobile=#{mobile},user_name=#{userName}
		WHERE user_id=#{Id} AND user_type='CUSTOMER' AND org_id=#{orgId} and dr = 0
	</update>

	<!--修改密码-->
	<update id="resetPwd" parameterType="java.util.Map">
		UPDATE sys_user SET password=#{acPwd}
		WHERE user_id=#{useId} AND user_type='CUSTOMER' AND org_id=#{orgId} AND mobile=#{mobile} and dr = 0
	</update>

	<!--创建账号,先查询数据库中有没有相同的手机号-->

	<select id="findMobile" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT COUNT(1)
		FROM sys_user
		WHERE mobile=#{acMobile} AND user_type='CUSTOMER' and dr = 0
	</select>

	<!--查重不存在，插入新的记录到数据库中-->
	<insert id="addMobile" parameterType="Object">
		INSERT INTO sys_user(
		<trim prefix=" " prefixOverrides=",">
			<if test="acName != null ">,user_name</if>
			<if test="acMobile != null ">,mobile</if>
		</trim>
		)
		VALUES (
		<trim prefix=" " prefixOverrides=",">
			<if test="acName != null ">,#{acName}</if>
			<if test="acMobile != null ">,#{acMobile}</if>
		</trim>
		)
	</insert>

	<!--修改联系人-->
	<update id="updateLinkman" parameterType="java.util.Map">
		UPDATE sys_user SET mobile=#{mobile},user_name=#{username},email=#{uemail}
		WHERE user_id=#{Id} AND user_type='CUSTOMER' AND org_id=#{orgId} and dr = 0
	</update>

	<!--修改密码中的查询是否存在此人-->
	<select id="findPwd" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT COUNT(1)
		FROM sys_user
		WHERE mobile=#{mobile} AND user_type='CUSTOMER' AND org_id=#{orgId} AND password=#{oldPwd} and dr = 0
	</select>

	<update id="updatePwd" parameterType="java.util.Map">
		UPDATE sys_user SET password=#{newPwd}
		WHERE mobile=#{mobile} AND user_type='CUSTOMER' AND org_id=#{orgId} and dr = 0
	</update>


	<!-- HR 登录 -->
	<select id="LoginSYS_USER" resultMap="result_map_SYS_USER" parameterType="Object">
		select <include refid="Base_Column_List" />  from sys_user where mobile=#{userName} and password =#{password} and user_type='CUSTOMER' and dr = 0
	</select>

	<!-- 根据user_id，user_type  插入密码-->
	<update id="UpdateSYS_USER_ID_TYPE" parameterType="Object" >
		update sys_user
		<trim prefix=" SET " prefixOverrides=",">
			<if test="userId != null ">,user_id=#{userId}</if>
			<if test="password != null ">,password=#{password}</if>
		</trim>
		WHERE USER_ID=#{userId} and USER_TYPE='CUSTOMER' and dr = 0
	</update>

	<!-- 根据id查询 用户表 -->
	<select id="FindByPKTYPE" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM SYS_USER WHERE USER_ID=#{userId} and user_type='CUSTOMER' and dr = 0
	</select>

	<!-- 根据登录用户名和密码 查询用户 -->
	<select id="FindByLoginNamePass" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT u.*,GROUP_CONCAT(r.role_id ORDER BY r.role_id ASC) as role_ids,GROUP_CONCAT(role.sys_code) as role_codes
		FROM sys_user u LEFT JOIN sys_user_role r ON u.user_id = r.user_id
		LEFT JOIN sys_role role ON role.role_id = r.role_id
		where u.user_type =#{userType} and u.enabled=#{enabled} and u.password=#{password} and dr = 0
		<if test="mobile != null ">and u.mobile=#{mobile}</if>
		<if test="email != null ">and u.email=#{email}</if>
		<if test="userName != null ">and u.user_name=#{userName}</if>
		GROUP BY u.user_id
	</select>

	<!-- 根据登录用户名和密码 查询用户 -->
	<select id="FindByMobile" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM SYS_USER where mobile=#{mobile} and dr = 0
		<if test="userType != null">and user_type=#{userType}</if>
	</select>

	<!-- 根据登录orgId和type 查询用户 -->
	<select id="findUsersBySpId" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM SYS_USER where user_type = 'SERVICE' and org_id=#{orgId} and dr = 0
	</select>

	<!-- 根据id查询 用户表 -->
	<select id="BS_FindByPK" resultMap="result_map_SYS_USER" parameterType="Object">SELECT <include refid="Base_Column_List" /> FROM SYS_USER WHERE USER_ID=#{userId}</select>
	<!-- 根据密码，修改记录-->
	<update id="UpdateSYS_USERS" parameterType="Object" >
		update sys_user set password=#{passwordEq} where password=#{password}
	</update>


	<!--根据手机号获取用户信息-->
	<select id="findUserByMobile" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT
		su.user_id,
		sur.role_id,
		su.user_name,
		su.real_name,
		su.gender,
		su.PASSWORD,
		su.small_image,
		su.email,
		su.phone,
		su.mobile,
		su.qq,
		su.msn,
		su.last_login_dt,
		su.access_token,
		su.user_type,
		su.enabled,
		su.create_by,
		su.create_dt,
		su.modify_by,
		su.modify_dt,
		su.org_id,
		su.group_id

		FROM
		sys_user AS su
		left JOIN sys_user_role AS sur ON su.user_id = sur.user_id AND sur.role_id=9
		<trim prefix=" WHERE " prefixOverrides="AND ">
		<if test="userId != null" >and su.user_id = #{userId}</if>
		<if test="roleId != null" >and su.role_id = #{roleId}</if>
		<if test="userName != null" >and su.user_name = #{userName}</if>
		<if test="realName != null" >and su.real_name = #{realName}</if>
		<if test="gender != null" >and su.gender = #{gender}</if>
		<if test="password != null" >and su.password = #{password}</if>
		<if test="smallImage != null" >and su.small_image = #{smallImage}</if>
		<if test="email != null" >and su.email = #{email}</if>
		<if test="phone != null" >and su.phone = #{phone}</if>
		<if test="mobile != null" >and su.mobile = #{mobile}</if>
		<if test="qq != null" >and su.qq = #{qq}</if>
		<if test="msn != null" >and su.msn = #{msn}</if>
		<if test="lastLoginDt != null" >and su.last_login_dt = #{lastLoginDt}</if>
		<if test="accessToken != null" >and su.access_token = #{accessToken}</if>
		<if test="userType != null" >and su.user_type = #{userType}</if>
		<if test="enabled != null" >and su.enabled = #{enabled}</if>
		<if test="createBy != null" >and su.create_by = #{createBy}</if>
		<if test="createDt != null" >and su.create_dt = #{createDt}</if>
		<if test="modifyBy != null" >and su.modify_by = #{modifyBy}</if>
		<if test="modifyDt != null" >and su.modify_dt = #{modifyDt}</if>
		<if test="orgId != null" >and su.org_id = #{orgId}</if>
		<if test="groupId != null" >and su.group_id = #{groupId}</if>
            <if test="dr != null" >and dr= #{dr}</if>
            <if test="dr == null" >and dr= 0</if>
		</trim>
	</select>
	<!--根据超级密码手机号获取用户信息-->
	<select id="findUserByMobileSuperPWD" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT <include refid="Base_Column_List" />
		FROM SYS_USER
		<include refid="Example_Where_Clause" />
	</select>
	<!-- 根据手机号，修改记录-->
	<update id="UpdateSYS_USER_PASSWORD" parameterType="Object" >
		UPDATE SYS_USER
		<trim prefix=" SET " prefixOverrides=",">
			<if test="password != null ">,password=#{password}</if>
		</trim>
		WHERE mobile=#{mobile} AND dr = 0
	</update>

	<select id="FindByPKSYS_USER" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM sys_user
		<include refid="Example_Where_Clause2" />
	</select>

	<select id="queryFunctionCrudByroleIds" resultType="java.util.Map"  parameterType="Object">
		SELECT
		crud.*
		FROM
		sys_rel_role_func rel
		INNER JOIN sys_function_crud crud ON rel.rel_id = crud.rel_id
		AND rel.role_id IN (${roleIds})
		INNER JOIN sys_function func ON func.function_id = crud.function_id
		LEFT JOIN sys_function_category category ON category.category_id = func.category_id
		INNER JOIN (
		SELECT t1.* FROM
		(SELECT cp_id,UPPER(app_type) as appType,end_open_time,IFNULL(app_version,'BASE') as app_version,create_dt FROM cm_corp_open_app where cp_id = #{cpId}) t1
		INNER JOIN
		(SELECT cp_id,UPPER(app_type) as appType,end_open_time,IFNULL(app_version,'BASE') as app_version,MAX(create_dt) as create_dt FROM cm_corp_open_app where cp_id = #{cpId} GROUP BY app_type) t2
		ON t1.appType = t2.appType AND t2.create_dt = t1.create_dt
		) app ON app.app_version = IFNULL(func.sys_version,'BASE') AND app.appType = category.sys_code
	</select>

	<select id="find_User_Auth" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT * FROM (
		SELECT u.* FROM sys_user u INNER JOIN sys_function_data da ON u.user_id = da.user_id AND da.user_type = 'SERVICE' AND da.data_type = 'CM_CORP' AND da.data_id = #{cpId} AND  u.dr = 0
		UNION ALL
		SELECT su.* FROM sys_user u INNER JOIN cm_corp cm ON cm.cp_id = u.org_id AND u.user_type = 'CUSTOMER' AND u.org_id = #{cpId} INNER JOIN sp_cm_relation sp ON sp.cp_id = cm.cp_id INNER JOIN  sys_user su ON su.org_id = sp.sp_id  AND su.user_type = 'SERVICE' AND su.email is not null AND  su.dr = 0
		) t GROUP BY t.user_id
	</select>


	<select id="findUserByYHTUserId" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT u.*,GROUP_CONCAT(r.role_id ORDER BY r.role_id ASC) as role_ids,anc.nick_name,GROUP_CONCAT(role.sys_code) as role_codes
		FROM sys_user u LEFT JOIN sys_user_role r ON u.user_id = r.user_id
		LEFT JOIN sys_role role ON role.role_id = r.role_id
		LEFT JOIN op_user_ancillary anc ON  u.user_id=anc.user_id
		where yht_user_id = #{yhtUserId} AND u.dr = 0
		<if test="tenantId != null" >and tenant_id = #{tenantId}</if>
		GROUP BY u.user_id
	</select>

	<select id="findUserByAccessToken" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT u.*,GROUP_CONCAT(r.role_id ORDER BY r.role_id ASC) as role_ids,anc.nick_name,GROUP_CONCAT(role.sys_code) as role_codes
		FROM sys_user u LEFT JOIN sys_user_role r ON u.user_id = r.user_id
		LEFT JOIN sys_role role ON role.role_id = r.role_id
		LEFT JOIN op_user_ancillary anc ON  u.user_id=anc.user_id
		where access_token = #{accessToken} AND u.dr = 0 AND u.org_id=#{orgId}
		GROUP BY u.user_id
	</select>

	<select id="findUnSynUserList" resultMap="result_map_SYS_USER" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM sys_user where user_type = 'CUSTOMER' AND tenant_id is null AND yht_user_id is null AND dr = 0
		<if test="mobile != null" >and mobile = #{mobile}</if>
		<if test="userId != null" >and user_id = #{userId}</if>
	</select>

	<select id="findUsersBySpIdAndName" resultMap="result_map_SYS_USER2" parameterType="Object">
		SELECT <include refid="Base_Column_List2" />, GROUP_CONCAT(IFNULL(sr.role_name,'--')) as role_name,(CASE WHEN su.role_id IS NULL THEN sr.role_id ELSE su.role_id END) AS role_id FROM SYS_USER su
		left JOIN sys_user_role sur on su.user_id = sur.user_id
		left JOIN sys_role sr on sur.role_id = sr.role_id or su.role_id = sr.role_id
		where su.user_type = 'CUSTOMER' and su.org_id=#{orgId} AND  su.dr = 0
		<if test="userName != null" >and (su.user_name like '%${userName}%' or su.real_name like '%${userName}%')</if>
		GROUP BY su.user_id
	</select>

	<select id="findUsersByUserId" resultMap="result_map_SYS_USER2" parameterType="Object">
		SELECT <include refid="Base_Column_List2" />,sr.role_name,
			(CASE WHEN su.role_id IS NULL THEN sr.role_id ELSE su.role_id END) AS role_id, GROUP_CONCAT(sfd.data_id) as scheme_ids, GROUP_CONCAT(sfd2.data_id) as sps FROM SYS_USER su
		left JOIN sys_user_role sur on su.user_id = sur.user_id
		left JOIN sys_role sr on sur.role_id = sr.role_id or su.role_id = sr.role_id
		left JOIN sys_function_data sfd on sfd.user_id = su.user_id and sfd.data_type = 'CM_CORP'
		left JOIN sys_function_data sfd2 on sfd2.user_id = su.user_id and sfd2.data_type = 'CM_CORP_SP'
		where su.user_id=#{userId} and su.org_id=#{orgId} AND  su.dr = 0 GROUP BY su.user_id
	</select>

    <select id="CountSysUserByRoleId" resultType="java.lang.Integer" parameterType="Object">
        SELECT count(1) as value FROM SYS_USER su INNER JOIN sys_user_role sur ON su.user_id = sur.user_id where su.org_id = #{orgId} and sur.role_id = #{roleId} AND  su.dr = 0
    </select>

	<select id="checkUserCount" resultType="java.lang.Integer" parameterType="Object">
		SELECT count(1) as value
		FROM sys_user
		WHERE org_id=#{orgId} and user_type = 'CUSTOMER' AND  dr = 0
		<if test="email != null and (mobile == null or mobile == '')">and email=#{email}</if>
		<if test="mobile != null and (email == null or email == '')">and mobile = #{mobile}</if>
		<if test="mobile != null and email != null">and (mobile = #{mobile} or email=#{email})</if>
	</select>

	<select id="getUserFuncCurdByRole" resultType="java.util.Map" parameterType="Object">
		SELECT curd.*,f.url f_url,f.function_name from sys_rel_role_func rol LEFT JOIN  sys_function_crud curd on rol.rel_id=curd.rel_id LEFT JOIN sys_function f on curd.function_id = f.function_id where
		rol.role_id in (${roleIds})
		<if test="sysCode != null" > and sys_code = #{sysCode}</if>
		ORDER BY f.priority,curd.priority;
	</select>
</mapper>
