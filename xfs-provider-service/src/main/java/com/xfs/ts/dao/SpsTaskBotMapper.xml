<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SpsTaskBot">


<resultMap id="result_map_opresult" type="com.xfs.ts.model.SpsTsOpresult" >
	<result column="id" property="id"/>
	<result column="createDt" property="create_dt"/>
	<result column="updateDt" property="update_dt"/>
	<result column="idCode" property="id_code"/>
	<result column="psnName" property="psn_name"/>
	<result column="opStatus" property="op_status"/>
	<result column="salary" property="salary"/>
	<result column="opType" property="op_type"/>
	<result column="liveType" property="live_type"/>
	<result column="otherInfo" property="other"/>
	<result column="imgId" property="img_id"/>
	<result column="month" property="month"/>
	<result column="scid" property="scheme_id"/>
	<result column="spid" property="sp_id"/>
	<result column="cid" property="cid"/>
	<result column="isLastFlag" property="last_flag"/>
	<result column="json" property="json"/>
</resultMap>

    <select id="findCityCodes" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	     select s.area_id,s.city_code from sps_ts_citycode s
	</select>

    <select id="findCityRoBots" resultType="java.util.HashMap" parameterType="Object">
	     select r.robot_name,r.btype,r.city,r.qlexpress from sps_ts_city_robot r where r.btype=#{btype} and r.city='${city}'
	</select>

    <select id="findConvert" resultType="java.util.HashMap" parameterType="Object">
	
	select t.* from sps_ts_convert t left join (
select h.scheme_id,s.city_code
 from sps_scheme h left join bs_area a on h.area_id=a.area_id
left join bs_area p on LOCATE(p.code,a.code)=1 
inner join sps_ts_citycode s on s.area_id=p.code
) c on c.city_code=t.city 
where  c.scheme_id=#{scheme_id} and t.btype=#{btype}
 
	</select>

    <select id="findAutoPage" resultType="java.util.HashMap" parameterType="Object">
	   select p.`name`,p.page_url,p.id from sps_ts_auto_page p where p.city='${city}' and p.btype=#{btype};
	</select>

    <select id="findAutoPageStep" resultType="java.util.HashMap" parameterType="Object">
	select * from sps_ts_auto_page p
	left join sps_ts_auto_step s
	on p.id =s.page_id
	where p.city='${city}' and p.btype=#{btype} order by step asc
	</select>

    <select id="findAutoStep" resultType="java.util.HashMap" parameterType="java.lang.Integer">
	   select s.step,s.element_id,s.element_name,s.element_value,s.js,s.op_type,s.other from sps_ts_auto_step s where s.page_id=#{page_id}
	</select>

    <select id="findVersion" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    select v.id,v.version,v.publishdate from sps_ts_version v
	</select>

    <select id="findCpid" resultType="java.util.HashMap" parameterType="Object">
		select c.corp_name,c.cp_id,sp.sp_id, s.insurance_account_id,s.fund_account_id,s.scheme_id from sps_scheme s 
inner join cm_corp c on s.cp_id=c.cp_id
 inner join bs_area a on  a.area_id=c.cp_address_area
inner join sp_cm_relation sp on sp.cp_id = c.cp_id
where a.`code` like '${name}%' and s.fund_account_id is not null
	</select>

	<select id="findCpInfoByCpid" resultType="java.util.HashMap" parameterType="Object">
	
	select c.corp_name,c.cp_id,s.sp_id,s.insurance_account_id,s.fund_account_id,s.scheme_id from sps_scheme s 
inner join cm_corp c on s.cp_id=c.cp_id
inner join bs_area a on a.area_id=s.area_id
where s.scheme_id=#{scheme_id} and a.`code` like '${areaCode}%'

	</select>

    <select id="findTypes" resultType="java.util.HashMap" parameterType="Object">
	     select * from bd_bstype
	    </select>

    <select id="findCpidByPass" resultType="java.util.HashMap" parameterType="Object">
		select sa.`name`,sa.cp_id as cid, sa.sp_id, sp.mobile, sp.sp_name, sa.insurance_fund_type as type
		from sps_account sa inner join bs_area a on sa.area_id = a.area_id
		left join sp_service sp on sa.sp_id = sp.sp_id
		where sa.reg_num = #{reg_num} and sa.reg_numpass = #{reg_numpass} and sa.insurance_fund_type = #{insurance_fund_type} and a.`code` like '${code}%'
	</select>

    <select id="findTaskCount" resultType="java.lang.Integer" parameterType="Object">
		select count(1) as value
		from sps_task st inner join cm_corp cc on st.cp_id = cc.cp_id
		inner join sp_service ss on st.sp_id = ss.sp_id
		inner join sys_user su on su.org_id = ss.sp_id
		where st.type = 'TODO' and st.bstype_id = #{bstypeid} and su.mobile = #{mobile} and cc.corp_name like '%${corp_name}%'
	</select>

    <select id="findCpidBySpName" resultType="java.util.HashMap" parameterType="Object">
        select cc.cp_id from cm_corp cc inner join sp_cm_relation sa on cc.cp_id = sa.cp_id
        inner join sp_service ss on ss.sp_id = sa.sp_id
        inner join sys_user su on su.org_id = ss.sp_id
        where su.mobile = #{mobile} and cc.corp_name like '%${corp_name}%'
    </select>
    
    
    
     <select id="findTodoCount" resultType="java.util.HashMap" parameterType="Object">
	select count(1) as num, t.bstype_id,t.scheme_id from sps_task t 
where t.type='TODO' and t.sp_id= #{sp_id} 
GROUP BY t.scheme_id,t.bstype_id
order by t.scheme_id desc;

 
	</select>
	
     <update id="updateOpResult"  parameterType="Object">
         update sps_ts_opresult set last_flag='N',update_dt=#{updateDt} where id_code=#{idCode} and last_flag='Y' and sp_id=#{spid}
     </update>
     
    <insert id="insertOpResult" parameterType="Object">
      INSERT INTO sps_ts_opresult (
  <trim prefix=" " prefixOverrides=",">
	<if test="id != null ">,id</if>
	<if test="createDt != null ">,create_dt</if>
	<if test="updateDt != null ">,update_dt</if>
	<if test="idCode != null ">,id_code</if>
	<if test="psnName != null ">,psn_name</if>
	<if test="opStatus != null ">,op_status</if>
	<if test="salary != null ">,salary</if>
	<if test="opType != null ">,op_type</if>
	<if test="liveType != null ">,live_type</if>
	<if test="otherInfo != null ">,other</if>
	<if test="imgId != null ">,img_id</if>
	<if test="month != null ">,month</if>
    <if test="scid != null ">,scheme_id</if>
	<if test="spid != null ">,sp_id</if>
	<if test="cid != null ">,cid</if>
	<if test="isLastFlag != null ">,last_flag</if>
	<if test="json != null ">,json</if>
  </trim>
  )  VALUES (
  <trim prefix=" " prefixOverrides=",">
	<if test="id != null ">,#{id}</if>
	<if test="createDt != null ">,#{createDt}</if>
	<if test="updateDt != null ">,#{updateDt}</if>
	<if test="idCode != null ">,#{idCode}</if>
	<if test="psnName != null ">,#{psnName}</if>
	<if test="opStatus != null ">,#{opStatus}</if>
	<if test="salary != null ">,#{salary}</if>
	<if test="opType != null ">,#{opType}</if>
	<if test="liveType != null ">,#{liveType}</if>
	<if test="otherInfo != null ">,#{otherInfo}</if>
	<if test="imgId != null ">,#{imgId}</if>
	<if test="month != null ">,#{month}</if>
    <if test="scid != null ">,#{scid}</if>
	<if test="spid != null ">,#{spid}</if>
	<if test="cid != null ">,#{cid}</if>
	<if test="isLastFlag != null ">,#{isLastFlag}</if>
	<if test="json != null ">,#{json}</if>
  </trim>
  )
  <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
	SELECT LAST_INSERT_ID() AS ID
  </selectKey>
    </insert>
    
    <select id="findOpResult" resultMap="result_map_opresult"   parameterType="Object">
       select  p.id,p.cid,p.create_dt,p.id_code,p.img_id,
p.last_flag,p.live_type,p.month,p.op_status,
p.op_type,p.other,p.psn_name,p.salary,p.scheme_id,
p.sp_id,p.update_dt,p.json from sps_ts_opresult p where 1=1 
    <if test="id != null" >and id = #{id}</if>
    <if test="idCode != null" >and id_code = #{idCode}</if>
    <if test="isLastFlag != null" >and last_flag = #{isLastFlag}</if>
     <if test="month != null" >and month = #{month}</if>
    </select>
    
    
</mapper>
