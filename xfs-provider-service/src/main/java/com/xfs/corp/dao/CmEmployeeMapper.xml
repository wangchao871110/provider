<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CM_EMPLOYEE" >
    <!-- Result Map-->
    <resultMap id="result_map_CM_EMPLOYEE" type="com.xfs.corp.model.CmEmployee" >
        <result column="emp_id" property="empId"/>
        <result column="cp_id" property="cpId"/>
        <result column="sp_id" property="spId"/>
        <result column="name" property="name"/>
        <result column="identity_type" property="identityType"/>
        <result column="identity_code" property="identityCode"/>
        <result column="job" property="job"/>
        <result column="social_insurance_num" property="socialInsuranceNum"/>
        <result column="reserve_fund_num" property="reserveFundNum"/>
        <result column="mobile" property="mobile"/>
        <result column="create_by" property="createBy"/>
        <result column="create_dt" property="createDt"/>
        <result column="modify_by" property="modifyBy"/>
        <result column="modify_dt" property="modifyDt"/>
        <result column="insurance_period" property="insurancePeriod"/>
        <result column="fund_period" property="fundPeriod"/>
        <result column="dr" property="dr"/>

        <result column="insurance_living_type" property="insuranceLivingType"/>
        <result column="insurance_state" property="insuranceState"/>
        <result column="is_quit" property="isQuit"/>
        <result column="scheme_id" property="schemeId"/>
        <result column="dep_id" property="depId"/>
        <result column="email" property="email"/>
        <result column="openid" property="openid"/>
        <result column="fund_state" property="fundState"/>
        <result column="entry_time" property="entryTime"/>
        <result column="leave_time" property="leaveTime"/>
        <result column="insurance_salary" property="insuranceSalary"/>
        <result column="fund_salary" property="fundSalary"/>

        <result column="living_type_name" property="livingTypeName"/>
        <result column="fund_state_name" property="fundStateName"/>
        <result column="insurance_state_name" property="insuranceStateName"/>
        <result column="insurance_type" property="insuranceTypeName"/>
        <result column="fund_type" property="fundTypeName"/>
        <result column="corp_name" property="corpName"/>

        <result column="head_photo" property="headPhoto"/>
        <result column="three_id" property="threeId"/>

        <result column="ss_user_id" property="ssUserId"/>
        <result column="hf_user_id" property="hfUserId"/>

        <result column="salary" property="salary"/>
        <result column="branch" property="branch"/>
		<result column="dep_name" property="depName"/>

		<result column="wechat_id" property="wechatId"/>
		<result column="is_remove" property="isRemove"/>
		<result column="is_send" property="isSend"/>
    </resultMap>

    <resultMap id="result_map_CM_EMPLOYEE_JSON" type="com.xfs.corp.model.CmEmployee" >
        <result column="emp_id" property="empId"/>
        <result column="cp_id" property="cpId"/>
        <result column="name" property="name"/>
        <result column="identity_type" property="identityType"/>
        <result column="identity_code" property="identityCode"/>
        <result column="job" property="job"/>
        <result column="social_insurance_num" property="socialInsuranceNum"/>
        <result column="reserve_fund_num" property="reserveFundNum"/>
        <result column="mobile" property="mobile"/>
        <result column="create_by" property="createBy"/>
        <result column="create_dt" property="createDt"/>
        <result column="modify_by" property="modifyBy"/>
        <result column="modify_dt" property="modifyDt"/>
        <result column="insurance_period" property="insurancePeriod"/>
        <result column="fund_period" property="fundPeriod"/>
        <result column="dr" property="dr"/>

        <result column="insurance_living_type" property="insuranceLivingType"/>
        <result column="insurance_state" property="insuranceState"/>
        <result column="is_quit" property="isQuit"/>
        <result column="scheme_id" property="schemeId"/>
        <result column="dep_id" property="depId"/>
        <result column="email" property="email"/>
        <result column="openid" property="openid"/>
        <result column="fund_state" property="fundState"/>
        <result column="entry_time" property="entryTime"/>
        <result column="leave_time" property="leaveTime"/>
        <result column="insurance_salary" property="insuranceSalary"/>
        <result column="fund_salary" property="fundSalary"/>

        <result column="living_type_name" property="livingTypeName"/>
        <result column="fund_state_name" property="fundStateName"/>
        <result column="insurance_state_name" property="insuranceStateName"/>
        <result column="insurance_type" property="insuranceTypeName"/>
        <result column="fund_type" property="fundTypeName"/>
        <result column="corp_name" property="corpName"/>

        <result column="head_photo" property="headPhoto"/>
        <result column="three_id" property="threeId"/>

        <result column="ss_user_id" property="ssUserId"/>
        <result column="hf_user_id" property="hfUserId"/>
        <result column="json" property="json"/>

        <result column="salary" property="salary"/>
        <result column="branch" property="branch"/>
        <result column="dep_name" property="depName"/>

        <result column="wechat_id" property="wechatId"/>
        <result column="is_remove" property="isRemove"/>
        <result column="is_send" property="isSend"/>
    </resultMap>

    <!-- Result Map-->
    <resultMap id="result_map_CM_EMPLOYEE_DTO" type="com.xfs.corp.dto.CmEmployeeDto" >
        <result column="emp_id" property="empId"/>
        <result column="name" property="name"/>
        <result column="insurance_state" property="insuranceState"/>
        <result column="insurance_account_name" property="insuranceAccountName"/>
        <result column="insurance_salary" property="insuranceSalary"/>
        <result column="fund_state" property="fundState"/>
        <result column="fund_account_name" property="fundAccountName"/>
        <result column="fund_salary" property="fundSalary"/>
        <result column="corp_name" property="corpName"/>
        <result column="scheme_type" property="schemeType"/>
        <result column="sp_name" property="spName"/>
        <result column="short_name" property="shortName"/>
        <result column="areaname" property="areaname"/>

    </resultMap>


    <!-- cm_employee table all fields -->
    <sql id="Base_Column_List" >
        emp_id,cp_id,name,identity_type,identity_code,job,social_insurance_num,reserve_fund_num,mobile,create_by,create_dt,modify_by,modify_dt,dr,insurance_living_type,insurance_state,is_quit,scheme_id,dep_id,email,openid,fund_state,entry_time,leave_time,insurance_salary,fund_salary,insurance_period,fund_period,head_photo,three_id,ss_user_id,hf_user_id,salary,branch,dep_name,wechat_id,is_remove,is_send
    </sql>
    <sql id="Base_Column_List_json" >
        emp_id,cp_id,name,identity_type,identity_code,job,social_insurance_num,reserve_fund_num,mobile,create_by,create_dt,modify_by,modify_dt,dr,insurance_living_type,insurance_state,is_quit,scheme_id,dep_id,email,openid,fund_state,entry_time,leave_time,insurance_salary,fund_salary,insurance_period,fund_period,head_photo,three_id,ss_user_id,hf_user_id,salary,branch,json,dep_name,wechat_id,is_remove,is_send
    </sql>


    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        <trim prefix=" WHERE " prefixOverrides="AND ">
            <if test="empId != null" >and emp_id = #{empId}</if>
            <if test="cpId != null" >and cp_id = #{cpId}</if>
            <if test="name != null" >and name = #{name}</if>
            <if test="identityType != null" >and identity_type = #{identityType}</if>
            <if test="identityCode != null" >and identity_code = #{identityCode}</if>
            <if test="job != null" >and job = #{job}</if>
            <if test="socialInsuranceNum != null" >and social_insurance_num = #{socialInsuranceNum}</if>
            <if test="reserveFundNum != null" >and reserve_fund_num = #{reserveFundNum}</if>
            <if test="mobile != null" >and mobile = #{mobile}</if>
            <if test="createBy != null" >and create_by = #{createBy}</if>
            <if test="createDt != null" >and create_dt = #{createDt}</if>
            <if test="modifyBy != null" >and modify_by = #{modifyBy}</if>
            <if test="modifyDt != null" >and modify_dt = #{modifyDt}</if>
            <if test="dr != null" >and dr = #{dr}</if>
            <if test="insuranceLivingType != null" >and insurance_living_type = #{insuranceLivingType}</if>
            <if test="insuranceState != null" >and insurance_state = #{insuranceState}</if>
            <if test="isQuit != null" >and is_quit = #{isQuit}</if>
            <if test="schemeId != null" >and scheme_id = #{schemeId}</if>
            <if test="depId != null" >and dep_id = #{depId}</if>
            <if test="email != null" >and email = #{email}</if>
            <if test="openid != null" >and openid = #{openid}</if>
            <if test="fundState != null" >and fund_state = #{fundState}</if>
            <if test="entryTime != null" >and entry_time = #{entryTime}</if>
            <if test="leaveTime != null" >and leave_time = #{leaveTime}</if>
            <if test="insuranceSalary != null" >and insurance_salary = #{insuranceSalary}</if>
            <if test="fundSalary != null" >and fund_salary = #{fundSalary}</if>
            <if test="insurancePeriod != null" >and insurance_period = #{insurancePeriod}</if>
            <if test="fundPeriod != null" >and fund_period = #{fundPeriod}</if>
            <if test="threeId != null" >and three_id = #{threeId}</if>
            <if test="ssUserId != null" >and ss_user_id = #{ssUserId}</if>
            <if test="hfUserId != null" >and hf_user_id = #{hfUserId}</if>

            <if test="salary != null" >and salary = #{salary}</if>
            <if test="branch != null" >and branch = #{branch}</if>
            <if test="depName != null" >and dep_name = #{depName}</if>

            <if test="wechatId != null" >and wechat_id = #{wechatId}</if>
            <if test="isRemove != null" >and is_remove = #{isRemove}</if>
            <if test="isSend != null" >and is_send = #{isSend}</if>
        </trim>
    </sql>

    <!-- 查询条件 带模糊查询 以及 时间起始查询 -->
    <sql id="Example_Where_Clause2">
        <trim prefix=" WHERE " prefixOverrides="AND ">
            <if test="empId != null">AND emp_id = '${empId}'</if>
            <if test="cpId != null">AND cp_id = '${cpId}'</if>
            <if test="name != null">AND name like '%${name}%'</if>
            <if test="nameEq != null">AND name = #{nameEq}</if>
            <if test="identityType != null">AND identity_type like '%${identityType}%'</if>
            <if test="identityTypeEq != null">AND identity_type = #{identityTypeEq}</if>
            <if test="identityCode != null">AND identity_code like '%${identityCode}%'</if>
            <if test="identityCodeEq != null">AND identity_code = #{identityCodeEq}</if>
            <if test="job != null">AND job like '%${job}%'</if>
            <if test="jobEq != null">AND job = #{jobEq}</if>
            <if test="socialInsuranceNum != null">AND social_insurance_num like '%${socialInsuranceNum}%'</if>
            <if test="socialInsuranceNumEq != null">AND social_insurance_num = #{socialInsuranceNumEq}</if>
            <if test="reserveFundNum != null">AND reserve_fund_num like '%${reserveFundNum}%'</if>
            <if test="reserveFundNumEq != null">AND reserve_fund_num = #{reserveFundNumEq}</if>
            <if test="mobile != null">AND mobile like '%${mobile}%'</if>
            <if test="mobileEq != null">AND mobile = #{mobileEq}</if>
            <if test="createBy != null">AND create_by = '%${createBy}%'</if>
            <if test="createDt != null">AND create_dt = #{createDt}</if>
            <if test="createDtFrom != null">AND create_dt&gt;=#{createDtFrom}</if>
            <if test="createDtTo != null">AND create_dt&lt;=#{createDtTo}</if>
            <if test="modifyBy != null">AND modify_by = '%${modifyBy}%'</if>
            <if test="modifyDt != null">AND modify_dt = #{modifyDt}</if>
            <if test="modifyDtFrom != null">AND modify_dt&gt;=#{modifyDtFrom}</if>
            <if test="modifyDtTo != null">AND modify_dt&lt;=#{modifyDtTo}</if>
            <if test="dr != null">AND dr like '%${dr}%'</if>
            <if test="insuranceLivingType != null">AND insurance_living_type like '%${insuranceLivingType}%'</if>
            <if test="insuranceLivingTypeEq != null">AND insurance_living_type = #{insuranceLivingTypeEq}</if>
            <if test="insuranceState != null">AND insurance_state like '%${insuranceState}%'</if>
            <if test="insuranceStateEq != null">AND insurance_state = #{insuranceStateEq}</if>
            <if test="isQuit != null">AND is_quit like '%${isQuit}%'</if>
            <if test="schemeId != null">AND scheme_id = '${schemeId}'</if>
            <if test="depId != null">AND dep_id = '${depId}'</if>
            <if test="email != null">AND email like '%${email}%'</if>
            <if test="emailEq != null">AND email = #{emailEq}</if>
            <if test="openid != null">AND openid = '${openId}'</if>
            <if test="openidEq != null">AND openid = #{openidEq}</if>
            <if test="fundState != null">AND fund_state like '%${fundState}%'</if>
            <if test="fundStateEq != null">AND fund_state = #{fundStateEq}</if>
            <if test="entryTime != null">AND entry_time = #{entryTime}</if>
            <if test="entryTimeFrom != null">AND entry_time&gt;=#{entryTimeFrom}</if>
            <if test="entryTimeTo != null">AND entry_time&lt;=#{entryTimeTo}</if>
            <if test="leaveTime != null">AND leave_time = #{leaveTime}</if>
            <if test="leaveTimeFrom != null">AND leave_time&gt;=#{leaveTimeFrom}</if>
            <if test="leaveTimeTo != null">AND leave_time&lt;=#{leaveTimeTo}</if>
            <if test="insuranceSalary != null">AND insurance_salary like '%${insuranceSalary}%'</if>
            <if test="fundSalary != null">AND fund_salary like '%${fundSalary}%'</if>
            <if test="threeId != null" >and three_id = #{threeId}</if>
            <if test="ssUserId != null" >and ss_user_id = #{ssUserId}</if>
            <if test="hfUserId != null" >and hf_user_id = #{hfUserId}</if>

            <if test="salary != null" >and salary = #{salary}</if>
            <if test="branch != null" >and branch = #{branch}</if>
            <if test="depName != null" >and dep_name = #{depName}</if>

            <if test="wechatId != null" >and wechat_id = #{wechatId}</if>
            <if test="isRemove != null" >and is_remove = #{isRemove}</if>
            <if test="isSend != null" >and is_send = #{isSend}</if>
        </trim>
    </sql>

    <!-- 插入记录 -->
    <insert id="InsertCM_EMPLOYEE" parameterType="Object" >
        INSERT INTO CM_EMPLOYEE (
        <trim prefix=" " prefixOverrides=",">
            <if test="empId != null ">,emp_id</if>
            <if test="cpId != null ">,cp_id</if>
            <if test="name != null ">,name</if>
            <if test="identityType != null ">,identity_type</if>
            <if test="identityCode != null ">,identity_code</if>
            <if test="job != null ">,job</if>
            <if test="socialInsuranceNum != null ">,social_insurance_num</if>
            <if test="reserveFundNum != null ">,reserve_fund_num</if>
            <if test="mobile != null ">,mobile</if>
            <if test="createBy != null ">,create_by</if>
            <if test="createDt != null ">,create_dt</if>
            <if test="modifyBy != null ">,modify_by</if>
            <if test="modifyDt != null ">,modify_dt</if>
            <if test="dr != null ">,dr</if>
            <if test="insuranceLivingType != null ">,insurance_living_type</if>
            <if test="insuranceState != null ">,insurance_state</if>
            <if test="isQuit != null ">,is_quit</if>
            <if test="schemeId != null ">,scheme_id</if>
            <if test="depId != null ">,dep_id</if>
            <if test="email != null ">,email</if>
            <if test="openid != null ">,openid</if>
            <if test="fundState != null ">,fund_state</if>
            <if test="entryTime != null ">,entry_time</if>
            <if test="leaveTime != null ">,leave_time</if>
            <if test="insuranceSalary != null ">,insurance_salary</if>
            <if test="fundSalary != null ">,fund_salary</if>
            <if test="headPhoto != null ">,head_photo</if>
            <if test="threeId != null" >,three_id</if>
            <if test="ssUserId != null" >,ss_user_id </if>
            <if test="hfUserId != null" >, hf_user_id </if>
            <if test="json !=null">,json</if>
            <if test="salary != null" >,salary</if>
            <if test="branch != null" >,branch</if>
            <if test="depName != null" >,dep_name</if>
            <if test="wechatId != null" >,wechat_id</if>
            <if test="isRemove != null" >,is_remove</if>
            <if test="isSend != null" >,is_send</if>
        </trim>
        )  VALUES (
        <trim prefix=" " prefixOverrides=",">
            <if test="empId != null ">,#{empId}</if>
            <if test="cpId != null ">,#{cpId}</if>
            <if test="name != null ">,#{name}</if>
            <if test="identityType != null ">,#{identityType}</if>
            <if test="identityCode != null ">,#{identityCode}</if>
            <if test="job != null ">,#{job}</if>
            <if test="socialInsuranceNum != null ">,#{socialInsuranceNum}</if>
            <if test="reserveFundNum != null ">,#{reserveFundNum}</if>
            <if test="mobile != null ">,#{mobile}</if>
            <if test="createBy != null ">,#{createBy}</if>
            <if test="createDt != null ">,#{createDt}</if>
            <if test="modifyBy != null ">,#{modifyBy}</if>
            <if test="modifyDt != null ">,#{modifyDt}</if>
            <if test="dr != null ">,#{dr}</if>
            <if test="insuranceLivingType != null ">,#{insuranceLivingType}</if>
            <if test="insuranceState != null ">,#{insuranceState}</if>
            <if test="isQuit != null ">,#{isQuit}</if>
            <if test="schemeId != null ">,#{schemeId}</if>
            <if test="depId != null ">,#{depId}</if>
            <if test="email != null ">,#{email}</if>
            <if test="openid != null ">,#{openid}</if>
            <if test="fundState != null ">,#{fundState}</if>
            <if test="entryTime != null ">,#{entryTime}</if>
            <if test="leaveTime != null ">,#{leaveTime}</if>
            <if test="insuranceSalary != null ">,#{insuranceSalary}</if>
            <if test="fundSalary != null ">,#{fundSalary}</if>
            <if test="headPhoto != null ">,#{headPhoto}</if>
            <if test="threeId != null" >,#{threeId}</if>
            <if test="ssUserId != null" >,#{ssUserId} </if>
            <if test="hfUserId != null" >,#{hfUserId} </if>
            <if test="json != null">,#{json}</if>
            <if test="salary != null" >,#{salary}</if>
            <if test="branch != null" >,#{branch}</if>
            <if test="depName != null" >,#{depName}</if>
            <if test="wechatId != null" >,#{wechatId}</if>
            <if test="isRemove != null" >,#{isRemove}</if>
            <if test="isSend != null" >,#{isSend}</if>
        </trim>
        )
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="empId">
            SELECT LAST_INSERT_ID() AS EMP_ID
        </selectKey>
    </insert>

    <!-- 根据id，修改记录-->
    <update id="UpdateCM_EMPLOYEE" parameterType="Object" >
        UPDATE CM_EMPLOYEE
        <trim prefix=" SET " prefixOverrides=",">
            <if test="empId != null ">,emp_id=#{empId}</if>
            <if test="cpId != null ">,cp_id=#{cpId}</if>
            <if test="name != null ">,name=#{name}</if>
            <if test="identityType != null ">,identity_type=#{identityType}</if>
            <if test="identityCode != null ">,identity_code=#{identityCode}</if>
            <if test="job != null ">,job=#{job}</if>
            <if test="socialInsuranceNum != null ">,social_insurance_num=#{socialInsuranceNum}</if>
            <if test="reserveFundNum != null ">,reserve_fund_num=#{reserveFundNum}</if>
            <if test="mobile != null ">,mobile=#{mobile}</if>
            <if test="createBy != null ">,create_by=#{createBy}</if>
            <if test="createDt != null ">,create_dt=#{createDt}</if>
            <if test="modifyBy != null ">,modify_by=#{modifyBy}</if>
            <if test="modifyDt != null ">,modify_dt=#{modifyDt}</if>
            <if test="dr != null ">,dr=#{dr}</if>
            <if test="insuranceLivingType != null ">,insurance_living_type=#{insuranceLivingType}</if>
            <if test="insuranceState != null ">,insurance_state=#{insuranceState}</if>
            <if test="isQuit != null ">,is_quit=#{isQuit}</if>
            <if test="schemeId != null ">,scheme_id=#{schemeId}</if>
            <if test="depId != null ">,dep_id=#{depId}</if>
            <if test="email != null ">,email=#{email}</if>
            <if test="openid != null ">,openid=#{openid}</if>
            <if test="fundState != null ">,fund_state=#{fundState}</if>
            <if test="entryTime != null ">,entry_time=#{entryTime}</if>
            <if test="leaveTime != null ">,leave_time=#{leaveTime}</if>
            <if test="insuranceSalary != null ">,insurance_salary=#{insuranceSalary}</if>
            <if test="fundSalary != null ">,fund_salary=#{fundSalary}</if>
            <if test="insurancePeriod != null ">,insurance_period=#{insurancePeriod}</if>
            <if test="fundPeriod != null ">,fund_period=#{fundPeriod}</if>
            <if test="headPhoto != null ">,head_photo=#{headPhoto}</if>
            <if test="threeId != null" >,three_id = #{threeId}</if>
            <if test="ssUserId != null" >,ss_user_id = #{ssUserId}</if>
            <if test="hfUserId != null" >,hf_user_id = #{hfUserId}</if>
            <if test="json != null">,json = #{json}</if>
            <if test="salary != null" >,salary = #{salary}</if>
            <if test="salary == null" >,salary = NULL </if>
            <if test="branch != null" >,branch = #{branch}</if>
            <if test="depName != null" >,dep_name = #{depName}</if>
            <if test="wechatId != null" >,wechat_id = #{wechatId}</if>
            <if test="isRemove != null" >,is_remove = #{isRemove}</if>
            <if test="isSend != null" >,is_send = #{isSend}</if>
        </trim>
        WHERE EMP_ID=#{empId}
    </update>

    <!-- 删除记录 -->
    <delete id="DeleteCM_EMPLOYEE">DELETE FROM CM_EMPLOYEE WHERE EMP_ID=#{empId}</delete>
    <!-- 员工信息 列表总数-->
    <select id="CountFindAllCM_EMPLOYEE" resultType="java.lang.Integer">SELECT count(1) as value FROM CM_EMPLOYEE</select>
    <select id="CountCM_EMPLOYEE" resultType="java.lang.Integer">SELECT count(1) as value FROM CM_EMPLOYEE WHERE EMP_ID=#{empId}</select>
    <!-- 根据id查询 员工信息 -->
    <select id="FindByPK" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE WHERE EMP_ID=#{empId}</select>

    <select id="FindEmpAndJsonByPK" resultMap="result_map_CM_EMPLOYEE_JSON" parameterType="Object">SELECT <include refid="Base_Column_List_json" /> FROM CM_EMPLOYEE WHERE EMP_ID=#{empId}</select>


    <!-- 根据各字段条件带模糊查询  员工信息 -->
    <select id="FreeFindCM_EMPLOYEE" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE
        <include refid="Example_Where_Clause2" />
    </select>
    <!-- 根据各字段条件带模糊查询  员工信息 记录数 -->
    <select id="CountFreeFindCM_EMPLOYEE" resultType="java.lang.Integer">
        SELECT count(1) as value FROM CM_EMPLOYEE
        <include refid="Example_Where_Clause2" />
    </select>
    <!-- 根据各字段条件带排序  员工信息 -->
    <select id="FreeFindCM_EMPLOYEEOrdered" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE
        <include refid="Example_Where_Clause2" />
        ORDER BY ${_orderBy}
    </select>

    <!-- *****************************  温馨提示：  ***************************** -->
    <!-- **                                                                    ** -->
    <!-- ** 以上为自动生成代码，请勿改动或删除。如有新sql添加请在下方区域内填写** -->
    <!-- **                                             ** 2016/04/25 16:10:24 ** -->
    <!-- ************************************************************************ -->

    <!-- 根据公司ID查询 员工列表 带模糊查询-->
    <select id="FindByCpId" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        select syst.name as insurance_state_name,sysd.name as fund_state_name,corp.corp_name as corp_name,cmem.*
        from cm_employee cmem
        left join sys_dictitem syst on cmem.insurance_state = syst.code and syst.dictionary=90
        left join sys_dictitem sysd on cmem.fund_state = sysd.code and sysd.dictionary=90
        left join cm_corp corp on cmem.cp_id = corp.cp_id
        left join sp_cm_relation rela on rela.cp_id = corp.cp_id
        where cmem.`dr` = 0
        <if test="cpId != null" > AND cmem.cp_id=#{cpId}</if>
        <if test="createBy != null" > AND rela.sp_id=#{createBy} </if>
        <if test="nameEq != null" >and (cmem.name like '%${nameEq}%' or cmem.identity_code like '%${nameEq}%')</if>
        ORDER BY emp_id
    </select>
    <!-- 根据公司ID查询 员工总数 -->
    <select id="FindByCpIdCount" resultType="java.lang.Integer" parameterType="Object">
        select count(1) as value
        from cm_employee cmem
        <!--left join sys_dictitem sys on sys.dictionary in (select t.id from sys_dictionary t where t.name='liveType') and cmem.living_type = sys.code-->
        left join cm_corp corp on corp.cp_id = cmem.cp_id
        left join sp_cm_relation rela on rela.cp_id = corp.cp_id
        <!-- left join sys_dictitem sysn on sysn.dictionary in (select t.id from sys_dictionary t where t.name='jobState') and cmem.work_state = sysn.code -->
        where cmem.`dr` = 0
        <if test="cpId != null" > AND cmem.cp_id=#{cpId}</if>
        <if test="createBy != null" > AND rela.sp_id=#{createBy} </if>
        <if test="nameEq != null" >and (cmem.name like '%${nameEq}%' or cmem.identity_code like '%${nameEq}%')</if>
    </select>
    <!-- 详情 根据员工ID 查询员工 scr.insurance_type,scr.fund_type,  ||left join sp_cm_relation scr on cmem.cp_id = scr.cp_id -->
    <select id="FreeFindCM_EMPLOYEEByEmpId" resultType="java.util.Map" parameterType="Object">
        <!-- SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE  where emp_id=#{empId} -->
        select
        sys.name as living_type_name,
        sysd.name as insurance_type_name,
        sysdi.name as fund_type_name,
        bsa.fullname AS insurance_area_name,
        bs.fullname AS fund_area_name,
        cme.*
        from cm_employee cme
        left join bs_area bs on cme.fund_area = bs.area_id
        left join bs_area bsa on cme.insurance_area = bsa.area_id
        left join sp_cm_relation scr on cme.cp_id = scr.cp_id
        left join sys_dictitem sys on cme.living_type = sys.code and sys.dictionary=75
        left join sys_dictitem sysd on scr.insurance_type = sysd.code and sysd.dictionary=86
        left join sys_dictitem sysdi on scr.fund_type = sysdi.code and sysdi.dictionary=86
        where emp_id=#{empId}
    </select>
    <!-- 根据员工openid或手机号查询用户 -->
    <select id="FreeFind_EMPLOYEEOpenIdOrMobile" resultMap="result_map_CM_EMPLOYEE">
        SELECT em.* FROM CM_EMPLOYEE em INNER JOIN sp_cm_relation r ON em.cp_id = r.cp_id
        <if test="sp_id != null"> AND r.sp_id = ${sp_id}</if>
        <if test="openid != null"> AND em.openid = #{openid}</if>
        <if test="mobile != null"> AND em.mobile = #{mobile}</if>
    </select>
    <!-- 根据企业ID查询员工身份证号 -->
    <select id="CM_EMPLOYEEIdCardByCpId" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
	SELECT cp_id,emp_id,identity_code FROM CM_EMPLOYEE where cp_id = #{cpId} and dr=#{dr}
</select>

    <!-- 汇总企业社保/公积金代扣代缴费用 -->
    <select id="CM_EMPLOYEE_SUM_FEE" resultType="java.util.Map" parameterType="Object">
		SELECT * FROM (
		SELECT SUM(emp_ayment+corp_payment) as 社保代扣代缴 FROM cm_employee e
		INNER JOIN cm_emp_insurance ce ON e.emp_id = ce.emp_id AND e.work_state = 'IN' AND (ce.state ='ON' OR ce.state='INCREASED') AND e.cp_id = #{cmid}
		INNER JOIN sp_cm_relation re ON re.sp_id = #{spid} AND e.cp_id = re.cp_id
		INNER JOIN bd_insurance insu ON ce.insurance_type = insu.insurance_id AND insu.insurance_fund_type = 'INSURANCE') t,
		(
		SELECT SUM(emp_ayment+corp_payment) as 公积金代扣代缴 FROM cm_employee e
		INNER JOIN cm_emp_insurance ce ON e.emp_id = ce.emp_id AND e.work_state = 'IN' AND (ce.state ='ON' OR ce.state='INCREASED') AND ce.state ='ON' AND e.cp_id = #{cmid}
		INNER JOIN sp_cm_relation re ON re.sp_id = #{spid} AND e.cp_id = re.cp_id
		INNER JOIN bd_insurance insu ON ce.insurance_type = insu.insurance_id AND insu.insurance_fund_type = 'FUND') m,
		(
		SELECT SUM(fee) as 服务费 FROM (
		SELECT count(em.emp_id)*re.service_price as fee FROM cm_employee em
		INNER JOIN cm_emp_insurance insur ON em.emp_id = insur.emp_id AND (insur.state = 'ON' or insur.state = 'INCREASED') AND em.cp_id = #{cmid}
		INNER JOIN sp_cm_relation re ON re.cp_id = em.cp_id AND re.sp_id= #{spid}
		GROUP BY em.emp_id) w ) u
	</select>

    <!-- 获取正常缴纳员工的基本信息列表 -->
    <select id="CM_EMPLOYEE_FEE_LIST" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
		SELECT em.* FROM cm_employee em
		INNER JOIN sp_cm_relation re ON re.sp_id = #{spid} AND em.cp_id = re.cp_id AND em.cp_id = #{cmid}
		GROUP BY emp_id
	</select>
    <!-- 增加员工之前进行数据查询 拿到数据一起插入员工表 -->
    <select id="findInsFunByCpId" resultType="java.util.Map" parameterType="Object">
		select scr.insurance_account_id,scr.fund_account_id,
		spsa.area_id as insurance_area,spsac.area_id as fund_area,
		ba.code insurance_code
		from sp_cm_relation scr
		left join sps_account spsa on scr.insurance_account_id = spsa.acc_id
		left join sps_account spsac on scr.fund_account_id = spsac.acc_id
		left join bs_area ba on spsa.area_id = ba.area_id 
		where scr.cp_id = #{cpId} and scr.sp_id = #{spId}
	</select>
    <!-- 新增员工 如身份证号已存在 修改员工信息 -->
    <select id="findIdCardBySpIdCpId" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
		select  identity_code from  cm_employee where cp_id=#{cpId}
	</select>
    <!-- 获取所有服务商下所维护的员工 -->
    <select id="findAllSpEmployee" resultType="java.util.Map" parameterType="Object">
		SELECT re.sp_id,
		emp.emp_id as empId,emp.cp_id as cpId,emp.name as name,emp.identity_type as identityType,
		emp.identity_code as identityCode,emp.work_state as workState,emp.job as job,emp.living_type as livingType,
		emp.social_insurance_num as socialInsuranceNum,emp.reserve_fund_num as reserveFundNum,emp.mobile as mobile,
		emp.openid as openid,emp.create_by as createBy,emp.create_dt as createDt,emp.modify_by as modifyBy,
		emp.modify_dt as modifyDt,emp.dr as dr,emp.insurance_area as insuranceArea,emp.insurance_account_id as insuranceAccountId,
		emp.insurance_living_type as insuranceLivingType,emp.insurance_base as insuranceBase,
		emp.insurance_state as insuranceState,emp.fund_area as fundArea,
		emp.fund_account_id as fundAccountId,emp.fund_living_type as fundLivingType,
		emp.fund_base as fundBase,emp.fund_state as fundState
		FROM cm_employee emp
		INNER JOIN sp_cm_relation re ON re.cp_id = emp.cp_id AND (emp.dr = 0 or emp.dr is null) AND
				((emp.insurance_state = 'ON' AND emp.fund_state = 'ON') OR (emp.insurance_state = 'ON' AND emp.fund_state = 'OFF') OR (emp.insurance_state = 'OFF' AND emp.fund_state = 'ON'))
		ORDER BY re.sp_id,re.cp_id,emp.emp_id
	</select>
    <!-- 根据企业ID，修改企业旗下所有记录-->
    <update id="UpdateCM_EMPLOYEEByCpId" parameterType="Object" >
        UPDATE CM_EMPLOYEE
        <trim prefix=" SET " prefixOverrides=",">
            <if test="empId != null ">,emp_id=#{empId}</if>
            <if test="name != null ">,name=#{name}</if>
            <if test="identityType != null ">,identity_type=#{identityType}</if>
            <if test="identityCode != null ">,identity_code=#{identityCode}</if>
            <if test="job != null ">,job=#{job}</if>
            <if test="socialInsuranceNum != null ">,social_insurance_num=#{socialInsuranceNum}</if>
            <if test="reserveFundNum != null ">,reserve_fund_num=#{reserveFundNum}</if>
            <if test="mobile != null ">,mobile=#{mobile}</if>
            <if test="openid != null ">,openid=#{openid}</if>
            <if test="createBy != null ">,create_by=#{createBy}</if>
            <if test="createDt != null ">,create_dt=#{createDt}</if>
            <if test="modifyBy != null ">,modify_by=#{modifyBy}</if>
            <if test="modifyDt != null ">,modify_dt=#{modifyDt}</if>
            <if test="dr != null ">,dr=#{dr}</if>
            <!--<if test="insuranceArea != null ">,insurance_area=#{insuranceArea}</if>-->
            <!--<if test="insuranceAccountId != null ">,insurance_account_id=#{insuranceAccountId}</if>-->
            <if test="insuranceLivingType != null ">,insurance_living_type=#{insuranceLivingType}</if>
            <!--<if test="insuranceBase != null ">,insurance_base=#{insuranceBase}</if>-->
            <if test="insuranceState != null ">,insurance_state=#{insuranceState}</if>
            <!--<if test="fundArea != null ">,fund_area=#{fundArea}</if>-->
            <!--<if test="fundAccountId != null ">,fund_account_id=#{fundAccountId}</if>-->
            <!--<if test="fundLivingType != null ">,fund_living_type=#{fundLivingType}</if>-->
            <!--<if test="fundBase != null ">,fund_base=#{fundBase}</if>-->
            <if test="fundState != null ">,fund_state=#{fundState}</if>
            <if test="isRemove != null" >,is_remove = #{isRemove}</if>
            <if test="isSend != null" >,is_send = #{isSend}</if>
        </trim>
        WHERE cp_id=#{cpId}
    </update>

    <!-- 根据库id获取所有库下的员工 -->
    <select id="FreeFindCM_EMPLOYEE_BYACCOUNT" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT ce.* FROM sps_account sa
        <if test="insuranceFundType == 'INSURANCE'">
            INNER JOIN cm_employee ce ON (sa.`insurance_fund_type` = 'INSURANCE' AND sa.`acc_id` = ce.`insurance_account_id`)
        </if>
        <if test="insuranceFundType == 'FUND'">
            INNER JOIN cm_employee ce ON (sa.`insurance_fund_type` = 'FUND' AND sa.`acc_id` = ce.`fund_account_id`)
        </if>
        AND sa.`acc_id` = #{accId}
    </select>
    <!-- 根据服务商ID查询 员工总数 -->
    <select id="FindEmpCountBySpIdAndState" resultType="java.lang.Integer" parameterType="Object">
		select count(1) from cm_employee emp LEFT JOIN cm_corp corp on emp.cp_id = corp.cp_id LEFT JOIN sp_cm_relation rela on rela.cp_id = corp.cp_id where rela.sp_id = #{spId} and emp.dr=0 and (emp.insurance_state = 'ON' or emp.fund_state = 'ON')
	</select>
    <!-- 根据id，逻辑删除记录-->
    <update id="Lgoic_del_CM_EMPLOYEE" parameterType="Object" >
		UPDATE CM_EMPLOYEE SET dr=1 WHERE EMP_ID=#{empId}
	</update>
    <!-- 根据服务商id查询企业社保/公积金id与地区-->
    <select id="QUERY_FUND_INSURANCE_AREA_ID" resultType="java.util.Map" parameterType="Object">
		select scr.insurance_account_id,scr.fund_account_id,
		spsa.area_id as insurance_area,spsac.area_id as fund_area,
		ba.code insurance_code,scr.cp_id
		from sp_cm_relation scr
		left join sps_account spsa on scr.insurance_account_id = spsa.acc_id
		left join sps_account spsac on scr.fund_account_id = spsac.acc_id
		left join bs_area ba on spsa.area_id = ba.area_id
		where  scr.sp_id = #{spId}
	</select>

    <select id="Find_Employee_List_By_Condition" resultType="java.util.Map" parameterType="Object">
     	select barea.name as areaname,
        emp.emp_id as emp_id,emp.name as name,emp.insurance_state as insurance_state,
		emp.insurance_salary , emp.fund_state ,emp.fund_salary,emp.dr as dr, 
		emp.identity_type,emp.identity_code,
        c.short_name as short_name,c.corp_name,s.scheme_type,ser.sp_name,
		sd.name as id_name
        from sps_scheme s
        inner join sps_scheme_emp e on s.scheme_id=e.scheme_id AND s.dr = 0 and e.state = 'USE'
        INNER JOIN sp_cm_relation rel ON rel.sp_id = s.sp_id AND rel.cp_id = s.cp_id
        inner join cm_employee emp on emp.emp_id = e.emp_id
        inner join cm_corp c on s.cp_id = c.cp_id  and c.dr = 0
        left join  sp_service ser on ser.sp_id = s.parent_sp_id
        left join  bs_area area on area.area_id=s.area_id
        left join  bs_area barea on barea.area_id=area.belong_city
		LEFT JOIN sys_dictitem sd on sd.code = emp.identity_type and  sd.dictionary=89
        where  1=1
        <!-- 2017-01-11  来源 有效性 缴纳城市 社保状态 公积金状态 搜索类型 搜索条件-->
        <if test="keyWord != null">
	        <if test="searchType =='CUST'" > and (c.short_name like '%${keyWord}%' or c.corp_name like '%${keyWord}%')</if>
	        <if test="searchType =='EMP'"  > and (emp.name like '%${keyWord}%' or emp.identity_code like '%${keyWord}%')</if>
        </if>
        <if test="valid !=null">
        	<if test="valid == 'UNDEL'">and emp.dr=0</if>
        	<if test="valid == 'DELED'">and emp.dr=1</if>
        </if>
        <if test="areaId!=null">and barea.area_id =#{areaId}</if>
        <if test="insuranceState != null "> AND emp.insurance_state = #{insuranceState}</if>
        <if test="fundState != null "> AND emp.fund_state = #{fundState}</if>
        <if test="schemeType != null "> AND s.scheme_type like '%${schemeType}%'</if>
        <if test="cpId != null "> AND c.cp_id = #{cpId}</if>
        <if test="spId != null "> AND s.sp_id = #{spId}</if>
        <if test="authority != 'ALL'">
            AND c.cp_id in (${authority})
        </if>
        order by emp.create_dt desc
    </select>

    <select id="Find_Employee_List_By_Condition_Count" resultType="java.lang.Integer" parameterType="Object">
        select  count(1) as value 
        from sps_scheme s
        inner join sps_scheme_emp e on s.scheme_id=e.scheme_id AND s.dr = 0 and e.state = 'USE'
        INNER JOIN sp_cm_relation rel ON rel.sp_id = s.sp_id AND rel.cp_id = s.cp_id
        inner join cm_employee emp on emp.emp_id = e.emp_id
        inner join cm_corp c on s.cp_id = c.cp_id  and c.dr = 0
        left join  sp_service ser on ser.sp_id = s.parent_sp_id
        left join  bs_area area on area.area_id=s.area_id
        left join  bs_area barea on barea.area_id=area.belong_city
		LEFT JOIN sys_dictitem sd on sd.code = emp.identity_type and  sd.dictionary=89
        where  1=1
        <!-- <if test="name != null" > and emp.name like '%${name}%'</if> -->
        <!-- 2017-01-11  来源 有效性 缴纳城市 社保状态 公积金状态 搜索类型 搜索条件-->
        <if test="searchType != null">
	        <if test="searchType =='CUST'" > and (c.short_name like '%${keyWord}%' or c.corp_name like '%${keyWord}%')</if>
	        <if test="searchType =='EMP'"  > and (emp.name like '%${keyWord}%' or emp.identity_code like '%${keyWord}%')</if>
        </if>
        <if test="valid !=null">
        	<if test="valid == 'UNDEL'">and emp.dr=0</if>
        	<if test="valid == 'DELED'">and emp.dr=1</if>
        </if>
        <if test="areaId!=null">and barea.area_id =#{areaId}</if>
        <if test="insuranceState != null "> AND emp.insurance_state = #{insuranceState}</if>
        <if test="fundState != null "> AND emp.fund_state = #{fundState}</if>
        <if test="schemeType != null "> AND s.scheme_type like '%${schemeType}%'</if>
        <if test="cpId != null "> AND c.cp_id = #{cpId}</if>
        <if test="spId != null "> AND s.sp_id = #{spId}</if>
        <if test="authority != 'ALL'">
            AND c.cp_id in (${authority})
        </if>
    </select>

    <select id="Find_Employee_Basic_Info" resultType="java.util.Map" parameterType="Object">
        select sdic.name as dic_name,emp.emp_id as emp_id, emp.name as name, area.name as area_name, area.fullname as fullname, corp.corp_name as corp_name, area.area_id as area_id,
        dic.name as living_type_name, emp.identity_code as identity_code, sch.name as sheme_name, emp.mobile as mobile, emp.email as email,emp.cp_id as cp_id, sch.scheme_id as scheme_id,
        emp.insurance_salary as  insurance_salary,emp.fund_salary as fund_salary,iiacc.fullname as iareaname,iiacc.name as insurance_account_name,ffacc.fullname as fareaname,sch.end_date as end_date,
        ffacc.name as fund_account_name, emp.fund_state as fund_state, emp.insurance_state as insurance_state, sch.scheme_type as scheme_type, emp.insurance_living_type as insurance_living_type,
        emp.insurance_period as insurance_period, emp.branch, emp.fund_period as fund_period, ffacc.acc_type as facc_type, iiacc.acc_type as iacc_type,sch.fund_account_id as fund_account_id, sch.insurance_account_id as insurance_account_id, sch.sp_id
        from cm_employee emp
        inner join sps_scheme_emp s on emp.emp_id = s.emp_id and s.state ='USE'
        inner join sps_scheme sch on sch.scheme_id=s.scheme_id
        inner JOIN bs_area area on sch.area_id = area.area_id
        LEFT JOIN cm_corp corp on emp.cp_id = corp.cp_id
        LEFT JOIN sys_dictitem  sdic on sdic.code = emp.identity_type and sdic.dictionary = 89
        LEFT JOIN sys_dictitem dic on    emp.insurance_living_type = dic.code  and dic.dictionary=93 and dic.area_id = area.belong_city
        LEFT JOIN  (select facc.name,facc.acc_id, farea.fullname, facc.acc_type  from sps_account facc LEFT JOIN  bs_area farea on  facc.area_id = farea.area_id) ffacc on sch.fund_account_id = ffacc.acc_id
        LEFT JOIN  (select iacc.name,iacc.acc_id, iarea.fullname, iacc.acc_type  from sps_account iacc LEFT JOIN  bs_area iarea on  iacc.area_id = iarea.area_id) iiacc on sch.insurance_account_id = iiacc.acc_id
        where 1 = 1
        <if test="empId != null" >and  emp.emp_id = #{empId}</if>
        <if test="spId != null" >and  sch.sp_id = #{spId}</if>
        group by emp.emp_id
    </select>

    <select id="Find_Employee_Insure_Info" resultType="java.util.Map" parameterType="Object">
        SELECT *,MAX(t.ins_period) as insurance_period,MAX(t.f_period) as fund_period FROM (
        select emp.emp_id as emp_id,emp.insurance_state as insurance_state, emp.insurance_salary as insurance_salary, area.fullname as fullname, area.name as area_name, emp.fund_state as fund_state,
        emp.fund_salary as fund_salary,ins.insurance_fund_type
        ,CASE WHEN ins.insurance_fund_type = 'INSURANCE' THEN MIN(DISTINCT eins.begin_period) END as ins_period, CASE WHEN ins.insurance_fund_type = 'FUND' THEN MIN(DISTINCT eins.begin_period) END as f_period
        from cm_employee emp
        LEFT JOIN sps_scheme sch on emp.scheme_id = sch.scheme_id
        LEFT JOIN bs_area area on sch.area_id = area.area_id
        LEFT JOIN cm_employee_insurance eins ON eins.emp_id = emp.emp_id AND eins.dr = 0
        LEFT JOIN bd_insurance ins ON ins.insurance_id = eins.insurance_id
        where emp.dr = 0 and eins.pay_type = 'MONTH'
        <if test="empId != null" >and  emp.emp_id = #{empId}</if>
        GROUP BY emp.emp_id,ins.insurance_fund_type
        ) t GROUP BY t.emp_id
    </select>
    <select id="Find_Employee_Info_By_PK" resultType="java.util.Map" parameterType="Object">
        select emp.emp_id as emp_id,emp.name as name , emp.insurance_state as insurance_state, iacc.name as insurance_account_name, emp.insurance_salary  as insurance_salary, emp.fund_state  as  fund_state,   facc.name as fund_account_name, emp.fund_salary as fund_salary, corp.corp_name as  corp_name, sch.scheme_type as scheme_type,ser.sp_name as sp_name,
        sch.insurance_type as insurance_type, sch.fund_type as fund_type, emp.identity_code as identity_code, sch.name as sheme_name,sch.area_id as area_id
        from cm_employee emp
        LEFT JOIN  sps_scheme sch  on emp.scheme_id = sch.scheme_id
        LEFT JOIN  sps_account facc on sch.fund_account_id = facc.acc_id
        LEFT JOIN  cm_corp corp on corp.cp_id = emp.cp_id
        LEFT JOIN  sp_service ser on ser.sp_id = sch.parent_sp_id
        LEFT JOIN  sps_account iacc on sch.insurance_account_id = iacc.acc_id
        where emp.dr = 0
        <if test="empId != null" >and  emp.emp_id = #{empId}</if>
    </select>
    <resultMap id="mapType" type="java.util.Map">
    </resultMap>
    <select id="findEmpBySchemeId" resultMap="mapType" parameterType="Object">
		  SELECT  t.`name`,t.emp_id,t.insurance_state,t.fund_state,e.state 
		  from cm_employee t inner join sps_scheme_emp  e 
		  on t.emp_id=e.emp_id  where e.state = 'USE' and t.dr = 0 and e.dr=0 
		  and e.scheme_id =#{scheme_id} and t.cp_id = #{cp_id} and t.`fund_state` != 'DECREASED' and t.`insurance_state` != 'DECREASED'
    </select>


    <resultMap id="result_map_Employee_With_Detail" type="com.xfs.corp.model.CmEmployee" >
        <result column="emp_id" property="empId"/>
        <result column="cp_id" property="cpId"/>
        <result column="name" property="name"/>
        <result column="period" property="period"/>
        <result column="identity_type" property="identityType"/>
        <result column="identity_code" property="identityCode"/>
        <result column="job" property="job"/>
        <result column="social_insurance_num" property="socialInsuranceNum"/>
        <result column="reserve_fund_num" property="reserveFundNum"/>
        <result column="mobile" property="mobile"/>
        <result column="create_by" property="createBy"/>
        <result column="create_dt" property="createDt"/>
        <result column="modify_by" property="modifyBy"/>
        <result column="modify_dt" property="modifyDt"/>
        <result column="dr" property="dr"/>
        <result column="insurance_living_type" property="insuranceLivingType"/>
        <result column="insurance_state" property="insuranceState"/>
        <result column="is_quit" property="isQuit"/>
        <result column="scheme_id" property="schemeId"/>
        <result column="dep_id" property="depId"/>
        <result column="email" property="email"/>
        <result column="openid" property="openid"/>
        <result column="fund_state" property="fundState"/>
        <result column="entry_time" property="entryTime"/>
        <result column="leave_time" property="leaveTime"/>
        <result column="insurance_salary" property="insuranceSalary"/>
        <result column="fund_salary" property="fundSalary"/>
        <collection property="empinsurances" javaType="List" ofType="com.xfs.corp.model.CmEmployeeInsurance" column="{emp_id=detail_emp_id,period=period}">
            <result column="detail_id" property="id"/>
            <result column="detail_emp_id" property="empId"/>
            <result column="detail_insurance_id" property="insuranceId"/>
            <result column="detail_emp_paybase" property="empPaybase"/>
            <result column="detail_corp_paybase" property="corpPaybase"/>
            <result column="detail_emp_payment" property="empPayment"/>
            <result column="detail_corp_payment" property="corpPayment"/>
            <result column="detail_emp_ratio" property="empRatio"/>
            <result column="detail_corp_ratio" property="corpRatio"/>
            <result column="detail_create_by" property="createBy"/>
            <result column="detail_create_dt" property="createDt"/>
            <result column="detail_modify_by" property="modifyBy"/>
            <result column="detail_modify_dt" property="modifyDt"/>
            <result column="detail_dr" property="dr"/>
            <result column="detail_begin_period" property="beginPeriod"/>
            <result column="detail_end_period" property="endPeriod"/>
            <result column="detail_begin_task" property="beginTask"/>
            <result column="detail_end_task" property="endTask"/>
            <result column="detail_ratio_id" property="ratioId"/>
            <result column="detail_emp_paybase" property="empPaybase"/>
            <result column="detail_corp_paybase" property="corpPaybase"/>
            <result column="detail_corp_addition" property="corpAddition"/>
            <result column="detail_psn_addition" property="psnAddition"/>
            <result column="minPeriod" property="minPeriod"/>
        </collection>
    </resultMap>

    <select id="find_CM_EMPLIST_WithDetail_BY_EMPIDS" resultMap="result_map_Employee_With_Detail" parameterType="Object">
        SELECT ifnull(detail.period,#{period}) as period,emp.emp_id,emp.cp_id,emp.name,emp.identity_type,emp.identity_code,emp.job,emp.social_insurance_num,emp.reserve_fund_num,emp.mobile,emp.create_by,
        emp.create_dt,emp.modify_by,emp.modify_dt,emp.dr,emp.insurance_living_type,emp.insurance_state,emp.is_quit,emp.scheme_id,emp.dep_id,emp.email,emp.openid,
        emp.fund_state,emp.entry_time,emp.leave_time,emp.insurance_salary,emp.fund_salary,
        detail.id detail_id,detail.emp_id detail_emp_id,detail.insurance_id detail_insurance_id,detail.emp_paybase detail_emp_paybase,detail.corp_paybase detail_corp_paybase,
        detail.emp_ratio detail_emp_ratio,detail.corp_ratio detail_corp_ratio,detail.emp_payment detail_emp_payment,detail.corp_payment detail_corp_payment,
        detail.create_by detail_create_by,detail.create_dt detail_create_dt,detail.modify_by detail_modify_by,detail.modify_dt detail_modify_dt,detail.dr detail_dr,
        detail.ratio_id detail_ratio_id,detail.emp_paybase detail_emp_paybase,detail.corp_paybase detail_corp_paybase,detail.corp_addition detail_corp_addition,
        detail.psn_addition detail_psn_addition,detail.begin_period detail_begin_period,detail.end_period detail_end_period,
        (select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id`
        <if test="payType != null">
            and ccc.pay_type = #{payType}
        </if>
        and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = emp.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) as minPeriod
        FROM cm_employee emp
        left join cm_employee_insurance detail on emp.emp_id = detail.emp_id and detail.dr = 0 and detail.begin_period &lt;= #{period} and ifnull(detail.end_period,'2099-12') &gt;= #{period}
        left join bd_insurance on bd_insurance.insurance_id = detail.insurance_id
        where emp.emp_id in
        <foreach item="empid" index="index" collection="empIds" open="(" separator="," close=")">
            #{empid}
        </foreach> and emp.dr=0
        <if test="payType != null">
            and detail.pay_type = #{payType}
        </if>
        <if test="insuranceOrFund != null ">
            and bd_insurance.insurance_fund_type=#{insuranceOrFund}
        </if>

    </select>



    <!-- 获取员工信息 -->
    <select id="QUERY_EMPLOYEE_INFO" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT * FROM cm_employee em
        <if test="spId != null ">
            INNER JOIN sp_cm_relation re ON re.cp_id = em.cp_id AND re.sp_id = #{spId}
        </if>
        WHERE em.cp_id = #{cpId} AND em.emp_id = #{empId}
    </select>
    <!-- 校验员工是否存在 -->
    <select id="FindByPkAndCpIdAndDr" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
    	select emp_id,cp_id,name from cm_employee where emp_id =#{empId} and cp_id =#{cpId} and dr =#{dr}
    
    </select>

    <!-- 查询服务商下所有员工 -->
    <select id="QUERY_ALL_EMPLOYEE_INFO_BY_SPID" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT emp.emp_id,`name`,emp.identity_code FROM sp_cm_relation re INNER JOIN cm_employee emp ON re.cp_id = emp.cp_id
        AND re.sp_id = #{sp_id}
    </select>
    <!-- 查询社保、公积金在缴人数   -->
    <select id="queryInsurNumBySpId" resultMap="mapType" parameterType="Object">
        select  c.cp_id as cpId,count(e.emp_id) as num from sps_scheme s
        inner join sps_scheme_emp e on s.scheme_id=e.scheme_id
        inner join cm_employee emp on emp.emp_id = e.emp_id
        inner join cm_corp c on s.cp_id = c.cp_id
        where s.sp_id = #{spId} and emp.dr = 0
        <if test="state == 'INSURANCE' ">
            and  emp.insurance_state = 'ON'
        </if>
        <if test="state == 'FUND' ">
            and  emp.fund_state = 'ON'
        </if>
        group by c.cp_id
    </select>


    <!-- 根据方案id查询员工实体 -->
    <select id="findEmpEntityBySchemeId" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT c.* from cm_employee c inner join sps_scheme_emp s on c.emp_id = s.emp_id 
        where s.scheme_id = #{schemeId}
    </select>

    <!-- 汇总企业社保/公积金代扣代缴费用 -->
    <select id="CM_EMPLOYEE_SUM_FEE_CS" resultType="java.util.Map" parameterType="Object">
        SELECT * FROM (
        SELECT SUM(emp_ayment+corp_payment) as 社保代扣代缴 FROM cm_employee e
        INNER JOIN cm_emp_insurance ce ON e.emp_id = ce.emp_id AND (ce.state ='ON' OR ce.state='INCREASED') AND e.cp_id = #{cmid}
        INNER JOIN sp_cm_relation re ON e.cp_id = re.cp_id
        INNER JOIN bd_insurance insu ON ce.insurance_type = insu.insurance_id AND insu.insurance_fund_type = 'INSURANCE') t,
        (
        SELECT SUM(emp_ayment+corp_payment) as 公积金代扣代缴 FROM cm_employee e
        INNER JOIN cm_emp_insurance ce ON e.emp_id = ce.emp_id AND (ce.state ='ON' OR ce.state='INCREASED') AND ce.state ='ON' AND e.cp_id = #{cmid}
        INNER JOIN sp_cm_relation re ON e.cp_id = re.cp_id
        INNER JOIN bd_insurance insu ON ce.insurance_type = insu.insurance_id AND insu.insurance_fund_type = 'FUND') m,
        (
        SELECT SUM(fee) as 服务费 FROM (
        SELECT count(em.emp_id)*re.service_price as fee FROM cm_employee em
        INNER JOIN cm_emp_insurance insur ON em.emp_id = insur.emp_id AND (insur.state = 'ON' or insur.state = 'INCREASED') AND em.cp_id = #{cmid}
        INNER JOIN sp_cm_relation re ON re.cp_id = em.cp_id
        GROUP BY em.emp_id) w ) u
    </select>

    <!-- 新增员工 如身份证号已存在 修改员工信息 -->
    <select id="checkEmpIdCardAndName" resultType="java.lang.Integer" parameterType="Object">
        select count(1) as value from  cm_employee where cp_id=#{cpId} AND identity_code = #{identityCode} AND name = #{name}
        <if test="empId != null">AND emp_id != #{empId}</if>
    </select>


    <!--查询部门所属员工-->
    <select id="CountEmplByDepId" resultType="java.lang.Integer">
        SELECT count(1) as value FROM CM_EMPLOYEE
        WHERE dep_id = #{depId} and dr=0
    </select>
    <!--page查询条件-->
    <sql id="Example_Where_Clause3">
        <trim prefix=" WHERE " prefixOverrides="AND ">
            <if test="empId != null">AND emp_id = #{empId}</if>
            <if test="depId != null">AND dep_id = #{depId}</if>
            <if test="depIn != null">AND dep_id in(${depIn})</if>
            <if test="isQuit != null">AND is_quit = #{isQuit}</if>
            <if test="cpId != null">AND cp_id = #{cpId}</if>
            <if test="name != null">AND (`name` like '%${name}%' or identity_code like '%${name}%')</if>
            <if test="dr != null">AND dr =#{dr}</if>
        </trim>
    </sql>
    <!-- 根据页面段条件带模糊查询  员工信息 记录数 -->
    <select id="CountFreeFindCM_EMPLOYEE1" resultType="java.lang.Integer">
        SELECT count(1) as value FROM CM_EMPLOYEE
        <include refid="Example_Where_Clause3" />
    </select>
    <!-- 根据各字段条件带排序  员工信息 -->
    <select id="FreeFindCM_EMPLOYEEOrdered1" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE
        <include refid="Example_Where_Clause3" />
        ORDER BY ${_orderBy}
    </select>

    <!-- 根据id与部门，修改记录-->
    <update id="UpdateEmplDepIdByEmpAndCp" parameterType="Object" >
        UPDATE CM_EMPLOYEE
        SET dep_id=#{depId}
        WHERE EMP_ID IN (${empId}) AND cp_id=#{cpId}
    </update>
    <select id="find_CM_EMPLIST_WithDetail_BY_EMPIDS_CS" resultMap="result_map_Employee_With_Detail" parameterType="Object">
        SELECT emp.emp_id,emp.cp_id,emp.name,emp.identity_type,emp.identity_code,emp.job,emp.social_insurance_num,emp.reserve_fund_num,emp.mobile,emp.create_by,
        emp.create_dt,emp.modify_by,emp.modify_dt,emp.dr,emp.insurance_living_type,emp.insurance_state,emp.is_quit,emp.scheme_id,emp.dep_id,emp.email,emp.openid,
        emp.fund_state,emp.entry_time,emp.leave_time,emp.insurance_salary,emp.fund_salary,
        detail.id detail_id,detail.emp_id detail_emp_id,detail.insurance_id detail_insurance_id,detail.emp_paybase detail_emp_paybase,detail.corp_paybase detail_corp_paybase,
        detail.emp_ratio detail_emp_ratio,detail.corp_ratio detail_corp_ratio,detail.emp_payment detail_emp_payment,detail.corp_payment detail_corp_payment,
        detail.create_by detail_create_by,detail.create_dt detail_create_dt,detail.modify_by detail_modify_by,detail.modify_dt detail_modify_dt,detail.dr detail_dr,
        detail.ratio_id detail_ratio_id,detail.emp_paybase detail_emp_paybase,detail.corp_paybase detail_corp_paybase,detail.corp_addition detail_corp_addition,
        detail.psn_addition detail_psn_addition
        FROM cm_employee emp
        left join cm_employee_insurance detail on emp.emp_id = detail.emp_id and detail.dr = 0
        where emp.emp_id in
        <foreach item="empid" index="index" collection="empIds" open="(" separator="," close=")">
            #{empid}
        </foreach> and emp.dr=0 and detail.pay_type = 'MONTH'

    </select>



    <select id="CountFreeFindCM_EMPLOYEE2" resultType="java.lang.Integer" parameterType="Object">
        SELECT count(1) as value FROM CM_EMPLOYEE
        <trim prefix=" WHERE " prefixOverrides="AND ">
            <if test="empId != null">AND emp_id = #{empId}</if>
            <if test="cpId != null">AND cp_id = #{cpId}</if>
            <if test="name != null">AND name like '%${name}%'</if>
            <if test="nameEq != null">AND name = #{nameEq}</if>
            <if test="identityType != null">AND identity_type like '%${identityType}%'</if>
            <if test="identityTypeEq != null">AND identity_type = #{identityTypeEq}</if>
            <if test="identityCode != null">AND identity_code like '%${identityCode}%'</if>
            <if test="identityCodeEq != null">AND identity_code = #{identityCodeEq}</if>
            <if test="job != null">AND job like '%${job}%'</if>
            <if test="jobEq != null">AND job = #{jobEq}</if>
            <if test="socialInsuranceNum != null">AND social_insurance_num like '%${socialInsuranceNum}%'</if>
            <if test="socialInsuranceNumEq != null">AND social_insurance_num = #{socialInsuranceNumEq}</if>
            <if test="reserveFundNum != null">AND reserve_fund_num like '%${reserveFundNum}%'</if>
            <if test="reserveFundNumEq != null">AND reserve_fund_num = #{reserveFundNumEq}</if>
            <if test="mobile != null">AND mobile like '%${mobile}%'</if>
            <if test="mobileEq != null">AND mobile = #{mobileEq}</if>
            <if test="openid != null">AND openid = '${openId}'</if>
            <if test="openidEq != null">AND openid = #{openidEq}</if>
            <if test="createBy != null">AND create_by = '%${createBy}%'</if>
            <if test="createDt != null">AND create_dt = #{createDt}</if>
            <if test="createDtFrom != null">AND create_dt&gt;=#{createDtFrom}</if>
            <if test="createDtTo != null">AND create_dt&lt;=#{createDtTo}</if>
            <if test="modifyBy != null">AND modify_by = '%${modifyBy}%'</if>
            <if test="modifyDt != null">AND modify_dt = #{modifyDt}</if>
            <if test="modifyDtFrom != null">AND modify_dt&gt;=#{modifyDtFrom}</if>
            <if test="modifyDtTo != null">AND modify_dt&lt;=#{modifyDtTo}</if>
            <if test="dr != null">AND dr =#{dr}</if>
            <if test="insuranceLivingType != null">AND insurance_living_type like '%${insuranceLivingType}%'</if>
            <if test="insuranceLivingTypeEq != null">AND insurance_living_type = #{insuranceLivingTypeEq}</if>
            <if test="insuranceSalary != null">AND insurance_salary like '%${insuranceSalary}%'</if>
            <if test="insuranceState != null">AND insurance_state like '%${insuranceState}%'</if>
            <if test="insuranceStateEq != null">AND insurance_state = #{insuranceStateEq}</if>
            <if test="fundSalary != null">AND fund_salary like '%${fundSalary}%'</if>
            <if test="fundState != null">AND fund_state like '%${fundState}%'</if>
            <if test="fundStateEq != null">AND fund_state = #{fundStateEq}</if>
            <if test="leaveTime != null" >and leave_time = #{leaveTime}</if>
            <if test="isQuit != null">and is_quit = #{isQuit}</if>
            <if test="leaveTimeFrom != null">AND leave_time&gt;=#{leaveTimeFrom}</if>
            <if test="leaveTimeDtTo != null">AND leave_time&lt;=#{leaveTimeDtTo}</if>
            <if test="entryTimeFrom != null">AND entry_time&gt;=#{entryTimeFrom}</if>
            <if test="entryTimeDtTo != null">AND entry_time&lt;=#{entryTimeDtTo}</if>
        </trim>
    </select>

    <!-- 查询社保在缴公积金在缴总人数-->
    <select id="COUNTFINDALLEMPLOYEE_CORP" resultType="java.lang.Integer">
        SELECT count(1) as value FROM cm_employee
        WHERE 1=1 and ( INSURANCE_STATE = 'ON' or fund_state = 'ON' )
    </select>
    <!-- 按创建日期查询社保在缴公积金在缴总人数-->
    <select id="COUNTBYDAYEMPLOYEE" resultType="java.util.HashMap"
            parameterType="Object">
        select count(1) as countEmployee,create_dt from cm_employee
        where create_dt &gt; #{stringDate}
        and ( INSURANCE_STATE = 'ON' or fund_state = 'ON' )
        group by DATE_FORMAT(`create_dt`,'%Y-%m-%d')
    </select>


    <!--批量更改比例 查询人员-->
    <select id="FindEmpByBatchRatio" resultType="java.util.HashMap"
            parameterType="Object">
        select emp.emp_id,corp.cp_id,emp.`name`,emp.identity_code,corp.corp_name,emp.insurance_state,emp.fund_state,emp.scheme_id from cm_employee emp
        left JOIN cm_employee_insurance insu on emp.emp_id=insu.emp_id and insu.pay_type = 'MONTH'
        LEFT JOIN bs_arearatio ratio ON insu.ratio_id = ratio.ratio_id
        INNER JOIN cm_corp corp on emp.cp_id=corp.cp_id
        <if test="authority != 'ALL'">
            AND corp.cp_id in (${authority})
        </if>
        LEFT JOIN sp_cm_relation rela on emp.cp_id=rela.cp_id
        LEFT JOIN sps_scheme scheme on emp.scheme_id=scheme.scheme_id
        <trim prefix=" WHERE " prefixOverrides="AND ">
            <if test="spId != null">AND rela.sp_id=#{spId}</if>
            <if test="cpId != null">AND emp.cp_id=#{cpId}</if>
            <if test="areaId != null">AND (ratio.ratio_id is null or ratio.area_id = #{areaId})</if>
            <if test="insuranceType == 'INSURANCE' and states != null">
                AND emp.insurance_state in
                <foreach item="state" index="index" collection="states" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
            <if test="insuranceType == 'FUND' and states != null">
                AND emp.fund_state in
                <foreach item="state" index="index" collection="states" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
            <if test="insuranceIivingType != null"> and emp.insurance_living_type = #{insuranceIivingType}</if>
            <if test="ratioId != null"> and insu.ratio_id = #{ratioId}</if>
            <if test="ratioId == null and insuranceId != null">AND insu.insurance_id = #{insuranceId}</if>
            <if test="beginPeriod != null">
                and insu.begin_period &lt;= #{beginPeriod}
                and (insu.end_period is null or insu.end_period &gt;= #{beginPeriod})
            </if>
            <if test="livingTypes != null">
                AND emp.insurance_living_type in
                <foreach item="lt" index="index" collection="livingTypes" open="(" separator="," close=")">
                    #{lt}
                </foreach>
            </if>
          	<if test="chk_emp_ids != null">
            	AND emp.emp_id in (${chk_emp_ids})
            </if>
        </trim>
        and scheme.state = 'USE' and emp.dr=0 and insu.dr=0
    </select>
    <!--批量更改比例 查询人员总数-->
    <select id="FindEmpByBatchRatioCount" resultType="java.lang.Integer"
            parameterType="Object">
        select count(1) as value from cm_employee emp
        left JOIN cm_employee_insurance insu on emp.emp_id=insu.emp_id and insu.pay_type = 'MONTH'
        LEFT JOIN bs_arearatio ratio ON insu.ratio_id = ratio.ratio_id
        INNER JOIN cm_corp corp on emp.cp_id=corp.cp_id
        <if test="authority != 'ALL'">
            AND corp.cp_id in (${authority})
        </if>
        LEFT JOIN sp_cm_relation rela on emp.cp_id=rela.cp_id
        LEFT JOIN sps_scheme scheme on emp.scheme_id=scheme.scheme_id
        <trim prefix=" WHERE " prefixOverrides="AND ">
            <if test="spId != null">AND rela.sp_id=#{spId}</if>
            <if test="cpId != null">AND emp.cp_id=#{cpId}</if>
            <if test="areaId != null">AND (ratio.ratio_id is null or ratio.area_id = #{areaId})</if>
            <if test="insuranceType == 'INSURANCE' and states != null">
                AND emp.insurance_state in
                <foreach item="state" index="index" collection="states" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
            <if test="insuranceType == 'FUND' and states != null">
                AND emp.fund_state in
                <foreach item="state" index="index" collection="states" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
            <if test="insuranceIivingType != null"> and emp.insurance_living_type = #{insuranceIivingType}</if>
            <if test="ratioId != null"> and insu.ratio_id = #{ratioId}</if>
            <if test="ratioId == null and insuranceId != null">AND insu.insurance_id = #{insuranceId}</if>
            <if test="beginPeriod != null">
                and insu.begin_period &lt;= #{beginPeriod}
                and (insu.end_period is null or insu.end_period &gt;= #{beginPeriod})
            </if>
            <if test="livingTypes != null">
                AND emp.insurance_living_type in
                <foreach item="lt" index="index" collection="livingTypes" open="(" separator="," close=")">
                    #{lt}
                </foreach>
            </if>
          	<if test="chk_emp_ids != null">
            	AND emp.emp_id in (${chk_emp_ids})
            </if>
        </trim>
        and scheme.state = 'USE' and emp.dr=0 and insu.dr=0
    </select>
    <!-- 员工详情 缴费详情 服务费 -->
	<select id="FreeFindCM_EMPLOYEE_SERVICE_CHARGE" resultType="java.util.Map" parameterType="Object">
		SELECT schem.* FROM sp_cm_relation rel 
		INNER JOIN CM_EMPLOYEE ce on ce.emp_id = #{empId}
		INNER JOIN SP_CM_RELATION scp on scp.cp_id = ce.cp_id
		INNER JOIN SPS_SCHEME schem ON rel.sp_id = schem.sp_id AND rel.cp_id = schem.cp_id AND rel.sp_id = scp.sp_id AND rel.cp_id = ce.cp_id
		INNER JOIN SPS_SCHEME_EMP schem_emp ON schem.scheme_id = schem_emp.scheme_id AND schem_emp.emp_id = #{empId};
	</select>
    <!-- 批量减员查询员工 -->
    <select id="FreeFindBatchReduceEmployee" resultType="java.util.Map" parameterType="Object">
        SELECT t.*,belong.`name` as belong_name FROM (
        SELECT emp.emp_id,emp.`name`,emp.identity_code,emp.identity_type,corp.cp_id,corp.corp_name,corp.short_name,ins.insurance_fund_type,sc.scheme_type,
        (CASE WHEN ins.insurance_fund_type = 'FUND' THEN funacc.acc_type ELSE insacc.acc_type END) as acc_type,
        (CASE WHEN ins.insurance_fund_type = 'FUND' THEN funarea.fullname ELSE insarea.fullname END) as areaname,
        (CASE WHEN ins.insurance_fund_type = 'FUND' THEN emp.fund_state ELSE emp.insurance_state END) as ins_fun_state,
        (CASE WHEN ins.insurance_fund_type = 'FUND' THEN funarea.belong_city ELSE insarea.belong_city END) as belong_city,
        MIN(empins.begin_period) AS begin_period FROM
        cm_employee emp INNER JOIN cm_employee_insurance empins ON emp.emp_id = empins.emp_id and emp.dr=0 and empins.pay_type = 'MONTH'
        <if test="empSearch != null and empSearch != ''"> and (emp.`name` like '%${empSearch}%' or emp.identity_code like '%${empSearch}%')</if>
        INNER JOIN bd_insurance ins ON ins.insurance_id = empins.insurance_id
        <if test="insuranceFundType != null and insuranceFundType != ''"> and ins.insurance_fund_type=#{insuranceFundType}</if>
        inner JOIN cm_corp corp on emp.cp_id=corp.cp_id
        <if test="authority != 'ALL'">
            AND corp.cp_id in (${authority})
        </if>
        <if test="corpSearch != null and corpSearch != ''"> and (corp.corp_name like '%${corpSearch}%' or corp.short_name like '%${corpSearch}%')</if>
        inner JOIN sps_scheme_emp se ON emp.emp_id=se.emp_id and se.state='USE' and se.dr=0
        inner JOIN sps_scheme sc on se.scheme_id=sc.scheme_id
        <if test="schemeType != null and schemeType != ''"> and sc.scheme_type=#{schemeType}</if>
        INNER JOIN sp_cm_relation rel ON rel.cp_id = corp.cp_id and  rel.sp_id = #{spId}
        LEFT JOIN sps_account funacc on sc.fund_account_id=funacc.acc_id
        LEFT JOIN sps_account insacc ON insacc.acc_id = sc.insurance_account_id
        LEFT JOIN bs_area funarea ON funarea.area_id = funacc.area_id
        LEFT JOIN bs_area insarea ON insarea.area_id = insacc.area_id
        GROUP BY ins.insurance_fund_type ,emp.emp_id
        ) t
        INNER JOIN bs_area belong ON t.belong_city = belong.area_id
        WHERE t.ins_fun_state = 'ON'
        <if test="belongCity != null and belongCity != ''"> and t.belong_city=#{belongCity}</if>
        <if test="accType != null and accType != ''"> and t.acc_type=#{accType}</if>
          ORDER BY t.emp_id ASC
    </select>
    <!-- 批量减员查询员工总数 -->
    <select id="FreeFindBatchReduceEmployeeCount" resultType="java.lang.Integer" parameterType="Object">
        SELECT COUNT(1) as value FROM (
        SELECT
        (CASE WHEN ins.insurance_fund_type = 'FUND' THEN funacc.acc_type ELSE insacc.acc_type END) as acc_type,
        (CASE WHEN ins.insurance_fund_type = 'FUND' THEN funarea.fullname ELSE insarea.fullname END) as areaname,
        (CASE WHEN ins.insurance_fund_type = 'FUND' THEN emp.fund_state ELSE emp.insurance_state END) as ins_fun_state,
        (CASE WHEN ins.insurance_fund_type = 'FUND' THEN funarea.belong_city ELSE insarea.belong_city END) as belong_city,
        MIN(empins.begin_period) AS begin_period FROM
        cm_employee emp INNER JOIN cm_employee_insurance empins ON emp.emp_id = empins.emp_id and emp.dr=0 and empins.pay_type = 'MONTH'
        <if test="empSearch != null and empSearch != ''"> and (emp.`name` like '%${empSearch}%' or emp.identity_code like '%${empSearch}%')</if>
        INNER JOIN bd_insurance ins ON ins.insurance_id = empins.insurance_id
        <if test="insuranceFundType != null and insuranceFundType != ''"> and ins.insurance_fund_type=#{insuranceFundType}</if>
        inner JOIN cm_corp corp on emp.cp_id=corp.cp_id
        <if test="authority != 'ALL'">
            AND corp.cp_id in (${authority})
        </if>
        <if test="corpSearch != null and corpSearch != ''"> and (corp.corp_name like '%${corpSearch}%' or corp.short_name like '%${corpSearch}%')</if>
        inner JOIN sps_scheme_emp se ON emp.emp_id=se.emp_id and se.state='USE' and se.dr=0
        inner JOIN sps_scheme sc on se.scheme_id=sc.scheme_id
        <if test="schemeType != null and schemeType != ''"> and sc.scheme_type=#{schemeType}</if>
        INNER JOIN sp_cm_relation rel ON rel.cp_id = corp.cp_id and  rel.sp_id = #{spId}
        LEFT JOIN sps_account funacc on sc.fund_account_id=funacc.acc_id
        LEFT JOIN sps_account insacc ON insacc.acc_id = sc.insurance_account_id
        LEFT JOIN bs_area funarea ON funarea.area_id = funacc.area_id
        LEFT JOIN bs_area insarea ON insarea.area_id = insacc.area_id
        GROUP BY ins.insurance_fund_type ,emp.emp_id
        ) t WHERE t.ins_fun_state = 'ON'
        <if test="belongCity != null and belongCity != ''"> and t.belong_city=#{belongCity}</if>
        <if test="accType != null and accType != ''"> and t.acc_type=#{accType}</if>
    </select>


    <!-- 批量减员 从多个员工中查出方案最大截止日期 -->
    <select id="FindEmplsSchemeMaxEndDate" resultType="java.lang.Integer" parameterType="Object">
        select IFNULL(max(sch.end_date),31) as value from  sps_scheme_emp s
        inner join sps_scheme sch on sch.scheme_id=s.scheme_id and s.state ='USE'
        <if test="empIds != null">
            AND s.emp_id in
            <foreach item="lt" index="index" collection="empIds" open="(" separator="," close=")">
                #{lt}
            </foreach>
        </if>
    </select>

    <!-- 批量基数调整exportData -->
    <select id="FindEmplsByBatchAdjBaseExportData" resultType="java.util.Map" parameterType="Object">
        select emp.emp_id,emp.`name`,emp.identity_code,emp.insurance_salary,emp.fund_salary,corp.corp_name,empinsu.ratio_id,empinsu.insurance_id from cm_employee emp
        inner JOIN cm_corp corp on emp.cp_id=corp.cp_id
        <if test="cpId != null"> and corp.cp_id=#{cpId}</if>
        and (
        <if test="searchInsu and insuranceStates != null"> emp.insurance_state in
            <foreach item="lt" index="index" collection="insuranceStates" open="(" separator="," close=")">
                #{lt}
            </foreach>
        </if>
        <if test="searchFund and fundStates != null"><if test="searchInsu and insuranceStates != null"> or</if> emp.fund_state in
            <foreach item="lt" index="index" collection="fundStates" open="(" separator="," close=")">
                #{lt}
            </foreach>
        </if>
        )
        <if test="authority != 'ALL'">
            AND corp.cp_id in (${authority})
        </if>
        INNER JOIN sp_cm_relation rel ON rel.cp_id = corp.cp_id and rel.sp_id = #{spId}
        INNER JOIN cm_employee_insurance empinsu ON emp.emp_id=empinsu.emp_id and empinsu.pay_type = 'MONTH'
        and empinsu.dr=0 and (empinsu.ratio_id is not null) and ifnull(empinsu.begin_period,'1900-01') &lt;= #{beginPeriod} and ifnull(empinsu.end_period,'2099-12') &gt;= #{beginPeriod}
        <if test="searchFund and searchInsu==false">
        and empinsu.insurance_id = 6
        </if>
        <if test="searchInsu and searchFund==false">
            and empinsu.insurance_id != 6
        </if>
        inner JOIN sps_scheme_emp se ON emp.emp_id=se.emp_id and se.state='USE' and se.dr=0
        inner JOIN sps_scheme sc on se.scheme_id=sc.scheme_id
        left JOIN sps_account funacc on sc.fund_account_id=funacc.acc_id
        left JOIN sps_account insacc ON insacc.acc_id = sc.insurance_account_id
        left JOIN bs_area funarea ON funarea.area_id = funacc.area_id
        left JOIN bs_area insarea ON insarea.area_id = insacc.area_id
        <trim prefix=" WHERE " prefixOverrides="AND ">
            and (
            <if test="searchInsu and areaId != null">insarea.belong_city = #{areaId}</if>
            <if test="searchFund and areaId != null"><if test="searchInsu and areaId != null"> or </if> funarea.belong_city = #{areaId}</if>
            )
        </trim>
    </select>

    <!-- 批量最低基数调整 -->
    <select id="findEmplsByBatchAdjLowerBaseList" resultType="java.util.Map" parameterType="Object">
        select #{beginPeriod} as beginPeriod, emp.emp_id,emp.`name`,emp.identity_type,emp.identity_code,(CASE WHEN empinsu.corp_paybase &lt; ver.corp_base_lower THEN empinsu.corp_paybase ELSE empinsu.emp_paybase END) as oldbasepay,(CASE WHEN empinsu.corp_paybase &lt; ver.corp_base_lower THEN ver.corp_base_lower ELSE ver.psn_base_lower END) as newbasepay,corp.corp_name,corp.cp_id,empinsu.ratio_id,empinsu.insurance_id,ins.`name` as insname,(CASE WHEN ins.insurance_fund_type = 'FUND' THEN pfunarea.name ELSE pinsarea.name END ) as areaname,ins.insurance_fund_type,ins.code from cm_employee emp
        inner JOIN cm_corp corp on emp.cp_id=corp.cp_id
        <if test="cpId != null"> and corp.cp_id=#{cpId}</if>
        <if test="fundStates != null and insuranceStates != null">
            and (
            <if test="searchInsu and insuranceStates != null"> emp.insurance_state in
                <foreach item="lt" index="index" collection="insuranceStates" open="(" separator="," close=")">
                    #{lt}
                </foreach>
            </if>
            <if test="searchFund and fundStates != null"><if test="searchInsu and insuranceStates != null"> or</if> emp.fund_state in
                <foreach item="lt" index="index" collection="fundStates" open="(" separator="," close=")">
                    #{lt}
                </foreach>
            </if>
            )
        </if>
        <if test="empNameAndIdCode != null"> AND CONCAT(emp.name,IFNULL(emp.identity_code,'')) like concat('%',#{empNameAndIdCode},'%');</if>
        <if test="authority != 'ALL'">
            AND corp.cp_id in (${authority})
        </if>
        INNER JOIN sp_cm_relation rel ON rel.cp_id = corp.cp_id and rel.sp_id = #{spId}
        INNER JOIN cm_employee_insurance empinsu ON emp.emp_id=empinsu.emp_id and empinsu.pay_type = 'MONTH'
        and empinsu.dr=0 and (empinsu.ratio_id is not null) and ifnull(empinsu.begin_period,'1900-01') &lt;= #{beginPeriod} and ifnull(empinsu.end_period,'2099-12') &gt;= #{beginPeriod}
        <if test="searchFund and searchInsu==false">
            and empinsu.insurance_id = 6
        </if>
        <if test="searchInsu and searchFund==false">
            and empinsu.insurance_id != 6
        </if>
        INNER JOIN  bs_arearatiover ver ON empinsu.ratio_id = ver.ratio_id AND ifnull(ver.begin_period,'1900-01') &lt;= #{beginPeriod} and ifnull(ver.end_period,'2099-12') &gt;= #{beginPeriod} AND (empinsu.emp_paybase &lt; ver.psn_base_lower or empinsu.corp_paybase &lt; ver.corp_base_lower)
        INNER JOIN  bd_insurance ins ON  ins.insurance_id = empinsu.insurance_id
        inner JOIN sps_scheme_emp se ON emp.emp_id=se.emp_id and se.state='USE' and se.dr=0
        inner JOIN sps_scheme sc on se.scheme_id=sc.scheme_id
        left JOIN sps_account funacc on sc.fund_account_id=funacc.acc_id
        left JOIN sps_account insacc ON insacc.acc_id = sc.insurance_account_id
        left JOIN bs_area funarea ON funarea.area_id = funacc.area_id
        left JOIN bs_area insarea ON insarea.area_id = insacc.area_id
        left JOIN bs_area pfunarea ON pfunarea.area_id = funarea.belong_city
        left JOIN bs_area pinsarea ON pinsarea.area_id = insarea.belong_city
        <trim prefix=" WHERE " prefixOverrides="AND ">
            and (
            <if test="searchInsu and areaId != null">insarea.belong_city = #{areaId}</if>
            <if test="searchFund and areaId != null"><if test="searchInsu and areaId != null"> or </if> funarea.belong_city = #{areaId}</if>
            )
        </trim>
    </select>

    <select id="findEmplsByBatchAdjLowerBaseCount" resultType="java.lang.Integer" parameterType="Object">
        select count(1) as value from cm_employee emp
        inner JOIN cm_corp corp on emp.cp_id=corp.cp_id
        <if test="cpId != null"> and corp.cp_id=#{cpId}</if>
        <if test="fundStates != null and insuranceStates != null">
            and (
            <if test="searchInsu and insuranceStates != null"> emp.insurance_state in
                <foreach item="lt" index="index" collection="insuranceStates" open="(" separator="," close=")">
                    #{lt}
                </foreach>
            </if>
            <if test="searchFund and fundStates != null"><if test="searchInsu and insuranceStates != null"> or</if> emp.fund_state in
                <foreach item="lt" index="index" collection="fundStates" open="(" separator="," close=")">
                    #{lt}
                </foreach>
            </if>
            )
        </if>
        <if test="empNameAndIdCode != null"> AND CONCAT(emp.name,IFNULL(emp.identity_code,'')) like concat('%',#{empNameAndIdCode},'%');</if>
        <if test="authority != 'ALL'">
            AND corp.cp_id in (${authority})
        </if>
        INNER JOIN sp_cm_relation rel ON rel.cp_id = corp.cp_id and rel.sp_id = #{spId}
        INNER JOIN cm_employee_insurance empinsu ON emp.emp_id=empinsu.emp_id  and empinsu.pay_type = 'MONTH'
        and empinsu.dr=0 and (empinsu.ratio_id is not null) and ifnull(empinsu.begin_period,'1900-01') &lt;= #{beginPeriod} and ifnull(empinsu.end_period,'2099-12') &gt;= #{beginPeriod}
        <if test="searchFund and searchInsu==false">
            and empinsu.insurance_id = 6
        </if>
        <if test="searchInsu and searchFund==false">
            and empinsu.insurance_id != 6
        </if>
        INNER JOIN  bs_arearatiover ver ON empinsu.ratio_id = ver.ratio_id AND ifnull(ver.begin_period,'1900-01') &lt;= #{beginPeriod} and ifnull(ver.end_period,'2099-12') &gt;= #{beginPeriod} AND (empinsu.emp_paybase &lt; ver.psn_base_lower or empinsu.corp_paybase &lt; ver.corp_base_lower)
        INNER JOIN  bd_insurance ins ON  ins.insurance_id = empinsu.insurance_id
        inner JOIN sps_scheme_emp se ON emp.emp_id=se.emp_id and se.state='USE' and se.dr=0
        inner JOIN sps_scheme sc on se.scheme_id=sc.scheme_id
        left JOIN sps_account funacc on sc.fund_account_id=funacc.acc_id
        left JOIN sps_account insacc ON insacc.acc_id = sc.insurance_account_id
        left JOIN bs_area funarea ON funarea.area_id = funacc.area_id
        left JOIN bs_area insarea ON insarea.area_id = insacc.area_id
        <trim prefix=" WHERE " prefixOverrides="AND ">
            and (
            <if test="searchInsu and areaId != null">insarea.belong_city = #{areaId}</if>
            <if test="searchFund and areaId != null"><if test="searchInsu and areaId != null"> or </if> funarea.belong_city = #{areaId}</if>
            )
        </trim>
    </select>

    <!-- 通过企业id 证件号码与姓名 查询员工 -->
    <select id="FindCpEmplByNameAndIdentityCode" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE WHERE cp_id = #{cpId} and identity_code=#{identityCode} and `name`=#{name} AND  dr = 0
    </select>

    <select id="findEmpNameAndIdentitycodeList" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        select cp_id cpId,name from cm_employee where cp_id = #{spId} and dr = 0;
    </select>

    <select id="findEmpNameList" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        select emp.emp_id,emp.name from cm_employee emp INNER JOIN sps_scheme_emp semp ON emp.emp_id = semp.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
         where emp.cp_id = #{cpId} and emp.dr = 0 and emp.name like #{name}
        <if test="authority != 'ALL'"> 
			AND scheme.scheme_id in (${authority})
		</if>
    </select>

    <select id="findEmpTotal" resultType="java.util.Map" parameterType="Object">
        SELECT SUM(totalCount) as totalCount,SUM(insuranceCount) as insuranceCount,SUM(fundCount) as fundCount,SUM(insuranceNotCount) as insuranceNotCount,SUM(fundNotCount) as fundNotCount FROM (
            SELECT
                        IFNULL((SUM((
                            SELECT count(1) FROM cm_employee ce WHERE ce.emp_id = cemp.emp_id AND ce.dr = 0 AND (ce.insurance_state in ('ON','DECREASING','OFF','INCREASING') or ce.fund_state in ('ON','DECREASING','OFF','INCREASING'))
                        )))+0,'0') AS totalCount,
                        IFNULL((SUM((
                            SELECT count(1) FROM cm_employee ce WHERE ce.emp_id = cemp.emp_id AND ce.dr = 0 AND ce.insurance_state in ('ON','DECREASING')
                        )))+0,'0') AS insuranceCount,
                        IFNULL((SUM((
                            SELECT count(1) FROM cm_employee ce WHERE ce.emp_id = cemp.emp_id AND ce.dr = 0 AND ce.fund_state in ('ON','DECREASING')
                        )))+0,'0') AS fundCount,
                        IFNULL((SUM((
                            SELECT count(1) FROM cm_employee ce WHERE ce.emp_id = cemp.emp_id AND ce.dr = 0 AND ce.insurance_state in ('OFF','INCREASING')
                        )))+0,'0') AS insuranceNotCount,
                        IFNULL((SUM((
                            SELECT count(1) FROM cm_employee ce WHERE ce.emp_id = cemp.emp_id AND ce.dr = 0 AND ce.fund_state in ('OFF','INCREASING')
                        )))+0,'0') AS fundNotCount
              from cm_employee cemp INNER JOIN sps_scheme_emp semp ON cemp.emp_id = semp.emp_id
              INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
            <if test="authority != 'ALL'">
                AND scheme.scheme_id in (${authority})
            </if>
            where cemp.cp_id = #{cpId} and cemp.dr = 0
            AND (cemp.insurance_state in ('ON','DECREASING','OFF','INCREASING') or cemp.fund_state in ('ON','DECREASING','OFF','INCREASING'))
        UNION ALL
          SELECT count(1) as totalCount,0 as insuranceCount,0 as fundCount,count(1) as insuranceNotCount,count(1) as fundNotCount  FROM cm_employee cemp where NOT EXISTS (SELECT semp.emp_id FROM sps_scheme_emp semp where semp.emp_id = cemp.emp_id) AND cemp.cp_id = #{cpId} and cemp.dr = 0
        ) t
    </select>

    <select id="findEmpTotalArea" resultType="java.util.Map" parameterType="Object">
        SELECT '' as areaId, '全部' as areaName, count(cemp.emp_id) as empNum
        from cm_employee cemp INNER JOIN sps_scheme_emp semp ON cemp.emp_id = semp.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
        <if test="authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        INNER JOIN bs_area area ON area.area_id = scheme.area_id
        where cemp.cp_id = #{cpId} and cemp.dr = 0
        <if test="insuranceOrFundState!='\'DECREASED\''">
        AND (cemp.insurance_state in (${insuranceOrFundState}) or cemp.fund_state in (${insuranceOrFundState}))
        </if>
        <if test="insuranceOrFundState=='\'DECREASED\''">
            AND (cemp.insurance_state in (${insuranceOrFundState}) and cemp.fund_state in (${insuranceOrFundState}))
        </if>
        UNION ALL
        SELECT scheme.area_id as areaId, area.name as areaName, count(cemp.emp_id) as empNum
        from cm_employee cemp INNER JOIN sps_scheme_emp semp ON cemp.emp_id = semp.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
        <if test="authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        INNER JOIN bs_area area ON area.area_id = scheme.area_id
        where cemp.cp_id = #{cpId} and cemp.dr = 0
        <if test="insuranceOrFundState!='\'DECREASED\''">
        AND (cemp.insurance_state in (${insuranceOrFundState}) or cemp.fund_state in (${insuranceOrFundState}))
        </if>
        <if test="insuranceOrFundState=='\'DECREASED\''">
            AND (cemp.insurance_state in (${insuranceOrFundState}) and cemp.fund_state in (${insuranceOrFundState}))
        </if>
        group by scheme.area_id
    </select>

    <select id="findEmpListCount" resultType="java.lang.Integer" parameterType="Object">
        select count(1) from (
        SELECT t.* FROM (
        select ce.emp_id as empId, ce.is_remove as isRemove,ce.`name` as `name`,scheme.area_id as areaId,
        IFNULL(ce.identity_type,'--') as identityType,ce.identity_code as identityCode,ce.mobile,
        ce.create_dt as createDt, ce.modify_dt as modifyDt, IFNULL(ce.insurance_salary,'--') as insurance_salary,
        IFNULL(ce.fund_salary,'--') as fund_salary, ce.insurance_state as insuranceState,ce.fund_state as fundState,IFNULL(scheme.price,0) as price,ce.branch,scheme.`sp_id` as spId
        from cm_employee ce
        INNER JOIN sps_scheme_emp semp ON semp.emp_id = ce.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
        <if test="authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        where
        ce.cp_id = #{cpId} and ce.dr = 0
        GROUP BY ce.emp_id
        UNION ALL
        SELECT cemp.emp_id AS empId, cemp.is_remove as isRemove,cemp.`name`,'--' AS areaId,
        IFNULL(cemp.identity_type, '--') AS identityType,
        cemp.identity_code AS identityCode,
        cemp.mobile,cemp.create_dt AS createDt,
        cemp.modify_dt AS modifyDt,
        IFNULL(cemp.insurance_salary,'--') as insurance_salary,
        IFNULL(cemp.fund_salary,'--') as  fund_salary,
        cemp.insurance_state as insuranceState,
        cemp.fund_state as fundState,
        '--' as price,cemp.branch,'--' as spId
        FROM cm_employee cemp where NOT EXISTS (SELECT semp.emp_id FROM sps_scheme_emp semp where semp.emp_id = cemp.emp_id) AND cemp.cp_id = #{cpId} and cemp.dr = 0
        ) t where 1=1
        <if test="insuranceState==null or fundState==null">
            and (t.insuranceState != 'DECREASED' OR t.fundState != 'DECREASED')
        </if>
        <if test="name != null">
            and CONCAT(t.`name`,ifnull(t.identityCode,'')) like #{name}
        </if>
        <if test="areaId != null">
            and t.areaId = #{areaId}
        </if>
        <if test="insuranceState != null">
            and t.insuranceState in (${insuranceState})
        </if>
        <if test="fundState != null">
            and t.fundState in (${fundState})
        </if>
        <if test="beginDate != null">
            and date_format(t.createDt,'%Y-%m-%d') = #{beginDate}
        </if>
        <if test="modifyDate != null">
            and date_format(t.modifyDt,'%Y-%m-%d') = #{modifyDate}
        </if>
        <if test="modifyDtFrom != null"> AND t.modifyDt&gt;=#{modifyDtFrom} </if>
        <if test="modifyDtTo != null"> AND t.modifyDt&lt;=#{modifyDtTo} </if>
        <if test="empids != null and empids != ''">
            and t.empId in (${empids})
        </if>
        <if test="spId != null">
            and t.spId = #{spId}
        </if>
        <if test="spType == 'YY'">
            and t.spId = -999
        </if>
        <if test="spType == 'NN'">
            and t.spId != -999
        </if>
        GROUP BY t.empId
        ) s
    </select>

    <resultMap id="result_map_CM_EMPLOYEE_EmpList" type="com.xfs.corp.dto.EmpListDto" >
        <result column="empId" property="empId"/>
        <result column="name" property="name"/>
        <result column="areaId" property="areaId"/>
        <result column="areaName" property="areaName"/>
        <result column="livingType" property="livingType"/>
        <result column="identityType" property="identityType"/>
        <result column="identityCode" property="identityCode"/>
        <result column="mobile" property="mobile"/>
        <result column="endDate" property="endDate"/>
        <result column="beginDate" property="beginDate"/>
        <result column="createDt" property="createDt"/>
        <result column="modifyDt" property="modifyDt"/>
        <result column="insurance_salary" property="insurance_salary"/>
        <result column="fund_salary" property="fund_salary"/>
        <result column="insuranceState" property="insuranceState"/>
        <result column="fundState" property="fundState"/>
        <result column="empPayment" property="empPayment"/>
        <result column="corpPayment" property="corpPayment"/>
        <result column="total" property="total"/>
        <result column="price" property="price"/>
        <!--<collection property="insurancelist" javaType="List" ofType="com.xfs.corp.dto.EmplnsFundDetailDto" column="{empId=empId}" select="CM_EMPLOYEE_INSURANCE.findEmpInsFundDetailByEmpid" />-->
    </resultMap>

    <select id="findEmpList" resultType="java.util.Map" parameterType="Object">
        SELECT t.*,
        (case when t.empPayment2='--' or t.empPayment2 is NULL or t.empPayment2 = 0 then '--' else TRUNCATE(SUM(cast(t.empPayment2 as decimal(9,4))),2) end) as empPayment,
        (case when t.corpPayment2='--' or t.corpPayment2 is NULL or t.corpPayment2 = 0 then '--' else TRUNCATE(SUM(cast(t.corpPayment2 as decimal(9,4))),2) end) as corpPayment,
        (case when (t.empPayment2='--' and t.corpPayment2='--') or (t.corpPayment2 is NULL and t.empPayment2 is NULL) or (t.corpPayment2 = 0 and t.empPayment2 = 0) then '--' else
        TRUNCATE(SUM(cast(t.empPayment2 as decimal(9,4))) + SUM(cast(t.corpPayment2 as decimal(9,4))) + t.price, 2) end) as total FROM (
        select ce.emp_id as empId, ce.is_remove as isRemove,ce.`name` as `name`,scheme.area_id as areaId,ba.`name` as areaName
        ,IFNULL(item.`name`,'--') as livingType,IFNULL(ce.identity_type,'--') as identityType,ce.identity_code as identityCode,ce.mobile,
        MAX(IFNULL(cmei.end_period,'')) as endDate, cmei.begin_period as beginDate, ce.create_dt as createDt, ce.modify_dt as modifyDt, IFNULL(ce.insurance_salary,'--') as insurance_salary,
        IFNULL(ce.fund_salary,'--') as fund_salary, ce.insurance_state as insuranceState,ce.fund_state as fundState,IFNULL(scheme.price,0) as price,ce.branch,scheme.`sp_id` as spId,(case when scheme.`sp_id`=-999 then '自服' else sp.sp_name end) as spName,
        IFNULL((select
            sum(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
            (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and ccc.pay_type = 'MONTH' and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
            (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                (CASE WHEN 'ROUND' = ar.psn_calc_method THEN
                ROUND(detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),2)
                WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision = 0 THEN
                CEIL(detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )))
                WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision > 0 THEN
                case WHEN substring(substring_index(
                detail.emp_payment/(12.00 /(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),'.',-1),(ar.psn_precision+1),1) > 0 THEN
                CASE WHEN ar.psn_precision = 1 THEN
                TRUNCATE ((detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )) + 0.09),ar.psn_precision)
                WHEN ar.psn_precision = 2 THEN
                TRUNCATE ((detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )) + 0.009),ar.psn_precision)
                END
                END
                WHEN 'FLOOR' = ar.psn_calc_method THEN
                TRUNCATE(detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),ar.psn_precision)
                ELSE
                ROUND(detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),ar.psn_precision)
                END)
                else TRUNCATE(detail.emp_payment,2) end)
                else 0 end)
                else TRUNCATE(detail.emp_payment,2) end)
        FROM cm_employee cee
        LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
        left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
        inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id

        <!-- qjh update by guppeng -->
        <if test="insuranceState=='DECREASED' and fundState=='DECREASED'">
            left join (select emp_id,max(end_period) end_period from cm_employee_insurance ins where dr=0 and end_period is not null group by emp_id) empEnd
            on empEnd.emp_id = cee.emp_id
            WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
             AND
            ((empEnd.end_period BETWEEN detail.begin_period
            AND IFNULL(
            detail.end_period,
            '2099-09'
            ) AND detail.pay_type = 'MONTH') OR (detail.period = date_format(NOW(), '%Y-%m') AND detail.pay_type = 'PATCH'))

            ),0) as empPayment2,

        </if>
        <if test="insuranceState!='DECREASED' or fundState!='DECREASED'">
            WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
            AND
            ((date_format(NOW(), '%Y-%m') BETWEEN detail.begin_period
            AND IFNULL(
            detail.end_period,
            '2099-09'
            ) AND detail.pay_type = 'MONTH') OR (detail.period = date_format(NOW(), '%Y-%m') AND detail.pay_type = 'PATCH'))
            ),0) as empPayment2,
        </if>


        IFNULL((select
            SUM(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
            (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and ccc.pay_type = 'MONTH' and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
            (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                (CASE WHEN 'ROUND' = ar.corp_calc_method THEN
                    ROUND(detail.corp_payment/(12.00/(
                    case when
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                    )),2)
                WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision = 0 THEN
                    CEIL(detail.corp_payment/(12.00/(
                    case when
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                    )))
                WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision > 0 THEN
                case WHEN substring(substring_index(
                detail.corp_payment/(12.00 /(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),'.',-1),(ar.corp_precision+1),1) > 0 THEN
                CASE WHEN ar.corp_precision = 1 THEN
                TRUNCATE ((detail.corp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )) + 0.09),ar.corp_precision)
                WHEN ar.corp_precision = 2 THEN
                TRUNCATE ((detail.corp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )) + 0.009),ar.corp_precision)
                END

                END
                WHEN 'FLOOR' = ar.corp_calc_method THEN
                TRUNCATE(detail.corp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),ar.corp_precision)
                ELSE
                ROUND(detail.corp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),ar.corp_precision)
                END)
                else TRUNCATE(detail.corp_payment,2) end)
                else 0 end)
                else TRUNCATE(detail.corp_payment,2) end)
        FROM cm_employee cee
        LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
        left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
        inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id

        <!-- qjh update by guppeng -->
        <if test="insuranceState=='DECREASED' and fundState=='DECREASED'">
            left join (select emp_id,max(end_period) end_period from cm_employee_insurance ins where dr=0 and end_period is not null group by emp_id) empEnd
            on empEnd.emp_id = cee.emp_id

            WHERE cee.emp_id = ce.emp_id AND cee.dr = 0

            AND
            ((empEnd.end_period BETWEEN detail.begin_period
            AND IFNULL(
            detail.end_period,
            '2099-09'
            ) AND detail.pay_type = 'MONTH') OR (detail.period = date_format(NOW(), '%Y-%m') AND detail.pay_type = 'PATCH'))
            ),0) as corpPayment2
        </if>
        <if test="insuranceState!='DECREASED' or fundState!='DECREASED'">
            WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
            AND
            ((date_format(NOW(), '%Y-%m') BETWEEN detail.begin_period
            AND IFNULL(
            detail.end_period,
            '2099-09'
            ) AND detail.pay_type = 'MONTH') OR (detail.period = date_format(NOW(), '%Y-%m') AND detail.pay_type = 'PATCH'))
            ),0) as corpPayment2
        </if>

        from cm_employee ce
        INNER JOIN sps_scheme_emp semp ON semp.emp_id = ce.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
        <if test="authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        LEFT JOIN sys_dictitem item ON item.area_id = scheme.area_id AND item.dictionary = 93 AND item.`code` = ce.insurance_living_type
        INNER JOIN bs_area ba on ba.area_id = scheme.area_id
        LEFT JOIN cm_employee_insurance cmei ON cmei.emp_id = ce.emp_id AND cmei.dr = 0
        LEFT JOIN sps_bill_emp bemp ON bemp.emp_id = ce.emp_id
        left join sp_service sp on sp.sp_id = scheme.sp_id
        where
        ce.cp_id = #{cpId} and ce.dr = 0
        GROUP BY ce.emp_id
        UNION ALL
        SELECT cemp.emp_id AS empId, cemp.is_remove as isRemove,cemp.`name`,'--' AS areaId,'--' AS areaName,
        '--' AS livingType,
        IFNULL(cemp.identity_type, '--') AS identityType,
        cemp.identity_code AS identityCode,
        cemp.mobile,'--' AS endDate,'--' AS beginDate,cemp.create_dt AS createDt,
        cemp.modify_dt AS modifyDt,
        IFNULL(cemp.insurance_salary,'--') as insurance_salary,
        IFNULL(cemp.fund_salary,'--') as  fund_salary,
        cemp.insurance_state as insuranceState,
        cemp.fund_state as fundState,
        '--' as price,cemp.branch,'--' as spId,'--' as spName,
        '--' as empPayment,
        '--' as corpPayment
        FROM cm_employee cemp where NOT EXISTS (SELECT semp.emp_id FROM sps_scheme_emp semp where semp.emp_id = cemp.emp_id) AND cemp.cp_id = #{cpId} and cemp.dr = 0
        ) t where 1=1
        <if test="insuranceState==null or fundState==null">
            and (t.insuranceState != 'DECREASED' OR t.fundState != 'DECREASED')
        </if>
        <if test="name != null">
            and CONCAT(t.`name`,ifnull(t.identityCode,'')) like #{name}
        </if>
        <if test="areaId != null">
            and t.areaId = #{areaId}
        </if>
        <if test="insuranceState != null">
            and t.insuranceState in (${insuranceState})
        </if>
        <if test="fundState != null">
            and t.fundState in (${fundState})
        </if>
        <if test="beginDate != null">
            and date_format(t.createDt,'%Y-%m-%d') = #{beginDate}
        </if>
        <if test="modifyDate != null">
            and date_format(t.modifyDt,'%Y-%m-%d') = #{modifyDate}
        </if>
        <if test="modifyDtFrom != null"> AND t.modifyDt&gt;=#{modifyDtFrom} </if>
        <if test="modifyDtTo != null"> AND t.modifyDt&lt;=#{modifyDtTo} </if>
        <if test="empids != null and empids != ''">
            and t.empId in (${empids})
        </if>
        <if test="spId != null">
            and t.spId = #{spId}
        </if>
        <if test="spType == 'YY'">
            and t.spId = -999
        </if>
        <if test="spType == 'NN'">
            and t.spId != -999
        </if>
        GROUP BY t.empId
        <if test="insuranceState=='\'DECREASED\'' and fundState=='\'DECREASED\''">
            ORDER BY t.modifyDt DESC
        </if>
        <if test="insuranceState!='\'DECREASED\'' or fundState!='\'DECREASED\''">
            ORDER BY t.empId DESC
        </if>

    </select>

    <!-- 参保人员分析列表 -->
    <select id="empTrendList" resultType="java.util.Map" parameterType="Object">
        <!--select area.area_id as areaId, area.name as areaName, emp.*-->
        <!--from cm_employee emp-->
            <!--left join sps_scheme_emp semp on semp.emp_id = emp.emp_id-->
            <!--left join sps_scheme scheme on scheme.scheme_id = semp.scheme_id-->
            <!--<if test="authority != 'ALL'">-->
                <!--AND scheme.scheme_id in (${authority})-->
            <!--</if>-->
            <!--left join bs_area area on area.area_id = scheme.area_id-->
        <!--where emp.dr = 0 and emp.cp_id = #{cpId}-->
        <!--<if test="period!=null and period!=''">-->
            <!--and date_format(emp.create_dt,'%Y-%m') = #{period}-->
        <!--</if>-->
        <!--<if test="period==null or period==''">-->
            <!--and date_format(emp.create_dt,'%Y-%m') = date_format(NOW(),'%Y-%m')-->
        <!--</if>-->
        <!--<if test="areaId != null">-->
            <!--and area.area_id = #{areaId}-->
        <!--</if>-->

        select p.period AS period,
            IFNULL(bins.insurance_fund_type, 'OFF') as insurance_fund_type,
            emp.name, emp.identity_code, area.name as areaName, area.area_id as areaId,
            emp.emp_id , emp.insurance_state, emp.fund_state, emp.create_dt,
            max(ins.end_period) as end_period
        from (
            SELECT date_format(NOW(),'%Y-%m') AS period
            ) p
            left join cm_employee emp on (p.period BETWEEN date_format(emp.entry_time,'%Y-%m') AND '2099-09')
            AND emp.cp_id = #{cpId}
            and emp.dr = 0
            left join cm_employee_insurance ins on emp.emp_id = ins.emp_id
            left JOIN sps_scheme_emp semp ON semp.emp_id = emp.emp_id
            left JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
            <if test="authority != 'ALL'">
              AND scheme.scheme_id in (${authority})
            </if>
            left JOIN bd_insurance bins ON ins.insurance_id = bins.insurance_id
            left join bs_area area on area.area_id = scheme.area_id
        where (emp.`fund_state` != 'DECREASED' or emp.insurance_state != 'DECREASED')
        group by emp.emp_id, p.period
        ORDER BY emp.emp_id DESC
    </select>

    <select id="empTrendListCount" resultType="java.lang.Integer" parameterType="Object" >
        select count(*) as value from (
        select p.period AS period,
        IFNULL(bins.insurance_fund_type, 'OFF') as insurance_fund_type,
        emp.name, emp.identity_code, area.name as areaName, area.area_id as areaId,
        emp.emp_id , emp.insurance_state, emp.fund_state, emp.create_dt,
        max(ins.end_period) as end_period
        from (
        SELECT date_format(NOW(),'%Y-%m') AS period
        ) p
        left join cm_employee emp on (p.period BETWEEN date_format(emp.entry_time,'%Y-%m') AND '2099-09')
        AND emp.cp_id = #{cpId}
        and emp.dr = 0
        left join cm_employee_insurance ins on emp.emp_id = ins.emp_id
        left JOIN sps_scheme_emp semp ON semp.emp_id = emp.emp_id
        left JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
        <if test="authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        left JOIN bd_insurance bins ON ins.insurance_id = bins.insurance_id
        left join bs_area area on area.area_id = scheme.area_id
        where (emp.`fund_state` != 'DECREASED' or emp.insurance_state != 'DECREASED')
        group by emp.emp_id, p.period ) m
    </select>

    <select id="paymentTrendListCount" resultType="java.lang.Integer" parameterType="Object" >
        select count(*) from (
            select
                ce.emp_id
            from cm_employee ce
                INNER JOIN sps_scheme_emp semp ON semp.emp_id = ce.emp_id
                INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
            <if test="authority != 'ALL'">
                AND scheme.scheme_id in (${authority})
            </if>
                INNER JOIN bs_area ba on ba.area_id = scheme.area_id
                LEFT JOIN cm_employee_insurance detail ON detail.emp_id = ce.emp_id AND detail.dr = 0
                where ce.dr = 0 and ce.cp_id = #{cpId}
                AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
                AND IFNULL(detail.end_period, '2099-09')
            <if test="areaId != null">
                and ba.area_id = #{areaId}
            </if>
            group by ce.emp_id
        ) t
    </select>

    <select id="paymentTrendList" resultType="java.util.Map" parameterType="Object">
        select
            ce.emp_id as empId,
            ce.name,
            ce.cp_id as cpId,
            ce.identity_code as identityCode,
            ba.area_id as areaId,
            ba.name as areaName,
            date_format(NOW(),'%Y-%m') as period,
            TRUNCATE(IFNULL((select
                    SUM(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
                    (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and ccc.pay_type = 'MONTH' and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
                    (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                        (CASE WHEN 'ROUND' = ar.corp_calc_method THEN
                            ROUND(detail.corp_payment/(12.00/(
                            case when
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                            )),2)
                        WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision = 0 THEN
                            CEIL(detail.corp_payment/(12.00/(
                            case when
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                            )))
                        WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision > 0 THEN
                        case WHEN substring(substring_index(
                        detail.corp_payment/(12.00 /(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),'.',-1),(ar.corp_precision+1),1) > 0 THEN
                        CASE WHEN ar.corp_precision = 1 THEN
                        TRUNCATE ((detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.09),ar.corp_precision)
                        WHEN ar.corp_precision = 2 THEN
                        TRUNCATE ((detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.009),ar.corp_precision)
                        END

                        END
                        WHEN 'FLOOR' = ar.corp_calc_method THEN
                        TRUNCATE(detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.corp_precision)
                        ELSE
                        ROUND(detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.corp_precision)
                        END)
                        else TRUNCATE(detail.corp_payment,2) end)
                        else 0 end)
                        else TRUNCATE(detail.corp_payment,2) end)
                FROM cm_employee cee
                LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
                left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
                inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id and bi.insurance_fund_type = 'INSURANCE'
                    WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
                    AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
                    AND IFNULL(detail.end_period, '2099-09') ),0),2) as corpInsPayment,
                TRUNCATE(IFNULL((select
                    SUM(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
                    (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and ccc.pay_type = 'MONTH' and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
                    (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                        (CASE WHEN 'ROUND' = ar.corp_calc_method THEN
                            ROUND(detail.corp_payment/(12.00/(
                            case when
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                            )),2)
                        WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision = 0 THEN
                            CEIL(detail.corp_payment/(12.00/(
                            case when
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                            )))
                        WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision > 0 THEN
                        case WHEN substring(substring_index(
                        detail.corp_payment/(12.00 /(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),'.',-1),(ar.corp_precision+1),1) > 0 THEN
                        CASE WHEN ar.corp_precision = 1 THEN
                        TRUNCATE ((detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.09),ar.corp_precision)
                        WHEN ar.corp_precision = 2 THEN
                        TRUNCATE ((detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.009),ar.corp_precision)
                        END

                        END
                        WHEN 'FLOOR' = ar.corp_calc_method THEN
                        TRUNCATE(detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.corp_precision)
                        ELSE
                        ROUND(detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.corp_precision)
                        END)
                        else TRUNCATE(detail.corp_payment,2) end)
                        else 0 end)
                        else TRUNCATE(detail.corp_payment,2) end)
                FROM cm_employee cee
                LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
                left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
                inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id and bi.insurance_fund_type = 'FUND'
                    WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
                    AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
                    AND IFNULL(detail.end_period, '2099-09') ),0),2) as corpFundPayment,
                TRUNCATE(IFNULL((select
                    SUM(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
                    (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and ccc.pay_type = 'MONTH' and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
                    (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                        (CASE WHEN 'ROUND' = ar.corp_calc_method THEN
                            ROUND(detail.corp_payment/(12.00/(
                            case when
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                            )),2)
                        WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision = 0 THEN
                            CEIL(detail.corp_payment/(12.00/(
                            case when
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                            (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                            )))
                        WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision > 0 THEN
                        case WHEN substring(substring_index(
                        detail.corp_payment/(12.00 /(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),'.',-1),(ar.corp_precision+1),1) > 0 THEN
                        CASE WHEN ar.corp_precision = 1 THEN
                        TRUNCATE ((detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.09),ar.corp_precision)
                        WHEN ar.corp_precision = 2 THEN
                        TRUNCATE ((detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.009),ar.corp_precision)
                        END

                        END
                        WHEN 'FLOOR' = ar.corp_calc_method THEN
                        TRUNCATE(detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.corp_precision)
                        ELSE
                        ROUND(detail.corp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.corp_precision)
                        END)
                        else TRUNCATE(detail.corp_payment,2) end)
                        else 0 end)
                        else TRUNCATE(detail.corp_payment,2) end)
                FROM cm_employee cee
                LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
                left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
                inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id
                    WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
                    AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
                    AND IFNULL(detail.end_period, '2099-09') ),0),2) as corpPayment,

                TRUNCATE(IFNULL((select
                    sum(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
                    (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and ccc.pay_type = 'MONTH' and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
                    (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                        (CASE WHEN 'ROUND' = ar.psn_calc_method THEN
                        ROUND(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),2)
                        WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision = 0 THEN
                        CEIL(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )))
                        WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision > 0 THEN
                        case WHEN substring(substring_index(
                        detail.emp_payment/(12.00 /(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),'.',-1),(ar.psn_precision+1),1) > 0 THEN
                        CASE WHEN ar.psn_precision = 1 THEN
                        TRUNCATE ((detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.09),ar.psn_precision)
                        WHEN ar.psn_precision = 2 THEN
                        TRUNCATE ((detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.009),ar.psn_precision)
                        END
                        END
                        WHEN 'FLOOR' = ar.psn_calc_method THEN
                        TRUNCATE(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.psn_precision)
                        ELSE
                        ROUND(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.psn_precision)
                        END)
                        else TRUNCATE(detail.emp_payment,2) end)
                        else 0 end)
                        else TRUNCATE(detail.emp_payment,2) end)
                FROM cm_employee cee
                LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
                left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
                inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id and bi.insurance_fund_type = 'INSURANCE'
                    WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
                    AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
                    AND IFNULL(detail.end_period, '2099-09') ),0),2) as empInsPayment,

                TRUNCATE(IFNULL((select
                    sum(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
                    (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and ccc.pay_type = 'MONTH' and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
                    (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                        (CASE WHEN 'ROUND' = ar.psn_calc_method THEN
                        ROUND(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),2)
                        WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision = 0 THEN
                        CEIL(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )))
                        WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision > 0 THEN
                        case WHEN substring(substring_index(
                        detail.emp_payment/(12.00 /(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),'.',-1),(ar.psn_precision+1),1) > 0 THEN
                        CASE WHEN ar.psn_precision = 1 THEN
                        TRUNCATE ((detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.09),ar.psn_precision)
                        WHEN ar.psn_precision = 2 THEN
                        TRUNCATE ((detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.009),ar.psn_precision)
                        END
                        END
                        WHEN 'FLOOR' = ar.psn_calc_method THEN
                        TRUNCATE(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.psn_precision)
                        ELSE
                        ROUND(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.psn_precision)
                        END)
                        else TRUNCATE(detail.emp_payment,2) end)
                        else 0 end)
                        else TRUNCATE(detail.emp_payment,2) end)
                FROM cm_employee cee
                LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
                left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
                inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id and bi.insurance_fund_type = 'FUND'
                    WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
                    AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
                    AND IFNULL(detail.end_period, '2099-09') ),0),2) as empFundPayment,

                TRUNCATE(IFNULL((select
                    sum(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
                    (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and ccc.pay_type = 'MONTH' and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
                    (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                        (CASE WHEN 'ROUND' = ar.psn_calc_method THEN
                        ROUND(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),2)
                        WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision = 0 THEN
                        CEIL(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )))
                        WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision > 0 THEN
                        case WHEN substring(substring_index(
                        detail.emp_payment/(12.00 /(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),'.',-1),(ar.psn_precision+1),1) > 0 THEN
                        CASE WHEN ar.psn_precision = 1 THEN
                        TRUNCATE ((detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.09),ar.psn_precision)
                        WHEN ar.psn_precision = 2 THEN
                        TRUNCATE ((detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )) + 0.009),ar.psn_precision)
                        END
                        END
                        WHEN 'FLOOR' = ar.psn_calc_method THEN
                        TRUNCATE(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.psn_precision)
                        ELSE
                        ROUND(detail.emp_payment/(12.00/(
                        case when
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                        (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                        )),ar.psn_precision)
                        END)
                        else TRUNCATE(detail.emp_payment,2) end)
                        else 0 end)
                        else TRUNCATE(detail.emp_payment,2) end)
                FROM cm_employee cee
                LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
                left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
                inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id
                    WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
                    AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
                    AND IFNULL(detail.end_period, '2099-09') ),0),2) as empPayment
         from cm_employee ce
         INNER JOIN sps_scheme_emp semp ON semp.emp_id = ce.emp_id
         INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
        <if test="authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
         INNER JOIN bs_area ba on ba.area_id = scheme.area_id
         LEFT JOIN cm_employee_insurance detail ON detail.emp_id = ce.emp_id AND detail.dr = 0
            where ce.dr = 0 and ce.cp_id = #{cpId}
            AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
            AND IFNULL(detail.end_period, '2099-09')
        <if test="areaId != null">
            and ba.area_id = #{areaId}
        </if>
        group by ce.emp_id order by ce.emp_id DESC
    </select>

    <select id="findEmpInfo" resultType="java.util.Map" parameterType="Object">
        select ce.emp_id as empId,ce.json,ce.`name` as `name`,ce.mobile,ce.insurance_salary as insuranceSalary, ce.fund_salary as fundSalary, ce.head_photo as headPhoto,scheme.area_id as areaId,
        ba.`name` as areaName,item.`name` as livingType,ce.insurance_living_type as livingTypeCode,ce.identity_type as identityType,ce.identity_code as identityCode,ce.create_dt as createDt,
        ce.job,ce.insurance_state as insuranceState,ce.fund_state as fundState, ce.salary,ce.branch,ss.sp_name as spName,scheme.scheme_id as schemeId,scheme.memo,scheme.sp_id as spId,ce.dep_name as depName
        from cm_employee ce
            left JOIN sps_scheme_emp semp ON semp.emp_id = ce.emp_id
            left JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
            left join `sp_service` ss on ss.`sp_id` = scheme.`sp_id`
            left JOIN sys_dictitem item ON item.area_id = scheme.area_id AND item.dictionary = 93 AND item.`code` = ce.insurance_living_type
            left JOIN bs_area ba on ba.area_id = scheme.area_id
            LEFT JOIN cm_employee_insurance detail ON detail.emp_id = ce.emp_id AND detail.dr = 0 AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period AND IFNULL(detail.end_period, '2099-09')
            left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
            left JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id
        where
            ce.emp_id = #{empId}
        group by ce.emp_id
    </select>

    <update id="deleteEmps" parameterType="Object">
        <!--
               update cm_employee ce set ce.dr = 1 where ce.cp_id = #{cpId} and ce.insurance_state = 'OFF' and ce.fund_state = 'OFF' and ce.emp_id in (${empIds})
        -->
           update cm_employee ce set ce.dr = 1 where ce.cp_id = #{cpId} AND ((ce.insurance_state = 'OFF' AND ce.fund_state = 'OFF')
              OR (ce.insurance_state = 'INCREASING' AND ce.fund_state = 'OFF')
              OR (ce.insurance_state = 'OFF' AND ce.fund_state = 'INCREASING')
              OR (ce.insurance_state = 'INCREASING' AND ce.fund_state = 'INCREASING')
              OR ( ce.insurance_state = 'DECREASED' AND ce.fund_state = 'DECREASED' )
              OR ( ce.insurance_state = 'OFF' AND ce.fund_state = 'DECREASED' )
              OR ( ce.insurance_state = 'DECREASED' AND ce.fund_state = 'OFF' )
              OR ( ce.insurance_state = 'INCREASING' AND ce.fund_state = 'DECREASED' )
              OR ( ce.insurance_state = 'DECREASED' AND ce.fund_state = 'INCREASING' )
            ) and ce.emp_id in (
           select s.emp_id from (
           SELECT cemp.emp_id FROM cm_employee cemp INNER JOIN sps_scheme_emp semp ON semp.emp_id = cemp.emp_id AND cemp.emp_id in (${empIds}) INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id AND scheme.cp_id = #{cpId}
           <if test="authority != 'ALL'">
               AND scheme.scheme_id in (${authority})
           </if>
        UNION ALL
        SELECT cemp.emp_id FROM cm_employee cemp where cemp.emp_id in (${empIds})  AND cemp.cp_id = #{cpId} AND cemp.scheme_id is NULL
        ) s )
               <!--
               update cm_employee ce set ce.dr = 1 where ce.cp_id = #{cpId} and ce.emp_id in (${empIds})
               -->
    </update>

    <!-- 查询调基人员列表Count -->
    <select id="adjustCount" resultType="java.lang.Integer" parameterType="Object">
        select count(t1.emp_id) as value from cm_employee t1
        INNER JOIN sps_scheme_emp semp ON t1.emp_id = semp.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
        where t1.dr=0 and t1.cp_id = #{cpId} and t1.insurance_state='ON'
        <if test="name != null">
            and CONCAT(t1.`name`,t1.identity_code) like #{name}
        </if>
        <if test="authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        order by t1.create_dt desc
    </select>
    <!-- 查询调基人员列表 -->
    <select id="adjustList" resultType="java.util.Map" parameterType="Object">
        select t1.emp_id,t1.`name`,t1.identity_code,t1.insurance_salary,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=1 AND c1.dr = 0),'0') as pension,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=2 AND c1.dr = 0),'0') as medicine,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=3 AND c1.dr = 0),'0') as injury,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=4 AND c1.dr = 0),'0') as unemployment,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.insurance_id=5 AND c1.dr = 0),'0') as maternity,
		(select json from sps_task task1 where task1.task_id =
		  (select max(task.task_id) from sps_task task where task.emp_id = t1.emp_id and task.bstype_id=31 and task.type='COMPLETED' and task.dr=0)) as completed_json,
		(select json from sps_task task1 where task1.task_id =
		  (select max(task.task_id) from sps_task task where task.emp_id = t1.emp_id and task.bstype_id=31 and task.type in ('TODO','ERROR') and task.dr=0)) as todo_json,
        scheme.scheme_id
		from cm_employee t1
        INNER JOIN sps_scheme_emp semp ON t1.emp_id = semp.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
		where t1.dr=0 and t1.cp_id = #{cpId} and t1.insurance_state='ON'
		 <if test="name != null">
            and CONCAT(t1.`name`,t1.identity_code) like #{name}
        </if>
        <if test="authority != 'ALL'"> 
			AND scheme.scheme_id in (${authority})
		</if>
		order by t1.create_dt desc

    </select>

    <!-- 导出 调基人员列表 -->
    <select id="exportAdjust" resultType="java.util.Map" parameterType="Object">
        select t1.emp_id,t1.`name`,t1.identity_code,t1.insurance_salary,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=1 AND c1.dr = 0),'0') as pension,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=2 AND c1.dr = 0),'0') as medicine,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=3 AND c1.dr = 0),'0') as injury,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=4 AND c1.dr = 0),'0') as unemployment,
		IFNULL((select max(c1.insurance_id) from cm_employee_insurance c1
        where c1.emp_id = t1.emp_id and c1.pay_type = 'MONTH' and c1.insurance_id=5 AND c1.dr = 0),'0') as maternity,
		(select json from sps_task task1 where task1.task_id =
		  (select max(task.task_id) from sps_task task where task.emp_id = t1.emp_id and task.bstype_id=31 and task.type='COMPLETED' and task.dr=0)) as completed_json,
		(select json from sps_task task1 where task1.task_id =
		  (select max(task.task_id) from sps_task task where task.emp_id = t1.emp_id and task.bstype_id=31 and task.type in ('TODO','ERROR') and task.dr=0)) as todo_json
		from cm_employee t1
        INNER JOIN sps_scheme_emp semp ON t1.emp_id = semp.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
		where t1.dr=0 and t1.cp_id = #{cpId} and t1.insurance_state='ON'
		 <if test="empids != null">
		 	and t1.emp_id in (${empids})
        </if>
        <if test="authority != 'ALL'"> 
			AND scheme.scheme_id in (${authority})
		</if>
		order by t1.create_dt desc

    </select>

    <!-- 查询公积金 调基人员列表Count -->
    <select id="fundAdjustListCount" resultType="java.lang.Integer" parameterType="Object">
        select count(t1.emp_id) as value from cm_employee t1
        where t1.dr=0 and t1.cp_id = #{cpId} and t1.fund_state='ON'
        <if test="name != null">
            and CONCAT(t1.`name`,t1.identity_code) like #{name}
        </if>
        <if test="authority != 'ALL'">
            AND t1.scheme_id in (${authority})
        </if>
        order by t1.create_dt desc
    </select>
    <!-- 查询公积金 调基人员列表 -->
    <select id="fundAdjustList" resultType="java.util.Map" parameterType="Object">
        select t1.emp_id,t1.`name`,t1.identity_code,t1.fund_salary,
        (select json from sps_task task1 where task1.task_id =
		  (select max(task.task_id) from sps_task task where task.emp_id = t1.emp_id and task.bstype_id=32 and task.type='COMPLETED' and task.dr=0)) as completed_json,
		(select json from sps_task task1 where task1.task_id =
		  (select max(task.task_id) from sps_task task where task.emp_id = t1.emp_id and task.bstype_id=32 and task.type in ('TODO','ERROR') and task.dr=0)) as todo_json,
        t1.scheme_id
		from cm_employee t1
		where t1.dr=0 and t1.cp_id = #{cpId} and t1.fund_state='ON'
		 <if test="name != null">
            and CONCAT(t1.`name`,t1.identity_code) like #{name}
        </if>
        <if test="authority != 'ALL'"> 
			AND t1.scheme_id in (${authority})
		</if>
		order by t1.create_dt desc
    </select>
    <!-- 导出 公积金调基人员列表 -->
    <select id="exportFundAdjust" resultType="java.util.Map" parameterType="Object">
        select t1.emp_id,t1.`name`,t1.identity_code,t1.fund_salary,
        (select json from sps_task task1 where task1.task_id =
		  (select max(task.task_id) from sps_task task where task.emp_id = t1.emp_id and task.bstype_id=32 and task.type='COMPLETED' and task.dr=0)) as completed_json,
		(select json from sps_task task1 where task1.task_id =
		  (select max(task.task_id) from sps_task task where task.emp_id = t1.emp_id and task.bstype_id=32 and task.type in ('TODO','ERROR') and task.dr=0)) as todo_json
		from cm_employee t1
		where t1.dr=0 and t1.cp_id = #{cpId} and t1.fund_state='ON'
		 <if test="empids != null">
		 	and t1.emp_id in (${empids})
        </if>
        <if test="authority != 'ALL'"> 
			AND t1.scheme_id in (${authority})
		</if>
		order by t1.create_dt desc

    </select>


    <!-- 查询服务商员工 记录数 -->
<select id="findSpEmpListCount" resultType="java.lang.Integer">
	SELECT count(1) as value
	from cm_employee ce INNER join sps_scheme_emp sse on ce.emp_id=sse.emp_id
	INNER JOIN sps_scheme scheme on scheme.scheme_id=sse.scheme_id and scheme.cp_id=ce.cp_id
	LEFT JOIN bs_area area on scheme.area_id = area.area_id
	LEFT JOIN sys_dictitem item ON item.area_id = scheme.area_id AND item.dictionary = 93 AND
	item.`code` = ce.insurance_living_type
	where ce.cp_id = #{cpId} and ce.dr=0
	<if test="name != null">
            and CONCAT(ce.`name`,ce.identity_code) like CONCAT('%',#{name},'%')
    </if>
    <if test="beginDate != null">
        	and date_format(sse.modify_dt,'%Y-%m-%d')   &gt;= #{beginDate}
    </if>
    <if test="endDate != null">
        	and date_format(sse.modify_dt,'%Y-%m-%d')   &lt;= #{endDate}
    </if>
    <if test="areaId !=null ">
	 		and scheme.area_id = #{areaId}
	</if>
	<if test="memo !=null ">
	 		and scheme.memo = #{memo}
	</if>
	<if test="spId !=null ">
	 		and scheme.sp_id = #{spId}
	</if>
</select>
<!-- 查询服务商员工列表  ,导出列表时候查询也会用-->
<select id="findSpEmpList" resultType="java.util.Map" parameterType="Object">
	SELECT 
	TRUNCATE(t.empPayment,2) as empPayment,
	TRUNCATE(t.corpPayment,2) as corpPayment,
    TRUNCATE((TRUNCATE(t.empPayment,2) + TRUNCATE(t.corpPayment,2) + t.price), 2) as total,t.*
	FROM (
	select scheme.scheme_id,scheme.sp_id,
	scheme.area_id areaId,area.`name` as areaName,
	IFNULL(scheme.price,0) as price,
	ce.emp_id as empId,ce.cp_id,
	IFNULL(ce.branch,'--') as branch,
  	IFNULL(item.`name`, '--') AS livingType,
	IFNULL(ce.identity_type, '--') AS identityType,
  	ce.`name`,ce.identity_code as identityCode,
  	date_format(sse.modify_dt,'%Y-%m-%d') as create_date,
	sse.modify_dt AS createDt,
	if(DATE_FORMAT(now(), '%e')>scheme.end_date,
		if(sse.modify_dt > date_format(now(),CONCAT('%Y-%m-',scheme.end_date)) ,'Y','N' ),
		if(sse.modify_dt > date_add(date_format(now(),CONCAT('%Y-%m-',scheme.end_date)), interval -1 MONTH),'Y','N' )
	) as isNew,
	ce.modify_dt AS modifyDt,
  	IFNULL(ce.mobile,'') as mobile ,
	scheme.memo,
	IFNULL(ce.insurance_salary, '--') AS insurance_salary,
	IFNULL(ce.fund_salary, '--') AS fund_salary,
	CASE ce.insurance_state
        WHEN 'ON'     THEN '在缴'
        WHEN 'DECREASING'     THEN '在缴'
        WHEN 'OFF'     THEN '未缴'
        WHEN 'DECREASED'     THEN '封存'
        ELSE '未缴' END AS insuranceState,
	CASE ce.fund_state
		WHEN 'ON'     THEN '在缴'
        WHEN 'DECREASING'     THEN '在缴'
        WHEN 'OFF'     THEN '未缴'
        WHEN 'DECREASED'     THEN '封存'
        ELSE '未缴' END  AS fundState,
	 (select
            sum(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
            (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
            (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                (CASE WHEN 'ROUND' = ar.psn_calc_method THEN
                ROUND(detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),2)
                WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision = 0 THEN
                CEIL(detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )))
                WHEN 'CEIL' = ar.psn_calc_method AND ar.psn_precision > 0 THEN
                case WHEN substring(substring_index(
                detail.emp_payment/(12.00 /(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),'.',-1),(ar.psn_precision+1),1) > 0 THEN
                CASE WHEN ar.psn_precision = 1 THEN
                TRUNCATE ((detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )) + 0.09),ar.psn_precision)
                WHEN ar.psn_precision = 2 THEN
                TRUNCATE ((detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )) + 0.009),ar.psn_precision)
                END
                END
                WHEN 'FLOOR' = ar.psn_calc_method THEN
                TRUNCATE(detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),ar.psn_precision)
                ELSE
                ROUND(detail.emp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),ar.psn_precision)
                END)
                else TRUNCATE(detail.emp_payment,2) end)
                else 0 end)
                else TRUNCATE(detail.emp_payment,2) end)
        FROM cm_employee cee
        LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
        left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
        inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id
        WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
        AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
        AND IFNULL(detail.end_period, '2099-09') ) as empPayment,
        (select
            SUM(case when 'MONTH_ANNUALY'=ar.`billing_cycle` or 'YEAR_ANNUALY'=ar.`billing_cycle` then
            (case when month(NOW())=ar.`pay_period` or date_format(NOW(),'%Y-%m')=(select min(ccc.`begin_period`) from `cm_employee_insurance` ccc inner join `bs_arearatio` aaa on ccc.`ratio_id` = aaa.`ratio_id` and aaa.`billing_cycle` in ('MONTH_ANNUALY','YEAR_ANNUALY') where ccc.emp_id = ce.emp_id and ccc.insurance_id = detail.insurance_id and ccc.dr=0) then
            (case when 'MONTH_ANNUALY'=ar.`billing_cycle` then
                (CASE WHEN 'ROUND' = ar.corp_calc_method THEN
                    ROUND(detail.corp_payment/(12.00/(
                    case when
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                    )),2)
                WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision = 0 THEN
                    CEIL(detail.corp_payment/(12.00/(
                    case when
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                    (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                    )))
                WHEN 'CEIL' = ar.corp_calc_method AND ar.corp_precision > 0 THEN
                case WHEN substring(substring_index(
                detail.corp_payment/(12.00 /(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),'.',-1),(ar.corp_precision+1),1) > 0 THEN
                CASE WHEN ar.corp_precision = 1 THEN
                TRUNCATE ((detail.corp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )) + 0.09),ar.corp_precision)
                WHEN ar.corp_precision = 2 THEN
                TRUNCATE ((detail.corp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )) + 0.009),ar.corp_precision)
                END

                END
                WHEN 'FLOOR' = ar.corp_calc_method THEN
                TRUNCATE(detail.corp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),ar.corp_precision)
                ELSE
                ROUND(detail.corp_payment/(12.00/(
                case when
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) &lt;=0 then
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) + 12 else
                (ar.`pay_period`-month(str_to_date(NOW(),'%Y-%m'))) end
                )),ar.corp_precision)
                END)
                else TRUNCATE(detail.corp_payment,2) end)
                else 0 end)
                else TRUNCATE(detail.corp_payment,2) end)
        FROM cm_employee cee
        LEFT JOIN cm_employee_insurance detail ON detail.emp_id = cee.emp_id AND detail.dr = 0
        left join bs_arearatio ar on detail.`ratio_id`=ar.`ratio_id` and ar.`dr`=0
        inner JOIN bd_insurance bi ON bi.insurance_id = detail.insurance_id
        WHERE cee.emp_id = ce.emp_id AND cee.dr = 0
        AND date_format(NOW(),'%Y-%m') BETWEEN detail.begin_period
        AND IFNULL(detail.end_period, '2099-09') ) as corpPayment
	from cm_employee ce INNER join sps_scheme_emp sse on ce.emp_id=sse.emp_id
	INNER JOIN sps_scheme scheme on scheme.scheme_id=sse.scheme_id and scheme.cp_id=ce.cp_id
	LEFT JOIN bs_area area on scheme.area_id = area.area_id
	LEFT JOIN sys_dictitem item ON item.area_id = scheme.area_id AND item.dictionary = 93 AND
	item.`code` = ce.insurance_living_type
	where ce.cp_id = #{cpId} and ce.dr=0
	<if test="name != null">
            and CONCAT(ce.`name`,ce.identity_code) like CONCAT('%',#{name},'%')
    </if>
    <if test="beginDate != null">
        	and date_format(sse.modify_dt,'%Y-%m-%d')   &gt;= #{beginDate}
    </if>
    <if test="endDate != null">
        	and date_format(sse.modify_dt,'%Y-%m-%d')   &lt;= #{endDate}
    </if>
    <if test="areaId !=null ">
	 		and scheme.area_id = #{areaId}
	</if>
	<if test="memo !=null ">
	 		and scheme.memo = #{memo}
	</if>
	<if test="spId !=null ">
	 		and scheme.sp_id = #{spId}
	</if>
	<if test="empids != null">
		 	and ce.emp_id in (${empids})
     </if>
     )t

</select>


    <select id="queryCorpAllEmps" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT emp.emp_id,emp.`name`,emp.identity_code,scheme.scheme_id,scheme.sp_id FROM cm_employee emp INNER JOIN sps_scheme_emp semp ON emp.emp_id = semp.emp_id AND emp.cp_id = #{cpId} AND emp.dr = 0 INNER JOIN sps_scheme scheme ON semp.scheme_id = scheme.scheme_id AND scheme.dr = 0
    </select>


    <select id="findEmpByIdCard" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE
        where dr=0 AND cp_id = #{cpId}
        <if test="name != null"> AND name = #{name} </if>
        <if test="identityCode != null">AND identity_code = #{identityCode}</if>
        <if test="mobile != null and mobile != ''"> AND mobile = #{mobile}</if>
    </select>

    <select id="findSpServiceByEmpCpId" resultType="java.util.Map" parameterType="Object">
        select ss.sp_id as spId, sp.sp_name as spName from `cm_employee` ce
        inner join `sps_scheme_emp` sse on sse.emp_id = ce.emp_id
        inner join `sps_scheme` ss on ss.`scheme_id` = sse.`scheme_id` and ss.`sp_id` != -999
        <if test="authority != 'ALL'">
            AND ss.scheme_id in (${authority})
        </if>
        inner join `sp_service` sp on ss.sp_id = sp.sp_id
        where ce.cp_id = #{cpId} group by ss.`sp_id`
    </select>

    <!-- 参保人员趋势图 -->
    <select id="QUERY_EMP_TREND" resultType="java.util.Map" parameterType="Object">

        select t.period, t.insurance_fund_type,count(DISTINCT t.emp_id) as empNum from (
        select p.period AS period,
        'INSURANCE_ALL' as insurance_fund_type,
        emp.emp_id , emp.`insurance_state`, emp.`fund_state`

        from (
        <foreach collection="months" index="index"  separator="UNION ALL" item="list">
            SELECT #{list} AS period
        </foreach>
        ) p
        left join cm_employee emp on (p.period BETWEEN date_format(emp.entry_time,'%Y-%m') AND '2099-09')
        <if test="areaId!=null and areaId != -1">
            INNER JOIN sps_scheme_emp semp ON semp.emp_id = emp.emp_id
            INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
            AND scheme.area_id = #{areaId}
        </if>
        <if test="areaId!=null and areaId != -1 and authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        AND emp.cp_id = #{cpId}
        and emp.dr = 0

        where emp.insurance_state != 'DECREASED'
        group by emp.emp_id, p.period

        UNION ALL

        select p.period AS period,
        'FUND_ALL' as insurance_fund_type,
        emp.emp_id , emp.`insurance_state`, emp.`fund_state`

        from (
        <foreach collection="months" index="index"  separator="UNION ALL" item="list">
            SELECT #{list} AS period
        </foreach>
        ) p
        left join cm_employee emp on (p.period BETWEEN date_format(emp.entry_time,'%Y-%m') AND '2099-09')
        <if test="areaId!=null and areaId != -1">
            INNER JOIN sps_scheme_emp semp ON semp.emp_id = emp.emp_id
            INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
            AND scheme.area_id = #{areaId}
        </if>
        <if test="areaId!=null and areaId != -1 and authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        AND emp.cp_id = #{cpId}
        and emp.dr = 0

        where emp.`fund_state` != 'DECREASED'
        group by emp.emp_id, p.period

        ) t group by insurance_fund_type, t.period

        UNION ALL

        SELECT p.period AS period,
        bins.insurance_fund_type,
        count(DISTINCT t.emp_id) AS empNum
        FROM   (
        <foreach collection="months" index="index"  separator="UNION ALL" item="list">
            SELECT #{list} AS period
        </foreach>
        ) p
        LEFT JOIN (SELECT ins.*
        FROM   cm_employee_insurance ins
        INNER JOIN cm_employee emp
        ON emp.emp_id = ins.emp_id
        AND emp.dr = 0
        AND ins.dr = 0
        AND emp.cp_id = #{cpId}
        AND ins.pay_type = 'MONTH') t
        ON p.period BETWEEN t.begin_period AND Ifnull(t.end_period, '2099-09')
        INNER JOIN bd_insurance bins ON t.insurance_id = bins.insurance_id
        INNER JOIN sps_scheme_emp semp ON semp.emp_id = t.emp_id
        INNER JOIN sps_scheme scheme ON scheme.scheme_id = semp.scheme_id
        <if test="areaId!=null and areaId != -1">
            AND scheme.area_id = #{areaId}
        </if>
        <if test="authority != 'ALL'">
            AND scheme.scheme_id in (${authority})
        </if>
        WHERE  1 = 1 GROUP BY bins.insurance_fund_type, p.period
    </select>

     <!-- 根据企业微信ID和企业ID获取人员信息 -->
    <select id="findByWechatId" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
    	SELECT <include refid="Base_Column_List" />
    	FROM CM_EMPLOYEE
    	WHERE cp_id=#{cpId} and wechat_id=#{wechatId}
    	lock in share mode
    </select>

    <!-- 获取 -->
    <select id="queryUnRelationEmps" resultMap="result_map_CM_EMPLOYEE" parameterType="Object">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        cm_employee
        WHERE
        `name` = (
        SELECT
        `name`
        FROM
        cm_employee_org
        WHERE
        id IN
        <foreach item="empid" index="index" collection="synEmpIds" open="(" separator="," close=")">
            #{empid}
        </foreach>
        GROUP BY
        `name`,
        identity_code
        )
        AND cp_id = #{cpId} and dr = 0;
    </select>


</mapper>


