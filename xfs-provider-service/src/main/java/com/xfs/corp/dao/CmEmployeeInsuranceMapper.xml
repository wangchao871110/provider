<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CM_EMPLOYEE_INSURANCE" > 
<!-- Result Map-->
<resultMap id="result_map_CM_EMPLOYEE_INSURANCE" type="com.xfs.corp.model.CmEmployeeInsurance" >
	<result column="id" property="id"/>
	<result column="emp_id" property="empId"/>
	<result column="insurance_id" property="insuranceId"/>
	<result column="emp_payment" property="empPayment"/>
	<result column="corp_payment" property="corpPayment"/>
	<result column="emp_ratio" property="empRatio"/>
	<result column="corp_ratio" property="corpRatio"/>
	<result column="create_by" property="createBy"/>
	<result column="create_dt" property="createDt"/>
	<result column="modify_by" property="modifyBy"/>
	<result column="modify_dt" property="modifyDt"/>
	<result column="dr" property="dr"/>
	<result column="begin_period" property="beginPeriod"/>
	<result column="end_period" property="endPeriod"/>
	<result column="begin_task" property="beginTask"/>
	<result column="end_task" property="endTask"/>
	<result column="ratio_id" property="ratioId"/>
	<result column="emp_paybase" property="empPaybase"/>
	<result column="corp_paybase" property="corpPaybase"/>
	<result column="corp_addition" property="corpAddition"/>
	<result column="psn_addition" property="psnAddition"/>
	<result column="period" property="period"/>
	<result column="pay_type" property="payType"/>
</resultMap>
       
<!-- cm_employee_insurance table all fields -->
<sql id="Base_Column_List" >
	 id,emp_id,insurance_id,period,pay_type,emp_payment,corp_payment,emp_ratio,corp_ratio,create_by,create_dt,modify_by,modify_dt,dr,begin_period,end_period,begin_task,end_task,ratio_id,emp_paybase,corp_paybase,corp_addition,psn_addition
</sql>

<!-- 查询条件 -->
<sql id="Example_Where_Clause">
  <trim prefix=" WHERE " prefixOverrides="AND ">
	<if test="id != null" >and id = #{id}</if>
	<if test="empId != null" >and emp_id = #{empId}</if>
	<if test="insuranceId != null" >and insurance_id = #{insuranceId}</if>
	  <if test="period != null" >and period = #{period}</if>
	  <if test="payType != null" >and pay_type = #{payType}</if>
	<if test="empPayment != null" >and emp_payment = #{empPayment}</if>
	<if test="corpPayment != null" >and corp_payment = #{corpPayment}</if>
	<if test="empRatio != null" >and emp_ratio = #{empRatio}</if>
	<if test="corpRatio != null" >and corp_ratio = #{corpRatio}</if>
	<if test="createBy != null" >and create_by = #{createBy}</if>
	<if test="createDt != null" >and create_dt = #{createDt}</if>
	<if test="modifyBy != null" >and modify_by = #{modifyBy}</if>
	<if test="modifyDt != null" >and modify_dt = #{modifyDt}</if>
	<if test="dr != null" >and dr = #{dr}</if>
	<if test="beginPeriod != null" >and begin_period = #{beginPeriod}</if>
	<if test="endPeriod != null" >and end_period = #{endPeriod}</if>
	<if test="beginTask != null" >and begin_task = #{beginTask}</if>
	<if test="endTask != null" >and end_task = #{endTask}</if>
	<if test="ratioId != null" >and ratio_id = #{ratioId}</if>
	<if test="empPaybase != null" >and emp_paybase = #{empPaybase}</if>
	<if test="corpPaybase != null" >and corp_paybase = #{corpPaybase}</if>
	<if test="corpAddition != null" >and corp_addition = #{corpAddition}</if>
	<if test="psnAddition != null" >and psn_addition = #{psnAddition}</if>
</trim>
</sql>


<!-- 插入记录 -->
<insert id="InsertCM_EMPLOYEE_INSURANCE" parameterType="Object" >
  INSERT INTO CM_EMPLOYEE_INSURANCE (
  <trim prefix=" " prefixOverrides=",">
	<if test="id != null ">,id</if>
	<if test="empId != null ">,emp_id</if>
	<if test="insuranceId != null ">,insurance_id</if>
	  <if test="period != null ">,period</if>
	  <if test="payType != null ">,pay_type</if>
	<if test="empPayment != null ">,emp_payment</if>
	<if test="corpPayment != null ">,corp_payment</if>
	<if test="empRatio != null ">,emp_ratio</if>
	<if test="corpRatio != null ">,corp_ratio</if>
	<if test="createBy != null ">,create_by</if>
	<if test="createDt != null ">,create_dt</if>
	<if test="modifyBy != null ">,modify_by</if>
	<if test="modifyDt != null ">,modify_dt</if>
	<if test="dr != null ">,dr</if>
	<if test="beginPeriod != null ">,begin_period</if>
	<if test="endPeriod != null ">,end_period</if>
	<if test="beginTask != null ">,begin_task</if>
	<if test="endTask != null ">,end_task</if>
	<if test="ratioId != null ">,ratio_id</if>
	<if test="empPaybase != null ">,emp_paybase</if>
	<if test="corpPaybase != null ">,corp_paybase</if>
	<if test="corpAddition != null ">,corp_addition</if>
	<if test="psnAddition != null ">,psn_addition</if>
  </trim>
  )  VALUES (
  <trim prefix=" " prefixOverrides=",">
	<if test="id != null ">,#{id}</if>
	<if test="empId != null ">,#{empId}</if>
	<if test="insuranceId != null ">,#{insuranceId}</if>
	  <if test="period != null ">,#{period}</if>
	  <if test="payType != null ">,#{payType}</if>
	<if test="empPayment != null ">,#{empPayment}</if>
	<if test="corpPayment != null ">,#{corpPayment}</if>
	<if test="empRatio != null ">,#{empRatio}</if>
	<if test="corpRatio != null ">,#{corpRatio}</if>
	<if test="createBy != null ">,#{createBy}</if>
	<if test="createDt != null ">,#{createDt}</if>
	<if test="modifyBy != null ">,#{modifyBy}</if>
	<if test="modifyDt != null ">,#{modifyDt}</if>
	<if test="dr != null ">,#{dr}</if>
	<if test="beginPeriod != null ">,#{beginPeriod}</if>
	<if test="endPeriod != null ">,#{endPeriod}</if>
	<if test="beginTask != null ">,#{beginTask}</if>
	<if test="endTask != null ">,#{endTask}</if>
	<if test="ratioId != null ">,#{ratioId}</if>
	<if test="empPaybase != null ">,#{empPaybase}</if>
	<if test="corpPaybase != null ">,#{corpPaybase}</if>
	<if test="corpAddition != null ">,#{corpAddition}</if>
	<if test="psnAddition != null ">,#{psnAddition}</if>
  </trim>
  )
  <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
	SELECT LAST_INSERT_ID() AS ID
  </selectKey>
</insert>

<!-- 根据id，修改记录-->  
<update id="UpdateCM_EMPLOYEE_INSURANCE" parameterType="Object" >
UPDATE CM_EMPLOYEE_INSURANCE 
  <trim prefix=" SET " prefixOverrides=",">
	id=#{id}
	,emp_id=#{empId}
	,insurance_id=#{insuranceId}
	,emp_payment=#{empPayment}
	,corp_payment=#{corpPayment}
	,emp_ratio=#{empRatio}
	,corp_ratio=#{corpRatio}
	,create_by=#{createBy}
	,create_dt=#{createDt}
	,modify_by=#{modifyBy}
	,modify_dt=#{modifyDt}
	,dr=#{dr}
	,begin_period=#{beginPeriod}
	,end_period=#{endPeriod}
	,begin_task=#{beginTask}
	,end_task=#{endTask}
	,ratio_id=#{ratioId}
	,emp_paybase=#{empPaybase}
	,corp_paybase=#{corpPaybase}
	,corp_addition=#{corpAddition}
	,psn_addition=#{psnAddition}
  </trim>
WHERE ID=#{id}
</update>
 
<!-- 删除记录 -->
<delete id="DeleteCM_EMPLOYEE_INSURANCE">DELETE FROM CM_EMPLOYEE_INSURANCE WHERE ID=#{id}</delete>
<!-- 员工、险种关联表 列表总数-->
<select id="CountFindAllCM_EMPLOYEE_INSURANCE" resultType="java.lang.Integer">SELECT count(1) as value FROM CM_EMPLOYEE_INSURANCE</select>
<select id="CountCM_EMPLOYEE_INSURANCE" resultType="java.lang.Integer">SELECT count(1) as value FROM CM_EMPLOYEE_INSURANCE WHERE ID=#{id}</select>
<!-- 根据id查询 员工、险种关联表 -->
<select id="FindByPK" resultMap="result_map_CM_EMPLOYEE_INSURANCE" parameterType="Object">SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE_INSURANCE WHERE ID=#{id}</select>

<!-- 根据各字段条件带模糊查询  员工、险种关联表 -->
<select id="FreeFindCM_EMPLOYEE_INSURANCE" resultMap="result_map_CM_EMPLOYEE_INSURANCE" parameterType="Object">
	SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE_INSURANCE 
	 <include refid="Example_Where_Clause" />
</select>
<!-- 根据各字段条件带模糊查询  员工、险种关联表 记录数 -->
<select id="CountFreeFindCM_EMPLOYEE_INSURANCE" resultType="java.lang.Integer">
SELECT count(1) as value FROM CM_EMPLOYEE_INSURANCE 
 <include refid="Example_Where_Clause" />
</select>
<!-- 根据各字段条件带排序  员工、险种关联表 -->
<select id="FreeFindCM_EMPLOYEE_INSURANCEOrdered" resultMap="result_map_CM_EMPLOYEE_INSURANCE" parameterType="Object">
	SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE_INSURANCE 
	 <include refid="Example_Where_Clause" />
	 ORDER BY ${_orderBy}
</select>

<!-- *****************************  温馨提示：  ***************************** -->
<!-- **                                                                    ** -->
<!-- ** 以上为自动生成代码，请勿改动或删除。如有新sql添加请在下方区域内填写** -->
<!-- **                                             ** 2016/08/08 11:19:48 ** -->
<!-- ************************************************************************ -->
	<!-- 员工详情 缴费详情 五险一金-->
	<select id="FreeFindCM_EMPLOYEE_INSURANCE_By_Emp" resultType="java.util.Map" parameterType="Object">
	
		<foreach collection="lists" index="index"  separator="UNION ALL" item="list">
			(SELECT #{list} as year,baa.name as area_name,ins.name as pname,eins.pay_base,eins.emp_paybase,
			ins.insurance_id as insurance_id,ins.insurance_fund_type as type,
					eins.corp_paybase,eins.emp_payment,eins.corp_payment,eins.emp_ratio,
					eins.corp_ratio,bb.insurance_rule,bb.fund_rule 
			FROM CM_EMPLOYEE_INSURANCE eins 
			INNER JOIN BD_INSURANCE ins ON eins.insurance_id = ins.insurance_id AND eins.pay_type = 'MONTH'
			INNER JOIN cm_employee ce on ce.emp_id =#{empId}
			INNER JOIN sps_scheme_emp semp ON semp.emp_id = ce.emp_id and semp.dr = 0 and semp.state='USE'
			INNER JOIN sps_scheme sche ON sche.scheme_id = semp.scheme_id
			INNER JOIN bs_area ba ON ba.area_id = sche.area_id
			INNER JOIN bs_area baa on baa.area_id = ba.belong_city
			INNER JOIN bd_billrule bb on bb.area_id = ba.belong_city
			WHERE #{list} BETWEEN begin_period AND IFNULL(end_period,'2099-12')  AND eins.emp_id =#{empId} and eins.dr=0
			<if test="null != productName">and ins.name =#{productName}</if>
			)
		</foreach>
		order by year,type DESC,insurance_id;
	    <!-- select ins.id as id,  bi.name as insurance_name, ins.emp_paybase as emp_paybase, ins.corp_paybase as corp_paybase, ins.emp_ratio as emp_ratio, ins.emp_payment as emp_payment,ins.corp_ratio as corp_ratio,  ins.corp_payment as corp_payment,begin_period,end_period,begin_task,end_task
	    from cm_employee_insurance ins  left join bd_insurance bi on ins.insurance_id = bi.insurance_id
	    where
	    ifnull(ins.dr,0) = 0
	    <if test="empId != null ">and ins.emp_id =#{empId}</if>
	    <if test="beginPeriodEq != null ">and ins.begin_period &lt;=#{beginPeriodEq}</if>
	    <if test="endPeriodEq != null ">and ins.end_period &gt;=#{endPeriodEq}</if> -->
	</select>
	<!-- 员工详情 缴费详情 产品名称 -->
	<select id="findProductNameList" resultType="java.util.Map" parameterType="Object">
			SELECT DISTINCT ins.name as pname
			FROM CM_EMPLOYEE_INSURANCE eins 
			INNER JOIN BD_INSURANCE ins ON eins.insurance_id = ins.insurance_id AND eins.pay_type = 'MONTH'
			WHERE  eins.emp_id =#{empId} and eins.dr=0
	</select>
	<!-- 员工详情 缴费详情 服务费 -->
	<select id="FreeFindCM_EMPLOYEE_SERVICE_CHARGE" resultType="java.util.Map" parameterType="Object">
		SELECT schem.* FROM sp_cm_relation rel 
		INNER JOIN CM_EMPLOYEE ce on ce.emp_id = #{empId}
		INNER JOIN SP_CM_RELATION scp on scp.cp_id = ce.cp_id
		INNER JOIN SPS_SCHEME schem ON rel.sp_id = schem.sp_id AND rel.cp_id = schem.cp_id AND rel.sp_id = scp.sp_id AND rel.cp_id = ce.cp_id
		INNER JOIN SPS_SCHEME_EMP schem_emp ON schem.scheme_id = schem_emp.scheme_id AND schem_emp.emp_id = 92569;
	</select>
	<!-- 作废期间以后的员工险种记录 -->  
	<update id="cancelCM_EMPLOYEE_INSURANCE_by_EmpIds_and_afterPeriod" parameterType="Object" >
		UPDATE CM_EMPLOYEE_INSURANCE set dr = 1
		WHERE dr = 0 and begin_period &gt;= #{period} and emp_id in
        <foreach item="empid" index="index" collection="empIds" open="(" separator="," close=")">
            #{empid}
        </foreach> 
        and insurance_id in
        <foreach item="insuranceId" index="index" collection="insuranceIds" open="(" separator="," close=")">
            #{insuranceId}
        </foreach>
		AND pay_type = 'MONTH'
	</update>
 	<!-- 结束员工险种记录 -->  
	<update id="endCM_EMPLOYEE_INSURANCE_by_EmpIds_and_Period" parameterType="Object" >
		UPDATE CM_EMPLOYEE_INSURANCE set end_period = #{period}
        <if test="taskid != null ">, end_task = #{taskid}</if>
		WHERE dr = 0 and ((ifnull(begin_period,'1900-01') &lt;= #{period} and ifnull(end_period,'2099-12') &gt;= #{period})or(end_period is null)) and emp_id in
        <foreach item="empid" index="index" collection="empIds" open="(" separator="," close=")">
            #{empid}
        </foreach> 
        and insurance_id in
        <foreach item="insuranceId" index="index" collection="insuranceIds" open="(" separator="," close=")">
            #{insuranceId}
        </foreach>
		AND pay_type = 'MONTH'
	</update>
 
    <select id="find_CM_EMPLIST_BY_EMPIDS_and_Period" resultMap ="result_map_CM_EMPLOYEE_INSURANCE" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE_INSURANCE 
        where dr=0
		<if test="payType == 'PATCH'">
			AND begin_period &gt;= #{beginperiod} and ifnull(end_period,'2099-12') &lt;= #{endperiod}
		</if>
        <if test="beginperiod != null and payType != 'PATCH'">
        	and begin_period &lt;= #{beginperiod} 
        </if>
		<if test="payType != null ">
			and pay_type = #{payType}
		</if>
        <if test="endperiod != null and payType != 'PATCH'">
        	and ifnull(end_period,'2099-12') &gt;= #{endperiod}
        </if>
        and emp_id in
        <foreach item="empid" index="index" collection="empIds" open="(" separator="," close=")">
            #{empid}
        </foreach>
		<if test="insuranceIds != null">
        and insurance_id in
        <foreach item="insuranceId" index="index" collection="insuranceIds" open="(" separator="," close=")">
            #{insuranceId}
        </foreach>
		</if>
    </select>


	<!-- 结束员工险种 将开始时间大于离职时间的记录 至为删除 -->
	<update id="endCM_EMPLOYEE_INSURANCE_SET_DR" parameterType="Object" >
		UPDATE CM_EMPLOYEE_INSURANCE set dr = 1
		<if test="taskid != null ">, end_task = #{taskid}</if>
		<if test="period != null ">, end_period = #{period}</if>
		WHERE dr = 0 and (ifnull(begin_period,'1900-01') > #{period}) and emp_id in
		<foreach item="empid" index="index" collection="empIds" open="(" separator="," close=")">
			#{empid}
		</foreach>
		and pay_type = 'MONTH'
		and insurance_id in
		<foreach item="insuranceId" index="index" collection="insuranceIds" open="(" separator="," close=")">
			#{insuranceId}
		</foreach>
	</update>

	<select id="findEmployeeInsuranceByEmployee" resultMap ="result_map_CM_EMPLOYEE_INSURANCE" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE_INSURANCE
		where dr=0
		and emp_id in
		<foreach item="empid" index="index" collection="empIds" open="(" separator="," close=")">
			#{empid}
		</foreach>
		and pay_type = 'MONTH'
		<if test="insuranceId != null">
			and insurance_id in
			<foreach item="insuranceId" index="index" collection="insuranceIds" open="(" separator="," close=")">
				#{insuranceId}
			</foreach>
		</if>
		ORDER  BY  insurance_id
	</select>

	<update id="UpdateCM_EMPLOYEE_INSURANCE_INFO" parameterType="Object" >
	UPDATE CM_EMPLOYEE_INSURANCE set dr = #{dr} WHERE emp_id=#{empId} AND  insurance_id=#{insuranceId} AND  dr = 0  AND pay_type = 'MONTH'
	</update>

	<update id="DeleteCM_EMPLOYEE_INSURANCE_BY_empId" parameterType="Object" >
		UPDATE CM_EMPLOYEE_INSURANCE set dr = 1 WHERE emp_id=#{empId} AND dr = 0 AND pay_type = 'MONTH'
	</update>
	
	<select id="findEmpInsFundDetailByEmpid" resultType="com.xfs.corp.dto.EmplnsFundDetailDto">
		select ci.id as id
		,e.`three_id` as empId
		,ci.`insurance_id` as insuranceId
		,i.`name` as insuranceName
		,i.`insurance_fund_type` as insuranceFundType
		,i.code as insuranceCode
		,ci.`emp_payment` as empPayment
		,ci.`psn_addition` as empAddition
		,ci.`corp_payment` as corpPayment
		,ci.`corp_addition` as corpAddition
		,ar.`billing_cycle` as billingCycle
		,ar.`pay_period` as payPeriod
		,e.`fund_period` as fundPeriod
		,e.`insurance_period` as insurancePeriod
		,ci.`begin_period` as beginPeriod
		,ci.`end_period` as endPeriod
		from cm_employee_insurance ci 
		inner join cm_employee e on ci.`emp_id`=e.`emp_id` and e.dr=0 and ci.pay_type = 'MONTH'
		left join bs_arearatio ar on ci.`ratio_id`=ar.`ratio_id` and ar.`dr`=0 
		left join bd_insurance i on ci.`insurance_id`=i.`insurance_id`
		where ci.`emp_id`=#{empId} and ci.dr = 0
		<if test="month!=null">
		and ci.begin_period &lt;= #{month} and ifnull(ci.end_period,'2099-12') &gt;= #{month}
		</if>
		<if test="month==null">
			AND date_format(NOW(),'%Y-%m') BETWEEN ci.begin_period
			AND IFNULL(ci.end_period, '2099-09')
		</if>
		<if test="insuranceFundType!=null">
		and i.`insurance_fund_type`=#{insuranceFundType}
		</if>
		order by ci.`emp_id` desc, ci.`insurance_id`
    </select>

	<!-- 查询正在使用（未结束）的费用段 -->
	<select id="findInsuranceByEmpId" resultMap="result_map_CM_EMPLOYEE_INSURANCE" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM CM_EMPLOYEE_INSURANCE WHERE
		emp_id = #{empId}
		and (end_period is NULL or end_period &gt;= #{endPeriod})
		and dr = 0 and pay_type = 'MONTH'
	</select>

	<update id="updateEndPeriod" parameterType="Object">
		update `cm_employee_insurance` cei
		inner join bd_insurance bi on cei.`insurance_id` = bi.`insurance_id` and cei.pay_type = 'MONTH'
		set cei.end_period = #{endPeriod},cei.modify_by=#{modifyBy},cei.modify_dt=#{modifyDt}
		where cei.`emp_id` = #{empId}
		and (cei.end_period is NULL or cei.end_period &gt;= #{endPeriod})
		and cei.dr = 0
		<if test="insuranceFundType!=null and insuranceFundType!=''">
			and bi.`insurance_fund_type` = #{insuranceFundType}
		</if>
	</update>
</mapper>
