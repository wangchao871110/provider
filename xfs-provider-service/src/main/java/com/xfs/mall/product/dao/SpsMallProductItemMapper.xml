<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SPS_MALL_PRODUCT_ITEM" >
	<!-- Result Map-->
	<resultMap id="result_map_SPS_MALL_PRODUCT_ITEM" type="com.xfs.mall.product.model.SpsMallProductItem" >
		<result column="id" property="id"/>
		<result column="product_id" property="productId"/>
		<result column="item_id" property="itemId"/>
		<result column="feetype" property="feetype"/>
		<result column="price" property="price"/>
		<result column="create_by" property="createBy"/>
		<result column="create_dt" property="createDt"/>
		<result column="modify_by" property="modifyBy"/>
		<result column="modify_dt" property="modifyDt"/>
		<result column="dr" property="dr"/>
		<result column="is_required" property="isRequired"/>
	</resultMap>

	<!-- sps_mall_product_item table all fields -->
	<sql id="Base_Column_List" >
		id,product_id,item_id,feetype,price,create_by,create_dt,modify_by,modify_dt,dr,is_required
	</sql>

	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		<trim prefix=" WHERE " prefixOverrides="AND ">
			<if test="id != null" >and id = #{id}</if>
			<if test="productId != null" >and product_id = #{productId}</if>
			<if test="itemId != null" >and item_id = #{itemId}</if>
			<if test="feetype != null" >and feetype = #{feetype}</if>
			<if test="price != null" >and price = #{price}</if>
			<if test="createBy != null" >and create_by = #{createBy}</if>
			<if test="createDt != null" >and create_dt = #{createDt}</if>
			<if test="modifyBy != null" >and modify_by = #{modifyBy}</if>
			<if test="modifyDt != null" >and modify_dt = #{modifyDt}</if>
			<if test="dr != null" >and dr = #{dr}</if>
			<if test="isRequired != null" >and is_required = #{isRequired}</if>
		</trim>
	</sql>

<!-- 查询条件 带模糊查询 以及 时间起始查询 -->
<sql id="Example_Where_Clause2">
  <trim prefix=" WHERE " prefixOverrides="AND ">
    <if test="id != null">AND id = #{id}</if>
    <if test="productId != null">AND product_id = #{productId}</if>
    <if test="itemId != null">AND item_id = #{itemId}</if>
    <if test="feetype != null">AND feetype like '%${feetype}%'</if>
    <if test="feetypeEq != null">AND feetype = #{feetypeEq}</if>
    <if test="price != null">AND price like '%${price}%'</if>
    <if test="createBy != null">AND create_by = '%${createBy}%'</if>
    <if test="createDt != null">AND create_dt = #{createDt}</if>
    <if test="createDtFrom != null">AND create_dt&gt;=#{createDtFrom}</if>
	<if test="createDtTo != null">AND create_dt&lt;=#{createDtTo}</if>
    <if test="modifyBy != null">AND modify_by = '%${modifyBy}%'</if>
    <if test="modifyDt != null">AND modify_dt = #{modifyDt}</if>
    <if test="modifyDtFrom != null">AND modify_dt&gt;=#{modifyDtFrom}</if>
	<if test="modifyDtTo != null">AND modify_dt&lt;=#{modifyDtTo}</if>
    <if test="dr != null">AND dr = #{dr}</if>
    <if test="isRequired != null">AND is_required like '%${isRequired}%'</if>
    <if test="isRequiredEq != null">AND is_required = #{isRequiredEq}</if>
  </trim>
</sql>

	<!-- 插入记录 -->
	<insert id="InsertSPS_MALL_PRODUCT_ITEM" parameterType="Object" >
		INSERT INTO SPS_MALL_PRODUCT_ITEM (
		<trim prefix=" " prefixOverrides=",">
			<if test="id != null ">,id</if>
			<if test="productId != null ">,product_id</if>
			<if test="itemId != null ">,item_id</if>
			<if test="feetype != null ">,feetype</if>
			<if test="price != null ">,price</if>
			<if test="createBy != null ">,create_by</if>
			<if test="createDt != null ">,create_dt</if>
			<if test="modifyBy != null ">,modify_by</if>
			<if test="modifyDt != null ">,modify_dt</if>
			<if test="dr != null ">,dr</if>
			<if test="isRequired != null ">,is_required</if>
		</trim>
		)  VALUES (
		<trim prefix=" " prefixOverrides=",">
			<if test="id != null ">,#{id}</if>
			<if test="productId != null ">,#{productId}</if>
			<if test="itemId != null ">,#{itemId}</if>
			<if test="feetype != null ">,#{feetype}</if>
			<if test="price != null ">,#{price}</if>
			<if test="createBy != null ">,#{createBy}</if>
			<if test="createDt != null ">,#{createDt}</if>
			<if test="modifyBy != null ">,#{modifyBy}</if>
			<if test="modifyDt != null ">,#{modifyDt}</if>
			<if test="dr != null ">,#{dr}</if>
			<if test="isRequired != null ">,#{isRequired}</if>
		</trim>
		)
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS ID
		</selectKey>
	</insert>

	<!-- 根据id，修改记录-->
	<update id="UpdateSPS_MALL_PRODUCT_ITEM" parameterType="Object" >
		UPDATE SPS_MALL_PRODUCT_ITEM
		<trim prefix=" SET " prefixOverrides=",">
			<if test="id != null ">,id=#{id}</if>
			<if test="productId != null ">,product_id=#{productId}</if>
			<if test="itemId != null ">,item_id=#{itemId}</if>
			<if test="feetype != null ">,feetype=#{feetype}</if>
			<if test="price != null ">,price=#{price}</if>
			<if test="createBy != null ">,create_by=#{createBy}</if>
			<if test="createDt != null ">,create_dt=#{createDt}</if>
			<if test="modifyBy != null ">,modify_by=#{modifyBy}</if>
			<if test="modifyDt != null ">,modify_dt=#{modifyDt}</if>
			<if test="dr != null ">,dr=#{dr}</if>
			<if test="isRequired != null ">,is_required=#{isRequired}</if>
		</trim>
		WHERE ID=#{id}
	</update>

	<!-- 删除记录 -->
	<delete id="DeleteSPS_MALL_PRODUCT_ITEM">DELETE FROM SPS_MALL_PRODUCT_ITEM WHERE ID=#{id}</delete>
	<!-- sps_mall_product_item 列表总数-->
	<select id="CountFindAllSPS_MALL_PRODUCT_ITEM" resultType="java.lang.Integer">SELECT count(1) as value FROM SPS_MALL_PRODUCT_ITEM</select>
	<select id="CountSPS_MALL_PRODUCT_ITEM" resultType="java.lang.Integer">SELECT count(1) as value FROM SPS_MALL_PRODUCT_ITEM WHERE ID=#{id}</select>
	<!-- 根据id查询 sps_mall_product_item -->
	<select id="FindByPK" resultMap="result_map_SPS_MALL_PRODUCT_ITEM" parameterType="Object">SELECT <include refid="Base_Column_List" /> FROM SPS_MALL_PRODUCT_ITEM WHERE ID=#{id}</select>

	<!-- 根据各字段条件带模糊查询  sps_mall_product_item -->
	<select id="FreeFindSPS_MALL_PRODUCT_ITEM" resultMap="result_map_SPS_MALL_PRODUCT_ITEM" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM SPS_MALL_PRODUCT_ITEM
		<include refid="Example_Where_Clause2" />
	</select>
	<!-- 根据各字段条件带模糊查询  sps_mall_product_item 记录数 -->
	<select id="CountFreeFindSPS_MALL_PRODUCT_ITEM" resultType="java.lang.Integer">
		SELECT count(1) as value FROM SPS_MALL_PRODUCT_ITEM
		<include refid="Example_Where_Clause2" />
	</select>
	<!-- 根据各字段条件带排序  sps_mall_product_item -->
	<select id="FreeFindSPS_MALL_PRODUCT_ITEMOrdered" resultMap="result_map_SPS_MALL_PRODUCT_ITEM" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM SPS_MALL_PRODUCT_ITEM
		<include refid="Example_Where_Clause2" />
		ORDER BY ${_orderBy}
	</select>

<!-- *****************************  温馨提示：  ***************************** -->
<!-- **                                                                    ** -->
<!-- ** 以上为自动生成代码，请勿改动或删除。如有新sql添加请在下方区域内填写** -->
<!-- **                                             ** 2016/06/07 12:08:16 ** -->
<!-- ************************************************************************ -->

<!-- 根据产品id查询产品的服务项 -->
<select id="FindSPS_MALL_PRODUCT_ITEM" resultType="java.util.Map" parameterType="Object">
	SELECT mi.`item_id`, mpi.`product_id`,mi.`content`, mi.`item_name`, mpi.`feetype`, mpi.`price`, mpi.`is_required`, mic.category_type,
			IFNULL(GROUP_CONCAT(DISTINCT a.`name`), GROUP_CONCAT(DISTINCT tmp.`name`)) AS area_names
			FROM sps_mall_product_item mpi
			INNER JOIN bs_mall_item mi ON mpi.`item_id` = mi.`item_id` AND mi.`dr` = 0
			INNER JOIN bs_mall_item_category mic ON mi.category_id = mic.category_id
			LEFT JOIN bs_mall_itemarea mia ON mi.`item_id` = mia.`item_id`
			LEFT JOIN bs_area a ON mia.`area_id` = a.`area_id`
			LEFT JOIN (SELECT -1 AS area_id, '全国' AS `name` FROM DUAL) tmp ON mia.`area_id` = tmp.`area_id`
			WHERE mpi.`dr` = 0 AND mpi.`product_id` in (#{productId})
			GROUP BY mi.`item_id`
			ORDER BY mpi.`feetype` DESC, mpi.`id` ASC
</select>

	<!-- 根据产品ids查询产品的服务项 -->
	<select id="FindSPS_MALL_PRODUCT_ITEM_BY_PRODUCTIDS" resultMap="result_map_SPS_MALL_PRODUCT_ITEM" parameterType="Object">
		SELECT <include refid="Base_Column_List" /> FROM sps_mall_product_item mpi
		WHERE mpi.`dr` = 0 AND mpi.`product_id` IN(${_productIds})
	</select>
	
	<!-- 根据项目ID(productId)  查询产品关联表 和 项目表 中关联的数据-->
<select id="FindAllByProductId" resultType="java.util.Map" parameterType="Object">
	select bmi.item_name, smpi.* 
	from sps_mall_product_item smpi 
	inner join bs_mall_item bmi on smpi.item_id = bmi.item_id 
	where smpi.product_id=#{productId}
	order by smpi.id
</select>

<!-- 删除记录 -->
<delete id="RemoveByProductId">DELETE FROM SPS_MALL_PRODUCT_ITEM WHERE product_id=#{productId}</delete>

	<insert id="batchInsert" parameterType="java.util.List" >
		INSERT INTO SPS_MALL_PRODUCT_ITEM (product_id,item_id,feetype,price,modify_by,modify_dt,is_required,dr) VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.productId},#{item.itemId},#{item.feetype},#{item.price},#{item.modifyBy},#{item.modifyDt},#{item.isRequired},#{item.dr})
		</foreach>

	</insert>
	
	<!-- 根据项目ID(productId)和区域ID  查询项目-->
<select id="findAllByProductIdAndAreaId" resultType="java.util.Map" parameterType="Object">
	SELECT mi.item_id, mi.item_name,mpi.price,mpi.feetype FROM sps_mall_product mp
		INNER JOIN sps_mall_product_item mpi ON mp.product_id = mpi.product_id
		INNER JOIN sps_mall_productarea mpa ON mp.product_id = mpa.product_id
		INNER JOIN bs_mall_item mi ON mpi.item_id = mi.item_id 
		inner join bs_mall_item_category c on mi.category_id = c.category_id 
	WHERE mp.product_id = #{productId} AND mpa.area_id = #{itemId}
</select>

</mapper>   
